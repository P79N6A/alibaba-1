package com.sun3d.why.dao;

import java.util.List;
import java.util.Map;

import com.sun3d.why.model.BpCarousel;
import com.sun3d.why.model.BpInfoTag;

public interface BpInfoTagMapper {
	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table bp_info_tag
	 *
	 * @mbggenerated Tue Aug 15 11:31:29 CST 2017
	 */
	int deleteByPrimaryKey(String tagId);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table bp_info_tag
	 *
	 * @mbggenerated Tue Aug 15 11:31:29 CST 2017
	 */
	int insert(BpInfoTag record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table bp_info_tag
	 *
	 * @mbggenerated Tue Aug 15 11:31:29 CST 2017
	 */
	int insertSelective(BpInfoTag record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table bp_info_tag
	 *
	 * @mbggenerated Tue Aug 15 11:31:29 CST 2017
	 */
	BpInfoTag selectByPrimaryKey(String tagId);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table bp_info_tag
	 *
	 * @mbggenerated Tue Aug 15 11:31:29 CST 2017
	 */
	int updateByPrimaryKeySelective(BpInfoTag record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table bp_info_tag
	 *
	 * @mbggenerated Tue Aug 15 11:31:29 CST 2017
	 */
	int updateByPrimaryKey(BpInfoTag record);

	/**
	 * 总页数
	 * 
	 * @param pageMap
	 * @return
	 */
	int queryTotal(Map<String, Object> pageMap);

	/**
	 * 当前页数据集合
	 * 
	 * @param pageMap
	 * @return
	 */
	List<BpInfoTag> queryListByMap(Map<String, Object> pageMap);

	/**
	 * 查找父标签
	 * 
	 * @param paraMap
	 * @return
	 */
	List<BpInfoTag> queryPTagByStatus(Map<String, Object> paraMap);

	/**
	 * 查找子标签
	 * 
	 * @param parentId
	 * @return
	 */
	List<BpInfoTag> queryListByParentId(String parentId);

	/**
	 * 根据资讯id查处父标签
	 * @param infoId
	 * @return
	 */
	BpInfoTag queryParentTagByInfoId(String infoId);

	/**
	 * 根据父标签查找子标签
	 * @param tagId
	 * @return
	 */
	List<BpInfoTag> queryChildTagByParentId(String tagId);

	/**
	 * 根据父标签编码查找子标签编码集合
	 * @param module
	 * @return
	 */
	List<BpInfoTag> queryChildTagByCode(String module);
	List<BpInfoTag> queryChildTagByTagCode(String tagCode);
	List<BpInfoTag> queryTagsByModule(String module);

}