<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sun3d.why.dao.CmsActivityMapper">
    <resultMap id="BaseResultMap" type="com.sun3d.why.model.CmsActivity">
        <id column="ACTIVITY_ID" property="activityId" jdbcType="VARCHAR"/>
        <result column="ACTIVITY_NAME" property="activityName"
                jdbcType="VARCHAR"/>
        <result column="ACTIVITY_LINKMAN" property="activityLinkman"
                jdbcType="VARCHAR"/>
        <result column="ACTIVITY_TYPE" property="activityType"
                jdbcType="VARCHAR"/>
        <result column="ACTIVITY_TEL" property="activityTel" jdbcType="VARCHAR"/>
        <result column="ACTIVITY_ICON_URL" property="activityIconUrl"
                jdbcType="VARCHAR"/>
        <result column="ACTIVITY_PROVINCE" property="activityProvince"
                jdbcType="VARCHAR"/>
        <result column="ACTIVITY_CITY" property="activityCity"
                jdbcType="VARCHAR"/>
        <result column="ACTIVITY_AREA" property="activityArea"
                jdbcType="VARCHAR"/>
        <result column="ACTIVITY_ADDRESS" property="activityAddress"
                jdbcType="VARCHAR"/>
        <result column="ACTIVITY_LON" property="activityLon" jdbcType="DOUBLE"/>
        <result column="ACTIVITY_LAT" property="activityLat" jdbcType="DOUBLE"/>
        <result column="ACTIVITY_TIME" property="activityTime"
                jdbcType="VARCHAR"/>
        <result column="ACTIVITY_IS_FREE" property="activityIsFree"
                jdbcType="INTEGER"/>
        <result column="ACTIVITY_PRICE" property="activityPrice"
                jdbcType="VARCHAR"/>
        <result column="ACTIVITY_PAY_PRICE" jdbcType="DECIMAL" property="activityPayPrice"/>
        <result column="ACTIVITY_IS_DETAILS" property="activityIsDetails"
                jdbcType="INTEGER"/>
        <result column="ACTIVITY_IS_RESERVATION" property="activityIsReservation"
                jdbcType="INTEGER"/>
        <result column="ACTIVITY_RESERVATION_COUNT" property="activityReservationCount"
                jdbcType="INTEGER"/>
        <result column="ACTIVITY_START_TIME" property="activityStartTime"
                jdbcType="VARCHAR"/>
        <result column="ACTIVITY_END_TIME" property="activityEndTime"
                jdbcType="VARCHAR"/>
        <result column="ACTIVITY_IS_DEL" property="activityIsDel"
                jdbcType="INTEGER"/>
        <result column="ACTIVITY_STATE" property="activityState"
                jdbcType="INTEGER"/>
        <result column="PUBLIC_TIME" property="PublicTime"
                jdbcType="TIMESTAMP"/>
        <result column="ACTIVITY_CREATE_TIME" property="activityCreateTime"
                jdbcType="TIMESTAMP"/>
        <result column="ACTIVITY_UPDATE_TIME" property="activityUpdateTime"
                jdbcType="TIMESTAMP"/>
        <result column="ACTIVITY_CREATE_USER" property="activityCreateUser"
                jdbcType="VARCHAR"/>
        <result column="ACTIVITY_UPDATE_USER" property="activityUpdateUser"
                jdbcType="VARCHAR"/>
        <result column="ACTIVITY_DEPT" property="activityDept"
                jdbcType="LONGVARCHAR"/>
        <result column="ACTIVITY_RECOMMEND" property="activityRecommend"
                jdbcType="VARCHAR"/>
        <result column="ACTIVITY_RECOMMEND_USERID" property="activityRecommendUserId"
                jdbcType="VARCHAR"/>
        <!-- <result column="ACTIVITY_RECOMMEND_AREA" property="activityRecommendArea"
			jdbcType="VARCHAR"/> -->
        <result column="WEEK_BROWSE_COUNT" property="weekBrowseCount"
                jdbcType="INTEGER"/>
        <result column="MONTH_BROWSE_COUNT" property="monthBrowseCount"
                jdbcType="INTEGER"/>
        <result column="year_browse_count" property="yearBrowseCount"
                jdbcType="INTEGER"/>
        <result column="year_collect_count" property="yearCollectCount"
                jdbcType="INTEGER"/>
        <result column="RATINGS_INFO" property="ratingsInfo" jdbcType="VARCHAR"/>
        <result column="venue_id" property="venueId" jdbcType="VARCHAR"/>
        <result column="venue_name" property="venueName" jdbcType="VARCHAR"/>
        <result column="venue_type" property="venueType" jdbcType="VARCHAR"/>
        <result column="venue_area" property="venueArea" jdbcType="VARCHAR"/>
        <result column="user_account" property="userAccount" jdbcType="VARCHAR"/>
        <result column="user_account2" property="userAccount2" jdbcType="VARCHAR"/>
        <result column="ACTIVITY_MEMO" property="activityMemo"
                jdbcType="LONGVARCHAR"/>
        <result column="ACTIVITY_CONTENT" property="activityContent"
                jdbcType="LONGVARCHAR"/>
        <result column="ACTIVITY_CROWD" property="activityCrowd"
                jdbcType="LONGVARCHAR"/>
        <result column="ACTIVITY_MOOD" property="activityMood"
                jdbcType="LONGVARCHAR"/>
        <result column="ACTIVITY_TIME_DES" property="activityTimeDes"
                jdbcType="VARCHAR"/>
        <result column="ACTIVITY_SALES_ONLINE" property="activitySalesOnline"
                jdbcType="VARCHAR"/>
        <result column="ACTIVITY_Count" property="activityCount"
                jdbcType="VARCHAR"/>
        <result column="ACTIVITY_LOCATION" property="activityLocation"
                jdbcType="VARCHAR"/>
        <result column="SYS_NO" property="sysNo"
                jdbcType="VARCHAR"/>
        <result column="SYS_ID" property="sysId"
                jdbcType="VARCHAR"/>
        <result column="SYS_URL" property="sysUrl" jdbcType="VARCHAR"/>
        <result column="AVAILABLE_COUNT" property="availableCount" jdbcType="INTEGER"/>
        <result column="ACTIVITY_RECOMMEND_TIME" property="activityRecommendTime"
                jdbcType="TIMESTAMP"/>
        <result column="PUBLIC_TIME" property="publicTime"
                jdbcType="TIMESTAMP"/>
        <result column="RECOMMEND_ID" property="recommendId" jdbcType="VARCHAR"/>

        <result column="TICKET_SETTINGS" property="ticketSettings" jdbcType="VARCHAR"/>
        <result column="TICKET_NUMBER" property="ticketNumber" jdbcType="INTEGER"/>
        <result column="TICKET_COUNT" property="ticketCount" jdbcType="INTEGER"/>
        <!--app新添加字段 -->
        <result column="EVENT_DATE" property="eventDate" jdbcType="VARCHAR"/>
        <result column="eventimes" property="eventimes" jdbcType="VARCHAR"/>
        <result column="eventIds" property="eventIds" jdbcType="VARCHAR"/>
        <result column="dateNums" property="dateNums" jdbcType="INTEGER"/>
        <result column="EVENT_COUNT" property="eventCount" jdbcType="INTEGER"/>
        <result column="CREATE_ACTIVITY_CODE" property="createActivityCode" jdbcType="INTEGER"/>
        <result column="ACTIVITY_THEME" property="activityTheme" jdbcType="VARCHAR"/>
        <result column="ACTIVITY_HOST" property="activityHost" jdbcType="VARCHAR"/>
        <result column="ACTIVITY_ORGANIZER" property="activityOrganizer" jdbcType="VARCHAR"/>
        <result column="ACTIVITY_COORGANIZER" property="activityCoorganizer" jdbcType="VARCHAR"/>
        <result column="ACTIVITY_PERFORMED" property="activityPerformed" jdbcType="VARCHAR"/>
        <result column="ACTIVITY_PROMPT" property="activityPrompt" jdbcType="VARCHAR"/>
        <result column="ACTIVITY_SPEAKER" property="activitySpeaker" jdbcType="VARCHAR"/>
        <result column="ACTIVITY_PERSONAL" property="activityPersonal" jdbcType="INTEGER"/>
        <result column="ACTIVITY_ATTACHMENT" property="activityAttachment" jdbcType="LONGVARCHAR"/>
        <result column="ACTIVITY_NOTICE" property="activityNotice" jdbcType="VARCHAR"/>

        <result column="ACTIVITY_TERMINAL_USER_ID" property="activityTerminalUserId" jdbcType="VARCHAR"/>
        <!--app新添加字段 -->
        <result column="eventDateTimes" property="eventDateTimes" jdbcType="VARCHAR"/>
        <result column="EVENT_DATE" property="eventDate" jdbcType="VARCHAR"/>
        <result column="eventimes" property="eventimes" jdbcType="VARCHAR"/>
        <result column="eventIds" property="eventIds" jdbcType="VARCHAR"/>
        <result column="TAG_COLOR" property="tagColor" jdbcType="VARCHAR"/>
        <result column="TAG_INITIAL" property="tagInitial" jdbcType="VARCHAR"/>
        <result column="collectNum" property="collectNum" jdbcType="INTEGER"/>
        <result column="EVENT_COUNT" property="eventCount" jdbcType="INTEGER"/>
        <result column="CREATE_ACTIVITY_CODE" property="createActivityCode" jdbcType="INTEGER"/>
        <result column="TAG_ID" property="tagId" jdbcType="VARCHAR"/>
        <result column="TAG_NAME" property="tagName" jdbcType="VARCHAR"/>
        <result column="TAG_IMAGE_URL" property="tagImageUrl" jdbcType="VARCHAR"/>
        <result column="ACTIVITY_THEME" property="activityTheme" jdbcType="VARCHAR"/>
        <result column="ACTIVITY_HOST" property="activityHost" jdbcType="VARCHAR"/>
        <result column="ACTIVITY_ORGANIZER" property="activityOrganizer" jdbcType="VARCHAR"/>
        <result column="ACTIVITY_COORGANIZER" property="activityCoorganizer" jdbcType="VARCHAR"/>
        <result column="ACTIVITY_PERFORMED" property="activityPerformed" jdbcType="VARCHAR"/>
        <result column="ACTIVITY_PROMPT" property="activityPrompt" jdbcType="VARCHAR"/>
        <result column="ACTIVITY_SPEAKER" property="activitySpeaker" jdbcType="VARCHAR"/>
        <result column="ACTIVITY_PERSONAL" property="activityPersonal" jdbcType="INTEGER"/>
        <result column="ACTIVITY_ATTACHMENT" property="activityAttachment" jdbcType="LONGVARCHAR"/>
        <result column="ACTIVITY_SITE" property="activitySite" jdbcType="VARCHAR"/>
        <result column="ACTIVITY_SUBJECT" property="activitySubject" jdbcType="VARCHAR"/>
        <result column="TEMPL_ID" property="templId" jdbcType="VARCHAR"/>
        <result column="PRICE_DESCRIBE" property="priceDescribe" jdbcType="VARCHAR"/>
        <result column="dict_name" property="dictName" jdbcType="VARCHAR"/>
        <result column="max_date_time" property="maxDateTime" jdbcType="VARCHAR"/>
        <result column="activity_is_reserved" property="activityIsReserved" jdbcType="INTEGER"/>
        <result column="order_or_collect" property="orderOrCollect" jdbcType="INTEGER"/>
        <!--app字段 end -->

        <result column="IDENTITY_CARD" property="identityCard" jdbcType="INTEGER"/>
        <result column="PRICE_TYPE" property="priceType" jdbcType="INTEGER"/>
        <result column="LOWEST_CREDIT" property="lowestCredit" jdbcType="INTEGER"/>
        <result column="COST_CREDIT" property="costCredit" jdbcType="INTEGER"/>
        <result column="DEDUCTION_CREDIT" property="deductionCredit" jdbcType="INTEGER"/>
        <result column="SPIKE_TYPE" property="spikeType" jdbcType="INTEGER"/>
        <result column="SINGLE_EVENT" property="singleEvent" jdbcType="INTEGER"/>
        <result column="ASSN_ID" property="assnId" jdbcType="VARCHAR"/>
        <result column="END_TIME_POINT" property="endTimePoint" jdbcType="VARCHAR"/>
        <result column="ACTIVITY_SMS_TYPE" property="activitySmsType" jdbcType="INTEGER"/>
        <result column="ACTIVITY_SUPPLEMENT_TYPE" jdbcType="INTEGER" property="activitySupplementType"/>
        <result column="START_TIME" property="startTime" jdbcType="TIMESTAMP"/>
        <result column="END_TIME" property="endTime" jdbcType="TIMESTAMP"/>
        <result column="ACTIVITY_CUSTOM_INFO" property="activityCustomInfo" jdbcType="VARCHAR"/>
        <result column="CANCEL_END_TIME" jdbcType="TIMESTAMP" property="cancelEndTime" />
    </resultMap>
    
    <!-- 分页信息 -->
    <sql id="pagination_condition">
		limit ${firstResult},${rows}
	</sql>

    <!-- count -->
    <select id="queryCountActivityByCondition" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(1) from(
        select a.activity_id,
        IF(EXISTS(SELECT 1 FROM cms_activity_event cae WHERE cae.activity_id = a.activity_id and LEFT(cae.event_date_time,16) &gt;DATE_FORMAT(NOW(),'%Y-%m-%d %H:%i:%S')),0,1) as is_end
        from cms_activity a
        where a.activity_state = 6 AND a.activity_is_del = 1
       <if test="startTime != null">
            and a.activity_end_time &gt;= #{startTime}
        </if>
        <if test="endTime != null">
            and a.activity_start_time &lt;= #{endTime}
        </if>
        <if test="activityArea != null">
            and a.activity_area like #{activityArea}
            <if test="activityLocation != null">
                and a.activity_location = #{activityLocation}
            </if>
        </if>
        <if test="activityName != null">
            and a.activity_Name like #{activityName}
        </if>
        <if test="sortType == 2">
            and EXISTS(SELECT 1 FROM cms_activity_event cae WHERE cae.activity_id = a.activity_id and LEFT(cae.event_date_time,16) &gt;DATE_FORMAT(NOW(),'%Y-%m-%d %H:%i:%S'))
        </if>
        <if test="sortType == 3">
            and a.END_TIME_POINT &gt; DATE_FORMAT(NOW(), '%Y-%m-%d')
        </if>
        <if test="bookType == 1">
            and a.activity_is_reservation = 2
        </if>
        <if test="bookType == 0">
            and a.activity_is_reservation = 1
        </if>
        <if test="activityType != null">
            and a.activity_type LIKE #{activityType}
        </if>
        group by a.activity_id
        <if test="ifeffective != null and ifeffective ==1">
            HAVING CONVERT(substring(GROUP_CONCAT(DISTINCT b.event_date_time ORDER BY b.event_date_time DESC),1,16),CHAR)>= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
        </if>
        ) aa
    </select>



    <!--后台sql -->

    <!-- 查询后台活动列表信息 new -->
    <select id="queryCmsActivityByAdminCondition" resultMap="BaseResultMap"
            parameterType="java.util.Map">
        SELECT a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        a.ACTIVITY_IS_FREE,
        a.ACTIVITY_PRICE,
        a.ACTIVITY_TYPE,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_END_TIME,
        a.ACTIVITY_STATE,
        a.ACTIVITY_CREATE_TIME,
        a.ACTIVITY_UPDATE_TIME,
        a.ACTIVITY_CREATE_USER,
        a.ACTIVITY_UPDATE_USER,
        a.ACTIVITY_AREA,
        a.ACTIVITY_DEPT,
        a.ACTIVITY_IS_DEL,
        a.ACTIVITY_IS_RESERVATION,
        a.ACTIVITY_SUPPLEMENT_TYPE,
        a.CREATE_ACTIVITY_CODE,
        a.activity_Recommend,
        v.venue_name AS venue_name,
        v.venue_area AS
        venue_area,
        u.user_account AS user_account,
        uu.user_account AS user_account2,
        a.ACTIVITY_TIME_DES,
        a.ACTIVITY_SALES_ONLINE,
        a.ACTIVITY_PERSONAL,
        a.SYS_ID,
        a.SYS_NO,
        a.ACTIVITY_SITE,
        a.ACTIVITY_SUBJECT,
        a.TEMPL_ID,
        sd.RECOMMEND_ID,
        sdb.RECOMMEND_ID AS ACTIVITY_THEME,
        asd.RECOMMEND_ID AS venue_id,
        a.RATINGS_INFO,
        d.dict_name as dictName,
        (select SUM(c.AVAILABLE_COUNT) FROM cms_activity_event c

        where a.activity_id = c.activity_id GROUP BY c.activity_id)as ACTIVITY_Count

        FROM cms_activity a

        LEFT JOIN (SELECT b.activity_id,
        SUM(b.AVAILABLE_COUNT) AS AVAILABLE_COUNT
        FROM cms_activity_event b
        GROUP BY b.activity_id) c on a.activity_id = c.activity_id

        LEFT join sys_dict d on a.RATINGS_INFO=d.dict_id
        LEFT JOIN sys_user u ON a.activity_create_user = u.user_id
        LEFT JOIN cms_activity_venue_relevance r ON r.activity_id = a.activity_id
        LEFT JOIN cms_venue v ON v.venue_id = r.venue_id
        LEFT JOIN sys_user uu ON a.activity_update_user = uu.user_id
        LEFT JOIN (
        SELECT
        RECOMMEND_ID,
        RELATED_ID
        FROM
        cms_recommend_related
        where RECOMMEND_COLUMN_TYPE = 4
        and TOP_TYPE != 1
        ) sd ON a.ACTIVITY_ID = sd.RELATED_ID
        LEFT JOIN (
        SELECT
        RECOMMEND_ID,
        RELATED_ID
        FROM
        cms_recommend_related
        where RECOMMEND_COLUMN_TYPE = 3
        and TOP_TYPE != 1
        ) sdb ON a.ACTIVITY_ID = sdb.RELATED_ID
        LEFT JOIN (
        SELECT
        RECOMMEND_ID,
        RELATED_ID
        FROM
        cms_recommend_related
        where TOP_TYPE = 1
        <if test="activityType != null ">
            AND TOP_ID like #{activityType,jdbcType=VARCHAR}
        </if>
        ) asd ON a.ACTIVITY_ID = asd.RELATED_ID
        WHERE 1=1
        <if test="activityId != null">
            AND a.ACTIVITY_ID = #{activityId,jdbcType=INTEGER}
        </if>
        <if test="ratingsInfo != null">
            AND a.RATINGS_INFO = #{ratingsInfo,jdbcType=INTEGER}
        </if>
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR}
        </if>
        <if test="venueName != null">
            AND v.VENUE_NAME like #{venueName,jdbcType=VARCHAR}
        </if>
        <if test="activityArea != null">
            AND a.ACTIVITY_AREA like #{activityArea,jdbcType=VARCHAR}
        </if>
        <if test="venueArea != null">
            AND v.venue_area like #{venueArea,jdbcType=VARCHAR}
        </if>
        <if test="venueType != null">
            AND v.venue_type = #{venueType,jdbcType=VARCHAR}
        </if>
        <if test="venueId != null">
            AND v.venue_id = #{venueId,jdbcType=VARCHAR}
        </if>
        <if test="availableCount == 1">
            AND c.AVAILABLE_COUNT &gt; 0
        </if>
        <if test="availableCount == 0">
            AND (c.AVAILABLE_COUNT is NULL or c.AVAILABLE_COUNT=0 )
        </if>
        <if test="activityStartTime !=null">
            <if test="activityIsDetails == 3">
                AND GREATEST(a.ACTIVITY_START_TIME, (
                CASE a.ACTIVITY_END_TIME
                WHEN a.ACTIVITY_END_TIME IS NULL THEN
                a.ACTIVITY_START_TIME
                WHEN a.ACTIVITY_END_TIME = '' THEN
                a.ACTIVITY_START_TIME
                ELSE
                a.ACTIVITY_END_TIME
                END
                ))
                &gt;= str_to_date(
                #{activityStartTime,jdbcType=VARCHAR},
                '%Y-%m-%d'
                )
            </if>
            <if test="activityIsDetails == 1">
                AND #{activityStartTime,jdbcType=VARCHAR} &lt;= a.PUBLIC_TIME
            </if>
            <if test="activityIsDetails == 2">
                AND #{activityStartTime,jdbcType=VARCHAR} &lt;= a.ACTIVITY_CREATE_TIME
            </if>
            <if test="activityIsDetails == null">
                AND #{activityStartTime,jdbcType=VARCHAR} &lt;= a.ACTIVITY_UPDATE_TIME
            </if>
        </if>
        <if test="activityEndTime !=null">
            <if test="activityIsDetails == 3">
                AND least(a.ACTIVITY_START_TIME,(
                CASE a.ACTIVITY_END_TIME
                WHEN a.ACTIVITY_END_TIME IS NULL THEN
                a.ACTIVITY_START_TIME
                WHEN a.ACTIVITY_END_TIME = '' THEN
                a.ACTIVITY_START_TIME
                ELSE
                a.ACTIVITY_END_TIME
                END
                )) &lt;=
                #{activityEndTime,jdbcType=VARCHAR}
            </if>
            <if test="activityIsDetails == 1">
                AND #{activityEndTime,jdbcType=VARCHAR} &gt;= a.PUBLIC_TIME
            </if>
            <if test="activityIsDetails == 2">
                AND #{activityEndTime,jdbcType=VARCHAR} &gt;= a.ACTIVITY_CREATE_TIME
            </if>
            <if test="activityIsDetails == null">
                AND #{activityEndTime,jdbcType=VARCHAR} &gt;= a.ACTIVITY_UPDATE_TIME
            </if>
        </if>
        <if test="activityDept != null ">
            AND a.ACTIVITY_DEPT like #{activityDept,jdbcType=VARCHAR}
        </if>
        <!-- 多部门路径时-->
        <if test="activityDepts != null ">
            AND
            <foreach item="item" index="index" collection="activityDepts"
                     open="(" separator=" " close=")">
                <if test="index != 0">
                    OR
                </if>
                a.ACTIVITY_DEPT like CONCAT('','${item.shareDepthPath}','%' )

            </foreach>
        </if>
        <if test="activityType != null ">
            AND a.ACTIVITY_TYPE like #{activityType,jdbcType=VARCHAR}
        </if>
        <!-- <if test="activityRecommendArea != null "> AND a.ACTIVITY_RECOMMEND_Area
			like #{activityRecommendArea,jdbcType=VARCHAR} </if> -->
        <if test="activityIsFree != null ">
            AND a.activity_Is_Free =
            #{activityIsFree,jdbcType=INTEGER}
        </if>
        <if test="activitySalesOnline != null ">
            AND a.activity_Sales_Online =
            #{activitySalesOnline,jdbcType=VARCHAR}
        </if>
        <if test="activityIsReservation != null ">
            AND a.ACTIVITY_IS_RESERVATION =
            #{activityIsReservation,jdbcType=INTEGER}
        </if>
        <if test="activitySupplementType != null">
            AND a.ACTIVITY_SUPPLEMENT_TYPE = #{activitySupplementType,jdbcType=INTEGER}
        </if>
        <if test="activityPersonal != null">
            and a.ACTIVITY_PERSONAL = #{activityPersonal,jdbcType=INTEGER}
        </if>
        <if test="templId != null">
            and a.TEMPL_ID = #{templId,jdbcType=INTEGER}
        </if>
        <!-- 
        GROUP BY a.ACTIVITY_ID
         -->
        order by
        <if test="activityRecommend != null ">
            a.ACTIVITY_RECOMMEND desc , a.ACTIVITY_UPDATE_TIME desc
        </if>
        <if test="activityRecommend == null ">
            a.ACTIVITY_UPDATE_TIME desc
        </if>
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>

    <select id="queryCmsActivityUnion" resultMap="BaseResultMap" parameterType="java.util.Map">
    SELECT
    a.ACTIVITY_ID,
	a.ACTIVITY_NAME,
	a.ACTIVITY_CREATE_TIME,
	a.ACTIVITY_ICON_URL,
	a.ACTIVITY_ADDRESS
    FROM
	cms_member m
	JOIN cms_member_relation r ON m.id = r.member_id
	AND r.relation_type = 1
	JOIN cms_activity_venue_relevance v ON r.relation_id = v.VENUE_ID
	JOIN cms_activity a ON v.ACTIVITY_ID = a.ACTIVITY_ID
    WHERE
	r.member_id = #{0}
     and   a.ACTIVITY_STATE=6
    and a.ACTIVITY_IS_DEL=1
	ORDER BY a.ACTIVITY_CREATE_TIME desc
	limit
	#{1}
    </select>

    <!-- 查询后台活动列表信息 -->
    <select id="queryCmsActivityByCondition" resultMap="BaseResultMap"
            parameterType="java.util.Map">
        SELECT a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        a.ACTIVITY_IS_FREE,
        a.ACTIVITY_PRICE,
        a.ACTIVITY_TYPE,
        a.ACTIVITY_ICON_URL,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_END_TIME,
        a.ACTIVITY_STATE,
        a.ACTIVITY_CREATE_TIME,
        a.ACTIVITY_UPDATE_TIME,
        a.ACTIVITY_CREATE_USER,
        a.ACTIVITY_UPDATE_USER,
        a.ACTIVITY_AREA,
        a.ACTIVITY_DEPT,
        a.ACTIVITY_IS_RESERVATION,
        a.CREATE_ACTIVITY_CODE,
        a.activity_Recommend,
        v.venue_name AS venue_name,
        v.venue_area AS
        venue_area,
        u.user_account AS user_account,
        uu.user_account AS user_account2,
        a.ACTIVITY_TIME_DES,
        a.ACTIVITY_SALES_ONLINE,
        a.ACTIVITY_PERSONAL,
        a.SYS_ID,
        a.SYS_NO,
        a.ACTIVITY_SITE,
        a.ACTIVITY_SUBJECT,
        a.TEMPL_ID,
        sd.RECOMMEND_ID,
        asd.RECOMMEND_ID AS venue_id
        FROM cms_activity a

        LEFT JOIN
        cms_activity_venue_relevance r ON r.activity_id = a.activity_id
        LEFT
        JOIN cms_venue v ON v.venue_id = r.venue_id
        LEFT JOIN sys_user u ON
        a.activity_create_user = u.user_id
        LEFT JOIN sys_user uu ON
        a.activity_update_user = uu.user_id
        LEFT JOIN (
        SELECT
        RECOMMEND_ID,
        RELATED_ID
        FROM
        cms_recommend_related
        where RECOMMEND_COLUMN_TYPE = 4
        ) sd ON a.ACTIVITY_ID = sd.RELATED_ID
        LEFT JOIN (
        SELECT
        RECOMMEND_ID,
        RELATED_ID
        FROM
        cms_recommend_related
        where TOP_TYPE = 1
        <if test="activityType != null ">
            AND TOP_ID like #{activityType,jdbcType=VARCHAR}
        </if>
        ) asd ON a.ACTIVITY_ID = asd.RELATED_ID
        WHERE 1=1
        <if test="activityId != null">
            AND a.ACTIVITY_ID = #{activityId,jdbcType=INTEGER}
        </if>
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR}
        </if>
        <if test="activityArea != null">
            AND a.ACTIVITY_AREA like #{activityArea,jdbcType=VARCHAR}
        </if>
        <if test="venueArea != null">
            AND v.venue_area like #{venueArea,jdbcType=VARCHAR}
        </if>
        <if test="venueType != null">
            AND v.venue_type = #{venueType,jdbcType=VARCHAR}
        </if>
        <if test="venueId != null">
            AND v.venue_id = #{venueId,jdbcType=VARCHAR}
        </if>
        <if test="activityStartTime !=null">
            AND GREATEST(a.ACTIVITY_START_TIME, (
            CASE a.ACTIVITY_END_TIME
            WHEN a.ACTIVITY_END_TIME IS NULL THEN
            a.ACTIVITY_START_TIME
            WHEN a.ACTIVITY_END_TIME = '' THEN
            a.ACTIVITY_START_TIME
            ELSE
            a.ACTIVITY_END_TIME
            END
            ))
            &gt;= str_to_date(
            #{activityStartTime,jdbcType=VARCHAR},
            '%Y-%m-%d'
            )
        </if>
        <if test="activityEndTime !=null">
            AND least(a.ACTIVITY_START_TIME,(
            CASE a.ACTIVITY_END_TIME
            WHEN a.ACTIVITY_END_TIME IS NULL THEN
            a.ACTIVITY_START_TIME
            WHEN a.ACTIVITY_END_TIME = '' THEN
            a.ACTIVITY_START_TIME
            ELSE
            a.ACTIVITY_END_TIME
            END
            )) &lt;=
            #{activityEndTime,jdbcType=VARCHAR}
        </if>
        <if test="activityDept != null ">
            AND a.ACTIVITY_DEPT like #{activityDept,jdbcType=VARCHAR}
        </if>
        <!-- 多部门路径时-->
        <if test="activityDepts != null ">
            AND
            <foreach item="item" index="index" collection="activityDepts"
                     open="(" separator=" " close=")">
                <if test="index != 0">
                    OR
                </if>
                a.ACTIVITY_DEPT like CONCAT('','${item.shareDepthPath}','%' )

            </foreach>
        </if>
        <if test="activityType != null ">
            AND a.ACTIVITY_TYPE like #{activityType,jdbcType=VARCHAR}
        </if>
        <!-- <if test="activityRecommendArea != null "> AND a.ACTIVITY_RECOMMEND_Area
			like #{activityRecommendArea,jdbcType=VARCHAR} </if> -->
        <if test="activityIsFree != null ">
            AND a.activity_Is_Free =
            #{activityIsFree,jdbcType=INTEGER}
        </if>
        <if test="activitySalesOnline != null ">
            AND a.activity_Sales_Online =
            #{activitySalesOnline,jdbcType=VARCHAR}
        </if>
        <if test="activityIsReservation != null ">
            AND a.ACTIVITY_IS_RESERVATION =
            #{activityIsReservation,jdbcType=INTEGER}
        </if>
        <if test="activityPersonal != null">
            and a.ACTIVITY_PERSONAL = #{activityPersonal,jdbcType=INTEGER}
        </if>
        <if test="templId != null">
            and a.TEMPL_ID = #{templId,jdbcType=INTEGER}
        </if>
        order by
        <if test="activityRecommend != null ">
            a.ACTIVITY_RECOMMEND desc , a.ACTIVITY_UPDATE_TIME desc
        </if>
        <if test="activityRecommend == null ">
            a.ACTIVITY_UPDATE_TIME desc
        </if>
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>


    <!-- 查询后台活动列表信息总条数 -->
    <select id="queryCmsActivityCountByCondition" parameterType="java.util.Map"
            resultType="java.lang.Integer">
        SELECT count(*) FROM cms_activity a
        LEFT JOIN

        (select b.activity_id, SUM(b.AVAILABLE_COUNT) AS AVAILABLE_COUNT from cms_activity as a
        left join cms_activity_event as b on a.ACTIVITY_ID=b.ACTIVITY_ID where a.ACTIVITY_STATE = 1
        AND ( a.ACTIVITY_DEPT like CONCAT('','1.0','%' )) and b.activity_id is not null GROUP BY b.activity_id) c
        on a.activity_id = c.activity_id LEFT JOIN


        cms_activity_venue_relevance r ON r.activity_id = a.activity_id
        LEFT JOIN cms_venue v ON v.venue_id = r.venue_id
        LEFT JOIN sys_user u ON
        a.activity_create_user = u.user_id
        WHERE 1=1
        <if test="availableCount == 1">
            AND c.AVAILABLE_COUNT &gt; 0
        </if>
        <if test="availableCount == 0">
            AND (c.AVAILABLE_COUNT is NULL or c.AVAILABLE_COUNT=0 )
        </if>
        <if test="ratingsInfo != null">
            AND a.RATINGS_INFO = #{ratingsInfo,jdbcType=INTEGER}
        </if>
        <if test="activityId != null">
            AND a.ACTIVITY_ID = #{activityId,jdbcType=INTEGER}
        </if>
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR}
        </if>
        <if test="venueName != null">
            AND v.VENUE_NAME like #{venueName,jdbcType=VARCHAR}
        </if>
        <if test="activityArea != null">
            AND a.ACTIVITY_AREA like #{activityArea,jdbcType=VARCHAR}
        </if>
        <if test="venueArea != null">
            AND v.venue_area like #{venueArea,jdbcType=VARCHAR}
        </if>
        <if test="venueType != null">
            AND v.venue_type = #{venueType,jdbcType=VARCHAR}
        </if>
        <if test="venueId != null">
            AND v.venue_id = #{venueId,jdbcType=VARCHAR}
        </if>
        <if test="activityStartTime !=null">
            <if test="activityIsDetails == 3">
                AND GREATEST(a.ACTIVITY_START_TIME, (
                CASE a.ACTIVITY_END_TIME
                WHEN a.ACTIVITY_END_TIME IS NULL THEN
                a.ACTIVITY_START_TIME
                WHEN a.ACTIVITY_END_TIME = '' THEN
                a.ACTIVITY_START_TIME
                ELSE
                a.ACTIVITY_END_TIME
                END
                ))
                &gt;= str_to_date(
                #{activityStartTime,jdbcType=VARCHAR},
                '%Y-%m-%d'
                )
            </if>
            <if test="activityIsDetails == 1">
                AND #{activityStartTime,jdbcType=VARCHAR} &lt;= a.PUBLIC_TIME
            </if>
            <if test="activityIsDetails == 2">
                AND #{activityStartTime,jdbcType=VARCHAR} &lt;= a.ACTIVITY_CREATE_TIME
            </if>
            <if test="activityIsDetails == null">
                AND #{activityStartTime,jdbcType=VARCHAR} &lt;= a.ACTIVITY_UPDATE_TIME
            </if>
        </if>
        <if test="activityEndTime !=null">
            <if test="activityIsDetails == 3">
                AND least(a.ACTIVITY_START_TIME,(
                CASE a.ACTIVITY_END_TIME
                WHEN a.ACTIVITY_END_TIME IS NULL THEN
                a.ACTIVITY_START_TIME
                WHEN a.ACTIVITY_END_TIME = '' THEN
                a.ACTIVITY_START_TIME
                ELSE
                a.ACTIVITY_END_TIME
                END
                )) &lt;=
                #{activityEndTime,jdbcType=VARCHAR}
            </if>
            <if test="activityIsDetails == 1">
                AND #{activityEndTime,jdbcType=VARCHAR} &gt;= a.PUBLIC_TIME
            </if>
            <if test="activityIsDetails == 2">
                AND #{activityEndTime,jdbcType=VARCHAR} &gt;= a.ACTIVITY_CREATE_TIME
            </if>
            <if test="activityIsDetails == null">
                AND #{activityEndTime,jdbcType=VARCHAR} &gt;= a.ACTIVITY_UPDATE_TIME
            </if>
        </if>

        <if test="activityDept != null ">
            AND a.ACTIVITY_DEPT like #{activityDept,jdbcType=VARCHAR}
        </if>
        <!-- 多部门路径时-->
        <if test="activityDepts != null ">
            AND
            <foreach item="item" index="index" collection="activityDepts"
                     open="(" separator=" " close=")">
                <if test="index != 0">
                    OR
                </if>
                a.ACTIVITY_DEPT like CONCAT('','${item.shareDepthPath}','%' )
            </foreach>
        </if>
        <if test="activityType != null ">
            AND a.ACTIVITY_TYPE like #{activityType,jdbcType=VARCHAR}
        </if>
        <if test="activityPersonal != null">
            and a.ACTIVITY_PERSONAL = #{activityPersonal,jdbcType=INTEGER}
        </if>

        <!-- <if test="activityRecommendArea != null "> AND a.ACTIVITY_RECOMMEND_Area
			like #{activityRecommendArea,jdbcType=VARCHAR} </if> -->
        <if test="activityIsFree != null ">
            AND a.activity_Is_Free =
            #{activityIsFree,jdbcType=INTEGER}
        </if>
        <if test="activitySalesOnline != null ">
            AND a.activity_Sales_Online =
            #{activitySalesOnline,jdbcType=VARCHAR}
        </if>
        <if test="activityIsReservation != null ">
            AND a.ACTIVITY_IS_RESERVATION =
            #{activityIsReservation,jdbcType=INTEGER}
        </if>
        <if test="activitySupplementType != null">
            AND a.ACTIVITY_SUPPLEMENT_TYPE = #{activitySupplementType,jdbcType=INTEGER}
        </if>
        <if test="templId != null">
            AND a.TEMPL_ID = #{templId,jdbcType=INTEGER}
        </if>

    </select>


    <!-- 查询后台个人发布活动列表信息 -->
    <select id="queryPersonalActivityByCondition" resultMap="BaseResultMap"
            parameterType="java.util.Map">
        SELECT a.ACTIVITY_ID,
        a.ACTIVITY_NAME,

        a.ACTIVITY_IS_FREE,
        a.ACTIVITY_PRICE,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_END_TIME,
        a.ACTIVITY_IS_DEL,
        a.ACTIVITY_STATE,
        a.ACTIVITY_CREATE_TIME,
        a. ACTIVITY_UPDATE_TIME,
        a.ACTIVITY_CREATE_USER,
        su.USER_ACCOUNT as ACTIVITY_UPDATE_USER,
        a.ACTIVITY_AREA,
        /*a.ACTIVITY_DEPT,
        a.ACTIVITY_ICON_URL,
        a.ACTIVITY_ADDRESS,*/
        a.ACTIVITY_IS_RESERVATION,
        a.CREATE_ACTIVITY_CODE,
        a.activity_Recommend,
        /*v.venue_id AS venue_id,*/
        v.venue_name AS venue_name,
        /*v.venue_type AS venue_type,*/
        v.venue_area AS
        venue_area,
        u.USER_NAME AS user_account,
        a.ACTIVITY_TIME_DES,
        a.ACTIVITY_SALES_ONLINE,
        a.SYS_ID,
        a.SYS_NO
        FROM cms_activity a
        LEFT JOIN
        cms_activity_venue_relevance r ON r.activity_id = a.activity_id
        LEFT JOIN sys_user su on su.USER_ID = a.ACTIVITY_UPDATE_USER
        LEFT
        JOIN cms_venue v ON v.venue_id = r.venue_id
        LEFT JOIN cms_terminal_user u ON
        a.ACTIVITY_TERMINAL_USER_ID = u.user_id
        WHERE 1=1
        <if test="activityId != null">
            AND a.ACTIVITY_ID = #{activityId,jdbcType=INTEGER}
        </if>
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR}
        </if>
        <if test="activityArea != null">
            AND a.ACTIVITY_AREA like #{activityArea,jdbcType=VARCHAR}
        </if>
        <if test="venueArea != null">
            AND v.venue_area like #{venueArea,jdbcType=VARCHAR}
        </if>
        <if test="venueType != null">
            AND v.venue_type = #{venueType,jdbcType=VARCHAR}
        </if>
        <if test="venueType != null">
            AND v.venue_type = #{venueType,jdbcType=VARCHAR}
        </if>
        <if test="venueId != null">
            AND v.venue_id = #{venueId,jdbcType=VARCHAR}
        </if>
        <if test="activityStartTime !=null">
            AND a.ACTIVITY_START_TIME
            &gt;=#{activityStartTime,jdbcType=VARCHAR}
        </if>
        <if test="activityEndTime !=null">
            AND a.ACTIVITY_END_TIME &lt;=
            #{activityEndTime,jdbcType=VARCHAR}
        </if>

        <if test="activityDept != null ">
            AND a.ACTIVITY_DEPT like #{activityDept,jdbcType=VARCHAR}
        </if>
        <if test="activityType != null ">
            AND a.ACTIVITY_TYPE like #{activityType,jdbcType=VARCHAR}
        </if>
        <!-- <if test="activityRecommendArea != null "> AND a.ACTIVITY_RECOMMEND_Area
			like #{activityRecommendArea,jdbcType=VARCHAR} </if> -->
        <if test="activityIsFree != null ">
            AND a.activity_Is_Free =
            #{activityIsFree,jdbcType=INTEGER}
        </if>
        <if test="activitySalesOnline != null ">
            AND a.activity_Sales_Online =
            #{activitySalesOnline,jdbcType=VARCHAR}
        </if>
        <if test="activityIsReservation != null ">
            AND a.ACTIVITY_IS_RESERVATION =
            #{activityIsReservation,jdbcType=INTEGER}
        </if>
        <if test="activityPersonal != null">
            and a.ACTIVITY_PERSONAL = #{activityPersonal,jdbcType=INTEGER}
        </if>
        order by
        <if test="activityRecommend != null ">
            a.ACTIVITY_RECOMMEND desc , a.ACTIVITY_UPDATE_TIME desc
        </if>
        <if test="activityRecommend == null ">
            a.ACTIVITY_UPDATE_TIME desc
        </if>


        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>


    <!-- 查询后台个人发布活动列表信息总条数 -->
    <select id="queryPersonalCmsActivityCountByCondition" parameterType="java.util.Map"
            resultType="java.lang.Integer">
        SELECT count(*)
        FROM cms_activity a
        LEFT JOIN
        cms_activity_venue_relevance r ON r.activity_id = a.activity_id
        LEFT
        JOIN cms_venue v ON v.venue_id = r.venue_id
        LEFT JOIN cms_terminal_user u ON
        a.ACTIVITY_TERMINAL_USER_ID = u.user_id
        WHERE 1=1
        <if test="activityId != null">
            AND a.ACTIVITY_ID = #{activityId,jdbcType=INTEGER}
        </if>
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR}
        </if>
        <if test="activityArea != null">
            AND a.ACTIVITY_AREA like #{activityArea,jdbcType=VARCHAR}
        </if>
        <if test="venueArea != null">
            AND v.venue_area like #{venueArea,jdbcType=VARCHAR}
        </if>
        <if test="venueType != null">
            AND v.venue_type = #{venueType,jdbcType=VARCHAR}
        </if>
        <if test="venueId != null">
            AND v.venue_id = #{venueId,jdbcType=VARCHAR}
        </if>
        <if test="activityStartTime !=null">
            AND a.ACTIVITY_START_TIME
            &gt;=#{activityStartTime,jdbcType=VARCHAR}
        </if>
        <if test="activityEndTime !=null">
            AND a.ACTIVITY_END_TIME &lt;=
            #{activityEndTime,jdbcType=VARCHAR}
        </if>

        <if test="activityDept != null ">
            AND a.ACTIVITY_DEPT like #{activityDept,jdbcType=VARCHAR}
        </if>
        <if test="activityType != null ">
            AND a.ACTIVITY_TYPE like #{activityType,jdbcType=VARCHAR}
        </if>
        <if test="activityPersonal != null">
            and a.ACTIVITY_PERSONAL = #{activityPersonal,jdbcType=INTEGER}
        </if>

        <!-- <if test="activityRecommendArea != null "> AND a.ACTIVITY_RECOMMEND_Area
			like #{activityRecommendArea,jdbcType=VARCHAR} </if> -->
        <if test="activityIsFree != null ">
            AND a.activity_Is_Free =
            #{activityIsFree,jdbcType=INTEGER}
        </if>
        <if test="activitySalesOnline != null ">
            AND a.activity_Sales_Online =
            #{activitySalesOnline,jdbcType=VARCHAR}
        </if>
        <if test="activityIsReservation != null ">
            AND a.ACTIVITY_IS_RESERVATION =
            #{activityIsReservation,jdbcType=INTEGER}
        </if>
    </select>


    <!-- 查询后台活动名称是否存在 -->
    <select id="queryActivityNameIsExists" resultType="java.lang.Integer">
		SELECT
		count(*) FROM cms_activity a
		where
		a.ACTIVITY_NAME =#{0} and a.ACTIVITY_IS_DEL = 1

	</select>


    <!-- 查询后台活动名称是否存在 -->
    <select id="queryAPIActivityNameIsExists" resultType="java.lang.Integer" parameterType="java.util.Map">
		SELECT
		count(*) FROM cms_activity a
		where
		a.ACTIVITY_NAME =#{activityName} and a.ACTIVITY_IS_DEL = 1 and a.ACTIVITY_STATE = 6 and a.ACTIVITY_TIME = #{activityTime}

	</select>

    <!-- 查询前台活动列表信息总条数 -->
    <select id="queryFrontCmsActivityCountByCondition" parameterType="java.util.Map"
            resultType="java.lang.Integer">
        SELECT count(1)
        FROM cms_activity a
        WHERE 1=1
        <if test="activityId != null">
            AND a.ACTIVITY_ID = #{activityId,jdbcType=INTEGER}
        </if>
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR}
        </if>
        <if test="activityArea != null">
            AND a.ACTIVITY_AREA like #{activityArea,jdbcType=VARCHAR}
        </if>
        <if test="venueType != null">
            AND v.venue_type = #{venueType,jdbcType=VARCHAR}
        </if>
        <if test="activityStartTime !=null">
            AND a.ACTIVITY_START_TIME
            &gt;=#{activityStartTime,jdbcType=VARCHAR}
        </if>
        <if test="activityEndTime !=null">
            AND a.ACTIVITY_END_TIME &lt;=
            #{activityEndTime,jdbcType=VARCHAR}
        </if>

    </select>


    <!-- 查询后台活动列表信息 -->
    <select id="queryCmsActivityByActivityId" resultMap="BaseResultMap">
        SELECT
        a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        a.ACTIVITY_TYPE,
        a.ACTIVITY_LINKMAN,
        a.ACTIVITY_TEL,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_END_TIME,
        a.ACTIVITY_LON,
        a.ACTIVITY_LAT,
        a.ACTIVITY_THEME,
        a.ACTIVITY_PROVINCE,
        a.ACTIVITY_CITY,
        a.ACTIVITY_CREATE_TIME,
        a.ACTIVITY_AREA,
        a.ACTIVITY_ADDRESS,
        a.ACTIVITY_IS_FREE,
        a.ACTIVITY_PRICE,
        a.ACTIVITY_PAY_PRICE,
        a.ACTIVITY_ICON_URL,
        a.ACTIVITY_IS_DEL,
        a.ACTIVITY_STATE,
        a.ACTIVITY_MEMO,
        a.ACTIVITY_TIME_DES,
        a.ACTIVITY_SALES_ONLINE,
        a.ACTIVITY_PERSONAL,
        a.EVENT_COUNT as EVENT_COUNT,
        a.ACTIVITY_DEPT,
        a.ACTIVITY_NOTICE,
        sum(cae.AVAILABLE_COUNT) as activityReservationCount,
        a.ACTIVITY_IS_RESERVATION,
        a.ACTIVITY_RECOMMEND,
        a.ACTIVITY_LOCATION,
        a.SYS_ID,
        a.SYS_URL,
        a.SYS_NO,
        a.CREATE_ACTIVITY_CODE,
        a.ACTIVITY_HOST,
        a.ACTIVITY_ORGANIZER,
        a.ACTIVITY_COORGANIZER,
        a.ACTIVITY_PERFORMED,
        a.ACTIVITY_PROMPT,
        a.ACTIVITY_SPEAKER,
        a.ACTIVITY_ATTACHMENT,
        v.VENUE_NAME as venueName,
        v.venue_id AS venue_id,
        v.venue_type AS venue_type,
        v.venue_area AS
        venue_area,
        <!--
        caus.yearBrowseCount as yearBrowseCount,
         -->
        a.ACTIVITY_TERMINAL_USER_ID,
        a.ACTIVITY_SITE,
        a.ACTIVITY_SUBJECT,
        a.TEMPL_ID,
        a.PRICE_DESCRIBE,
        a.TICKET_SETTINGS,
        a.TICKET_NUMBER,
        a.TICKET_COUNT,
        a.COST_CREDIT,
        a.DEDUCTION_CREDIT,
        a.LOWEST_CREDIT,
        a.SPIKE_TYPE,
        a.IDENTITY_CARD,
        a.SINGLE_EVENT,
        a.PRICE_TYPE,
        a.ASSN_ID,
        a.ACTIVITY_SMS_TYPE,
        a.ACTIVITY_SUPPLEMENT_TYPE,
        a.ACTIVITY_CUSTOM_INFO,
        a.CANCEL_END_TIME
        FROM cms_activity a
        LEFT JOIN
        cms_activity_event cae
        on a.activity_id= cae.ACTIVITY_ID and substring(cae.EVENT_DATE_TIME,1,16) > CURRENT_TIMESTAMP
        LEFT JOIN
        cms_activity_venue_relevance r
        ON a.activity_id=r.activity_id
        LEFT JOIN cms_venue v on
        v.venue_id=r.venue_id LEFT JOIN
        cms_statistics
        s on s.S_ID = a.activity_id
        <!--
        LEFT JOIN (select activity_id, count(activity_id) as yearBrowseCount from cms_activity_user_statistics where OPERATE_TYPE=1 group by activity_id) as caus on caus.ACTIVITY_ID = a.activity_id
        -->
        where 1=1
        AND a.activity_id= #{0}
        limit 1;
    </select>


    <!--保存活动信息 -->
    <insert id="addCmsActivity" parameterType="com.sun3d.why.model.CmsActivity">
        insert into cms_activity
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="activityId != null">
                ACTIVITY_ID,
            </if>
            <if test="activityName != null">
                ACTIVITY_NAME,
            </if>
            <if test="activityLinkman != null">
                ACTIVITY_LINKMAN,
            </if>
            <if test="activityType != null">
                ACTIVITY_TYPE,
            </if>
            <if test="activityTel != null">
                ACTIVITY_TEL,
            </if>
            <if test="activityIconUrl != null">
                ACTIVITY_ICON_URL,
            </if>
            <if test="activityProvince != null">
                ACTIVITY_PROVINCE,
            </if>
            <if test="activityCity != null">
                ACTIVITY_CITY,
            </if>
            <if test="activityArea != null">
                ACTIVITY_AREA,
            </if>
            <if test="activityAddress != null">
                ACTIVITY_ADDRESS,
            </if>
            <if test="activityLon != null">
                ACTIVITY_LON,
            </if>
            <if test="activityLat != null">
                ACTIVITY_LAT,
            </if>
            <if test="activityTime != null">
                ACTIVITY_TIME,
            </if>
            <if test="activityIsFree != null">
                ACTIVITY_IS_FREE,
            </if>
            <if test="activityPrice != null">
                ACTIVITY_PRICE,
            </if>
            <if test="activityPayPrice != null">
                ACTIVITY_PAY_PRICE,
            </if>
            <if test="activityIsDetails != null">
                ACTIVITY_IS_DETAILS,
            </if>
            <if test="activityIsReservation != null">
                ACTIVITY_IS_RESERVATION,
            </if>
            <if test="activityReservationCount != null">
                ACTIVITY_RESERVATION_COUNT,
            </if>
            <if test="activityStartTime != null">
                ACTIVITY_START_TIME,
            </if>
            <if test="activityEndTime != null">
                ACTIVITY_END_TIME,
            </if>
            <if test="activityIsDel != null">
                ACTIVITY_IS_DEL,
            </if>
            <if test="activityState != null">
                ACTIVITY_STATE,
            </if>
            <if test="activityCreateTime != null">
                ACTIVITY_CREATE_TIME,
            </if>
            <if test="activityUpdateTime != null">
                ACTIVITY_UPDATE_TIME,
            </if>
            <if test="activityCreateUser != null">
                ACTIVITY_CREATE_USER,
            </if>
            <if test="activityUpdateUser != null">
                ACTIVITY_UPDATE_USER,
            </if>
            <if test="activityDept != null">
                ACTIVITY_DEPT,
            </if>
            <if test="activityMemo != null">
                ACTIVITY_MEMO,
            </if>
            <if test="activityContent != null">
                ACTIVITY_CONTENT,
            </if>
            <if test="activityRecommend != null">
                activity_Recommend,
            </if>
            <if test="activityRecommendUserId != null">
                activity_Recommend_UserId,
            </if>
            <if test="activityTimeDes != null">
                activity_Time_Des,
            </if>
            <if test="activitySalesOnline != null">
                ACTIVITY_SALES_ONLINE,
            </if>
            <if test="activityLocation != null">
                ACTIVITY_LOCATION,
            </if>
            <if test="sysId != null">
                SYS_ID,
            </if>
            <if test="sysNo != null">
                SYS_NO,
            </if>
            <if test="createActivityCode != null">
                CREATE_ACTIVITY_CODE,
            </if>
            <if test="eventCount != null">
                EVENT_COUNT,
            </if>
            <if test="activityHost != null">
                ACTIVITY_HOST,
            </if>
            <if test="activityOrganizer != null">
                ACTIVITY_ORGANIZER,
            </if>
            <if test="activityCoorganizer != null">
                ACTIVITY_COORGANIZER,
            </if>
            <if test="activityPerformed != null">
                ACTIVITY_PERFORMED,
            </if>
            <if test="activityPrompt != null">
                ACTIVITY_PROMPT,
            </if>
            <if test="activitySpeaker != null">
                ACTIVITY_SPEAKER,
            </if>
            <if test="activityPersonal != null">
                ACTIVITY_PERSONAL,
            </if>
            <if test="activityAttachment != null">
                ACTIVITY_ATTACHMENT,
            </if>
            <if test="activityTheme != null">
                ACTIVITY_THEME,
            </if>
            <if test="activityTerminalUserId != null">
                ACTIVITY_TERMINAL_USER_ID,
            </if>
            <if test="templId != null">
                TEMPL_ID,
            </if>
            <if test="activitySubject != null">
                ACTIVITY_SUBJECT,
            </if>
            <if test="activitySite != null">
                ACTIVITY_SITE,
            </if>
            <if test="activityNotice != null">
                ACTIVITY_NOTICE,
            </if>
            <if test="priceDescribe != null">
                PRICE_DESCRIBE,
            </if>
            <if test="ticketSettings != null">
                TICKET_SETTINGS,
            </if>
            <if test="ticketNumber != null">
                TICKET_NUMBER,
            </if>
            <if test="ticketCount != null">
                TICKET_COUNT,
            </if>
            <if test="lowestCredit != null">
                LOWEST_CREDIT,
            </if>
            <if test="costCredit != null">
                COST_CREDIT,
            </if>
            <if test="deductionCredit != null">
                DEDUCTION_CREDIT,
            </if>
            <if test="PublicTime != null">
                PUBLIC_TIME,
            </if>
            <if test="spikeType != null">
                SPIKE_TYPE,
            </if>
            <if test="singleEvent != null">
                SINGLE_EVENT,
            </if>
            <if test="identityCard != null">
                IDENTITY_CARD,
            </if>
            <if test="priceType != null">
                PRICE_TYPE,
            </if>
            <if test="assnId != null">
                ASSN_ID,
            </if>
            <if test="endTimePoint != null">
                END_TIME_POINT,
            </if>
            <if test="activitySmsType != null">
                ACTIVITY_SMS_TYPE,
            </if>
            <if test="activitySupplementType != null">
                ACTIVITY_SUPPLEMENT_TYPE,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="activityId != null">
                #{activityId,jdbcType=VARCHAR},
            </if>
            <if test="activityName != null">
                #{activityName,jdbcType=VARCHAR},
            </if>
            <if test="activityLinkman != null">
                #{activityLinkman,jdbcType=VARCHAR},
            </if>
            <if test="activityType != null">
                #{activityType,jdbcType=VARCHAR},
            </if>
            <if test="activityTel != null">
                #{activityTel,jdbcType=VARCHAR},
            </if>
            <if test="activityVideoURL != null">
                #{activityVideoURL,jdbcType=VARCHAR},
            </if>
            <if test="activityIconUrl != null">
                #{activityIconUrl,jdbcType=VARCHAR},
            </if>
            <if test="activityProvince != null">
                #{activityProvince,jdbcType=VARCHAR},
            </if>
            <if test="activityCity != null">
                #{activityCity,jdbcType=VARCHAR},
            </if>
            <if test="activityArea != null">
                #{activityArea,jdbcType=VARCHAR},
            </if>
            <if test="activityAddress != null">
                #{activityAddress,jdbcType=VARCHAR},
            </if>
            <if test="activityLon != null">
                #{activityLon,jdbcType=DOUBLE},
            </if>
            <if test="activityLat != null">
                #{activityLat,jdbcType=DOUBLE},
            </if>
            <if test="activityTime != null">
                #{activityTime,jdbcType=VARCHAR},
            </if>
            <if test="activityIsFree != null">
                #{activityIsFree,jdbcType=INTEGER},
            </if>
            <if test="activityPrice != null">
                #{activityPrice,jdbcType=VARCHAR},
            </if>
            <if test="activityIsDetails != null">
                #{activityIsDetails,jdbcType=INTEGER},
            </if>
            <if test="activityIsReservation != null">
                #{activityIsReservation,jdbcType=INTEGER},
            </if>
            <if test="activityReservationCount != null">
                #{activityReservationCount,jdbcType=INTEGER},
            </if>
            <if test="activityStartTime != null">
                #{activityStartTime,jdbcType=VARCHAR},
            </if>
            <if test="activityEndTime != null">
                #{activityEndTime,jdbcType=VARCHAR},
            </if>
            <if test="activityIsDel != null">
                #{activityIsDel,jdbcType=INTEGER},
            </if>
            <if test="activityState != null">
                #{activityState,jdbcType=INTEGER},
            </if>
            <if test="activityCreateTime != null">
                #{activityCreateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="activityUpdateTime != null">
                #{activityUpdateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="activityCreateUser != null">
                #{activityCreateUser,jdbcType=VARCHAR},
            </if>
            <if test="activityUpdateUser != null">
                #{activityUpdateUser,jdbcType=VARCHAR},
            </if>
            <if test="activityDept != null">
                #{activityDept,jdbcType=VARCHAR},
            </if>
            <if test="activityMemo != null">
                #{activityMemo,jdbcType=LONGVARCHAR},
            </if>
            <if test="activityContent != null">
                #{activityContent,jdbcType=LONGVARCHAR},
            </if>
            <if test="activityRecommend != null">
                #{activityRecommend,jdbcType=VARCHAR},
            </if>
            <if test="activityRecommendUserId != null">
                #{activityRecommendUserId,jdbcType=VARCHAR},
            </if>
            <if test="activityTimeDes != null">
                #{activityTimeDes,jdbcType=VARCHAR},
            </if>
            <if test="activitySalesOnline != null">
                #{activitySalesOnline,jdbcType=VARCHAR},
            </if>
            <if test="activityLocation != null">
                #{activityLocation,jdbcType=VARCHAR},
            </if>
            <if test="sysId != null">
                #{sysId,jdbcType=VARCHAR},
            </if>
            <if test="sysNo != null">
                #{sysNo,jdbcType=VARCHAR},
            </if>
            <if test="createActivityCode != null">
                #{createActivityCode,jdbcType=INTEGER},
            </if>
            <if test="eventCount != null">
                #{eventCount,jdbcType=INTEGER},
            </if>
            <if test="activityHost != null">
                #{activityHost,jdbcType=VARCHAR},
            </if>
            <if test="activityOrganizer != null">
                #{activityOrganizer,jdbcType=VARCHAR},
            </if>
            <if test="activityCoorganizer != null">
                #{activityCoorganizer,jdbcType=VARCHAR},
            </if>
            <if test="activityPerformed != null">
                #{activityPerformed,jdbcType=VARCHAR},
            </if>
            <if test="activityPrompt != null">
                #{activityPrompt,jdbcType=VARCHAR},
            </if>
            <if test="activitySpeaker != null">
                #{activitySpeaker,jdbcType=VARCHAR},
            </if>
            <if test="activityPersonal != null">
                #{activityPersonal,jdbcType=INTEGER},
            </if>
            <if test="activityAttachment != null">
                #{activityAttachment,jdbcType=VARCHAR},
            </if>
            <if test="activityTheme != null">
                #{activityTheme,jdbcType=VARCHAR},
            </if>
            <if test="activityTerminalUserId != null">
                #{activityTerminalUserId,jdbcType=VARCHAR},
            </if>
            <if test="templId != null">
                #{templId,jdbcType=VARCHAR},
            </if>
            <if test="activitySubject != null">
                #{activitySubject,jdbcType=VARCHAR},
            </if>
            <if test="activitySite != null">
                #{activitySite,jdbcType=VARCHAR},
            </if>
            <if test="activityNotice != null">
                #{activityNotice,jdbcType=VARCHAR},
            </if>
            <if test="priceDescribe != null">
                #{priceDescribe,jdbcType=VARCHAR},
            </if>
            <if test="ticketSettings != null">
                #{ticketSettings,jdbcType=VARCHAR},
            </if>
            <if test="ticketNumber != null">
                #{ticketNumber,jdbcType=INTEGER},
            </if>
            <if test="ticketCount != null">
                #{ticketCount,jdbcType=INTEGER},
            </if>
            <if test="lowestCredit != null">
                #{lowestCredit,jdbcType=INTEGER},
            </if>
            <if test="costCredit != null">
                #{costCredit,jdbcType=INTEGER},
            </if>
            <if test="deductionCredit != null">
                #{deductionCredit,jdbcType=INTEGER},
            </if>
            <if test="publicTime != null">
                #{publicTime,jdbcType=TIMESTAMP},
            </if>
            <if test="spikeType != null">
                #{spikeType,jdbcType=INTEGER},
            </if>
            <if test="singleEvent != null">
                #{singleEvent,jdbcType=INTEGER},
            </if>
            <if test="identityCard != null">
                #{identityCard,jdbcType=INTEGER},
            </if>
            <if test="priceType != null">
                #{priceType,jdbcType=INTEGER},
            </if>
            <if test="assnId != null">
                #{assnId,jdbcType=VARCHAR},
            </if>
            <if test="endTimePoint != null">
                #{endTimePoint,jdbcType=VARCHAR},
            </if>
            <if test="activitySmsType != null">
                #{activitySmsType,jdbcType=INTEGER},
            </if>
            <if test="activitySupplementType != null">
                #{activitySupplementType,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <delete id="deleteByActivityId" parameterType="java.lang.String">
		delete from
		cms_activity
		where ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
	</delete>
    <!--修改活动信息 -->
    <update id="editCmsActivity" parameterType="com.sun3d.why.model.CmsActivity">
        update cms_activity
        <set>
            <if test="activityName != null">
                ACTIVITY_NAME = #{activityName,jdbcType=VARCHAR},
            </if>
            <if test="activityLinkman != null">
                ACTIVITY_LINKMAN = #{activityLinkman,jdbcType=VARCHAR},
            </if>
            <if test="activityType != null">
                ACTIVITY_TYPE = #{activityType,jdbcType=VARCHAR},
            </if>
            <if test="activityTel != null">
                ACTIVITY_TEL = #{activityTel,jdbcType=VARCHAR},
            </if>
            <if test="activityVideoURL != null">
                ACTIVITY_VIDEO_URL =
                #{activityVideoURL,jdbcType=VARCHAR},
            </if>
            <if test="activityIconUrl != null">
                ACTIVITY_ICON_URL = #{activityIconUrl,jdbcType=VARCHAR},
            </if>
            <if test="activityProvince != null">
                ACTIVITY_PROVINCE = #{activityProvince,jdbcType=VARCHAR},
            </if>
            <if test="activityCity != null">
                ACTIVITY_CITY = #{activityCity,jdbcType=VARCHAR},
            </if>
            <if test="activityArea != null">
                ACTIVITY_AREA = #{activityArea,jdbcType=VARCHAR},
            </if>
            <if test="activityAddress != null">
                ACTIVITY_ADDRESS = #{activityAddress,jdbcType=VARCHAR},
            </if>
            <if test="activityLon != null">
                ACTIVITY_LON = #{activityLon,jdbcType=DOUBLE},
            </if>
            <if test="activityLat != null">
                ACTIVITY_LAT = #{activityLat,jdbcType=DOUBLE},
            </if>
            <if test="activityTime != null">
                ACTIVITY_TIME = #{activityTime,jdbcType=VARCHAR},
            </if>
            <if test="activityIsFree != null">
                ACTIVITY_IS_FREE = #{activityIsFree,jdbcType=INTEGER},
            </if>
            <if test="activityPrice != null">
                ACTIVITY_PRICE = #{activityPrice,jdbcType=VARCHAR},
            </if>
            <if test="activityPayPrice != null">
                ACTIVITY_PAY_PRICE= #{activityPayPrice,jdbcType=VARCHAR}
            </if>
            <if test="activityIsDetails != null">
                ACTIVITY_IS_DETAILS =
                #{activityIsDetails,jdbcType=INTEGER},
            </if>
            <if test="activityIsReservation != null">
                ACTIVITY_IS_RESERVATION =
                #{activityIsReservation,jdbcType=INTEGER},
            </if>
            <if test="activityReservationCount != null">
                ACTIVITY_RESERVATION_COUNT =
                #{activityReservationCount,jdbcType=INTEGER},
            </if>
            <if test="activityStartTime != null">
                ACTIVITY_START_TIME =
                #{activityStartTime,jdbcType=VARCHAR},
            </if>
            <if test="activityEndTime != null">
                ACTIVITY_END_TIME = #{activityEndTime,jdbcType=VARCHAR},
            </if>
            <if test="activityIsDel != null">
                ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER},
            </if>
            <if test="activityState != null">
                ACTIVITY_STATE = #{activityState,jdbcType=INTEGER},
            </if>
            <if test="activityCreateTime != null">
                ACTIVITY_CREATE_TIME =
                #{activityCreateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="activityUpdateTime != null">
                ACTIVITY_UPDATE_TIME =
                #{activityUpdateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="activityCreateUser != null">
                ACTIVITY_CREATE_USER =
                #{activityCreateUser,jdbcType=VARCHAR},
            </if>
            <if test="activityUpdateUser != null">
                ACTIVITY_UPDATE_USER =
                #{activityUpdateUser,jdbcType=VARCHAR},
            </if>
            <if test="activityMemo != null">
                ACTIVITY_MEMO = #{activityMemo,jdbcType=LONGVARCHAR},
            </if>
            <if test="activityContent != null">
                ACTIVITY_CONTENT =
                #{activityContent,jdbcType=LONGVARCHAR},
            </if>
            <if test="activityRecommend != null">
                activity_Recommend =
                #{activityRecommend,jdbcType=VARCHAR},
            </if>
            <if test="activityRecommendUserId != null">
                activity_Recommend_UserId =
                #{activityRecommendUserId,jdbcType=VARCHAR},
            </if>
            <if test="activityTimeDes != null">
                activity_Time_Des = #{activityTimeDes,jdbcType=VARCHAR},
            </if>
            <if test="activitySalesOnline != null">
                activity_Sales_Online =
                #{activitySalesOnline,jdbcType=VARCHAR},
            </if>
            <if test="activityLocation != null">
                activity_Location = #{activityLocation,jdbcType=VARCHAR},
            </if>
            <if test="eventCount != null">
                EVENT_COUNT = #{eventCount,jdbcType=INTEGER},
            </if>
            <if test="createActivityCode != null">
                CREATE_ACTIVITY_CODE = #{createActivityCode,jdbcType=VARCHAR},
            </if>
            <if test="activityRecommendTime != null">
                ACTIVITY_RECOMMEND_TIME = #{activityRecommendTime,jdbcType=TIMESTAMP},
            </if>
            <if test="activityHost != null">
                ACTIVITY_HOST = #{activityHost,jdbcType=VARCHAR},
            </if>
            <if test="activityOrganizer != null">
                ACTIVITY_ORGANIZER = #{activityOrganizer,jdbcType=VARCHAR},
            </if>
            <if test="activityCoorganizer != null">
                ACTIVITY_COORGANIZER = #{activityCoorganizer,jdbcType=VARCHAR},
            </if>
            <if test="activityPerformed != null">
                ACTIVITY_PERFORMED = #{activityPerformed,jdbcType=VARCHAR},
            </if>
            <if test="activityPrompt != null">
                ACTIVITY_PROMPT = #{activityPrompt,jdbcType=VARCHAR},
            </if>
            <if test="activitySpeaker != null">
                ACTIVITY_SPEAKER = #{activitySpeaker,jdbcType=VARCHAR},
            </if>
            <if test="activityPersonal != null">
                ACTIVITY_PERSONAL = #{activityPersonal,jdbcType=INTEGER},
            </if>
            <if test="activityAttachment != null">
                ACTIVITY_ATTACHMENT = #{activityAttachment,jdbcType=VARCHAR},
            </if>
            <if test="activityTheme != null">
                ACTIVITY_THEME = #{activityTheme,jdbcType=VARCHAR},
            </if>
            <if test="activityTerminalUserId != null">
                ACTIVITY_TERMINAL_USER_ID = #{activityTerminalUserId,jdbcType=VARCHAR},
            </if>
            <if test="activityDept != null">
                ACTIVITY_DEPT = #{activityDept,jdbcType=VARCHAR},
            </if>
            <if test="templId != null">
                TEMPL_ID = #{templId,jdbcType=VARCHAR},
            </if>
            <if test="activitySubject != null">
                ACTIVITY_SUBJECT = #{activitySubject,jdbcType=VARCHAR},
            </if>
            <if test="activitySite != null">
                ACTIVITY_SITE = #{activitySite,jdbcType=VARCHAR},
            </if>
            <if test="activityNotice != null">
                ACTIVITY_NOTICE = #{activityNotice,jdbcType=VARCHAR},
            </if>
            <if test="priceDescribe != null">
                PRICE_DESCRIBE = #{priceDescribe,jdbcType=VARCHAR},
            </if>
            <if test="priceDescribe != null">
                PRICE_DESCRIBE = #{priceDescribe,jdbcType=VARCHAR},
            </if>
            <if test="ticketSettings != null">
                TICKET_SETTINGS= #{ticketSettings,jdbcType=VARCHAR},
            </if>
            <if test="identityCard != null">
                IDENTITY_CARD= #{identityCard,jdbcType=VARCHAR},
            </if>
            <if test="priceType != null">
                PRICE_TYPE= #{priceType,jdbcType=VARCHAR},
            </if>
            <if test="lowestCredit != null">
                LOWEST_CREDIT= #{lowestCredit,jdbcType=VARCHAR},
            </if>
            <if test="costCredit != null">
                COST_CREDIT= #{costCredit,jdbcType=VARCHAR},
            </if>
            <if test="deductionCredit != null">
                DEDUCTION_CREDIT= #{deductionCredit,jdbcType=VARCHAR},
            </if>
            <if test="spikeType != null">
                SPIKE_TYPE= #{spikeType,jdbcType=VARCHAR},
            </if>
            <if test="singleEvent != null">
                SINGLE_EVENT= #{singleEvent,jdbcType=VARCHAR},
            </if>
            <if test="publicTime != null">
                PUBLIC_TIME =
                #{publicTime,jdbcType=TIMESTAMP},
            </if>
            <if test="ticketNumber != null">
                TICKET_NUMBER= #{ticketNumber,jdbcType=INTEGER},
            </if>
            <if test="ticketCount != null">
                TICKET_COUNT=#{ticketCount,jdbcType=INTEGER},
            </if>
            <if test="assnId != null">
                ASSN_ID=#{assnId,jdbcType=VARCHAR},
            </if>
            <if test="activitySmsType != null">
                ACTIVITY_SMS_TYPE=#{activitySmsType,jdbcType=INTEGER},
            </if>
            <if test="activitySupplementType != null">
                ACTIVITY_SUPPLEMENT_TYPE = #{activitySupplementType,jdbcType=INTEGER},
            </if>
        </set>
        where ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
    </update>

    <select id="queryOrderCountByActivityId" resultType="java.lang.Integer">
		SELECT count(*)
		FROM cms_activity a,cms_activity_order o
		WHERE o.ACTIVITY_ID = a.activity_id AND a.activity_id = #{0} and o.ORDER_PAY_STATUS !=2
	</select>

    <select id="queryCountByActivity" resultType="java.lang.Integer"
            parameterType="com.sun3d.why.model.CmsActivity">
        SELECT count(*)
        from cms_activity
        where 1=1

        <if test="activityId != null">
            and activity_id = #{activityId,jdbcType=VARCHAR}
        </if>
        <if test="activityName != null">
            and activity_Name = #{activityName,jdbcType=VARCHAR}
        </if>
        <if test="activityLinkman != null">
            and activity_Linkman =#{activityLinkman,jdbcType=VARCHAR}
        </if>
        <if test="activityType != null">
            and activity_Type = #{activityType,jdbcType=VARCHAR}
        </if>
        <if test="activityTel != null">
            and activity_Tel = #{activityTel,jdbcType=VARCHAR}
        </if>
        <if test="activityProvince != null">
            and activity_Province =
            #{activityProvince,jdbcType=VARCHAR}
        </if>
        <if test="activityCity != null">
            and activity_City = #{activityCity,jdbcType=VARCHAR}
        </if>
        <if test="activityArea != null">
            and activity_Area = #{activityArea,jdbcType=VARCHAR}
        </if>
        <if test="activityAddress != null">
            and activity_Address = #{activityAddress,jdbcType=VARCHAR}
        </if>
        <if test="activityTime != null">
            and activity_Time= #{activityTime,jdbcType=VARCHAR}
        </if>
        <if test="activityIsFree != null">
            and activity_Is_Free= #{activityIsFree,jdbcType=INTEGER}
        </if>
        <if test="activityPrice != null">
            and activity_Price= #{activityPrice,jdbcType=VARCHAR}
        </if>
        <if test="activityIsDetails != null">
            and activity_Is_Details=
            #{activityIsDetails,jdbcType=INTEGER}
        </if>
        <if test="activityIsReservation != null">
            and activity_Is_Reservation=
            #{activityIsReservation,jdbcType=INTEGER}
        </if>
        <if test="activityReservationCount != null">
            and activity_Reservation_Count =
            #{activityReservationCount,jdbcType=INTEGER}
        </if>
        <if test="activityStartTime != null">
            and activity_Start_Time =
            #{activityStartTime,jdbcType=VARCHAR}
        </if>
        <if test="activityEndTime != null">
            and activity_End_Time =
            #{activityEndTime,jdbcType=VARCHAR}
        </if>
        <if test="activityIsDel != null">
            and activity_Is_Del = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            and activity_State = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="activityCreateTime != null">
            and activity_Create_Time =
            #{activityCreateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="activityUpdateTime != null">
            and activity_Update_Time =
            #{activityUpdateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="activityCreateUser != null">
            and activity_Create_User =
            #{activityCreateUser,jdbcType=VARCHAR}
        </if>
        <if test="activityUpdateUser != null">
            and activity_Update_User =
            #{activityUpdateUser,jdbcType=VARCHAR}
        </if>
        <if test="activityDept != null">
            and activity_Dept = #{activityDept,jdbcType=VARCHAR}
        </if>
        <if test="activityMemo != null">
            and activity_Memo = #{activityMemo,jdbcType=LONGVARCHAR}
        </if>
        <if test="activityContent != null">
            and activity_Content =
            #{activityContent,jdbcType=LONGVARCHAR}
        </if>
    </select>
    <!--前台sql -->
    <!--本周最热活动（周浏览次数） -->
    <select id="queryBestHotActivity" resultMap="BaseResultMap"
            parameterType="com.sun3d.why.model.CmsActivity">
        SELECT
        a.ACTIVITY_ID,
        ACTIVITY_NAME,
        ACTIVITY_ADDRESS,
        ACTIVITY_START_TIME,
        ACTIVITY_ICON_URL,
        s.weekBrowseCount as WEEK_BROWSE_COUNT,
        ACTIVITY_AREA,
        ACTIVITY_VIDEO_URL
        FROM
        cms_activity as a
        LEFT JOIN (
        SELECT
        activity_id,
        count(activity_id) AS weekBrowseCount
        FROM
        cms_activity_user_statistics as a
        WHERE
        OPERATE_TYPE = 1
        AND DATE_SUB(CURDATE(), INTERVAL 1 WEEK) &lt;= a.CREATE_TIME
        GROUP BY
        activity_id
        ) AS s ON s.activity_id = a.activity_id
        ORDER BY WEEK_BROWSE_COUNT DESC
        <if test="firstResult != null">
            <include refid="pagination_condition"/>
        </if>
    </select>

    <select id="countBestHotActivity" parameterType="com.sun3d.why.model.CmsActivity"
            resultType="java.lang.Integer">
		SELECT count(*) FROM
		cms_activity as a
		LEFT JOIN (
		SELECT
		activity_id,
		count(activity_id) AS weekBrowseCount
		FROM
		cms_activity_user_statistics as a
		WHERE
		OPERATE_TYPE = 1
		AND DATE_SUB(CURDATE(), INTERVAL 1 WEEK) &lt;= a.CREATE_TIME
		GROUP BY
		activity_id
		) AS s ON s.activity_id = a.activity_id
	</select>


    <select id="countYearHotActivity" parameterType="com.sun3d.why.model.CmsActivity"
            resultType="java.lang.Integer">
		SELECT
		count(*)
		FROM
		cms_activity as a
		LEFT JOIN (
		SELECT
		activity_id,
		count(activity_id) AS yearBrowseCount
		FROM
		cms_activity_user_statistics as a
		WHERE
		OPERATE_TYPE = 1
		AND DATE_SUB(CURDATE(), INTERVAL 1 YEAR) &lt;= a.CREATE_TIME
		GROUP BY
		activity_id
		) AS s ON s.activity_id = a.activity_id
		ORDER BY s.yearBrowseCount DESC
	</select>
    <!--本月推荐活动(月浏览量) -->
    <select id="queryMonthHotActivity" resultMap="BaseResultMap"
            parameterType="com.sun3d.why.model.CmsActivity">
        SELECT
        a.ACTIVITY_ID,
        ACTIVITY_NAME,
        ACTIVITY_ADDRESS,
        ACTIVITY_START_TIME,
        ACTIVITY_ICON_URL
        FROM
        cms_activity as a
        LEFT JOIN (
        SELECT
        activity_id,
        count(activity_id) AS monthBrowseCount
        FROM
        cms_activity_user_statistics as a
        WHERE
        OPERATE_TYPE = 1
        AND DATE_SUB(CURDATE(), INTERVAL 1 MONTH) &lt;= a.CREATE_TIME
        GROUP BY
        activity_id
        ) AS s ON s.activity_id = a.activity_id
        ORDER BY s.monthBrowseCount DESC
        <if test="firstResult != null">
            <include refid="pagination_condition"/>
        </if>
    </select>

    <select id="countMonthHotActivity" parameterType="com.sun3d.why.model.CmsActivity"
            resultType="java.lang.Integer">
		SELECT
		count(*)
		FROM
		cms_activity as a
		LEFT JOIN (
		SELECT
		activity_id,
		count(activity_id) AS monthBrowseCount
		FROM
		cms_activity_user_statistics as a
		WHERE
		OPERATE_TYPE = 1
		AND DATE_SUB(CURDATE(), INTERVAL 1 MONTH) &lt;= a.CREATE_TIME
		GROUP BY
		activity_id
		) AS s ON s.activity_id = a.activity_id
		ORDER BY s.monthBrowseCount DESC
	</select>


    <!--前端2.0活动收藏显示 -->
    <select id="queryCollectActivity" resultMap="BaseResultMap"
            parameterType="java.util.Map">
        SELECT
        b.ACTIVITY_ID,
        b.ACTIVITY_NAME,
        cv.venue_name,
        b.activity_city,
        b.activity_area,
        b.ACTIVITY_ADDRESS,
        b.ACTIVITY_SITE,
        b.ACTIVITY_ICON_URL,
        b.ACTIVITY_START_TIME,
        b.activity_end_time,
        c.YEAR_BROWSE_COUNT,
        d.YEAR_COLLECT_COUNT,
        b.ACTIVITY_IS_RESERVATION,
        (
        SELECT
        sum(d.available_count)
        FROM
        cms_activity_event d
        WHERE
        d.activity_id = b.activity_id
        GROUP BY
        d.activity_id
        ) AS available_count
        FROM
        cms_collect a
        INNER JOIN cms_activity b ON a.relate_id = b.activity_id
        left join cms_activity_venue_relevance cavr on b.activity_id=cavr.activity_id
        left join cms_venue cv on cavr.venue_id = cv.venue_id
        LEFT JOIN (
        SELECT
        activity_id,
        count(activity_id) AS YEAR_BROWSE_COUNT
        FROM
        cms_activity_user_statistics AS a
        WHERE
        OPERATE_TYPE = 1
        AND DATE_SUB(CURDATE(), INTERVAL 1 YEAR) &lt;= a.CREATE_TIME
        GROUP BY
        activity_id
        ) AS c ON c.activity_id = b.activity_id
        LEFT JOIN (
        SELECT
        activity_id,
        count(activity_id) AS YEAR_COLLECT_COUNT
        FROM
        cms_activity_user_statistics AS a
        WHERE
        OPERATE_TYPE = 3
        AND DATE_SUB(CURDATE(), INTERVAL 1 YEAR) &lt;= a.CREATE_TIME
        GROUP BY
        activity_id
        ) AS d ON d.activity_id = b.activity_id
        WHERE
        1 = 1
        AND b.ACTIVITY_IS_DEL = 1
        AND b.ACTIVITY_STATE != 1
        <if test="userId != null and userId != ''">
            and a.user_id = #{userId}
        </if>
        <if test="type != null and type != ''">
            and a.type = #{type}
        </if>
        <if test="activityName != null and activityName != ''">
            and b.activity_name like #{activityName} ESCAPE '/'
        </if>
        ORDER BY d.YEAR_COLLECT_COUNT desc,c.YEAR_BROWSE_COUNT desc
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>

    <select id="queryCollectActivityCount" resultType="java.lang.Integer"
            parameterType="java.util.Map">
        SELECT count(*)
        from cms_collect a inner join cms_activity as d on relate_id
        = activity_id
        LEFT JOIN (
        SELECT
        activity_id,
        count(activity_id) AS weekBrowseCount
        FROM
        cms_activity_user_statistics as a
        WHERE
        OPERATE_TYPE = 3
        GROUP BY
        activity_id
        ) AS s ON s.activity_id = d.activity_id
        where 1=1
        <if test="userId != null and userId != ''">
            and a.user_id = #{userId}
        </if>
        <if test="type != null and type != ''">
            and a.type = #{type}
        </if>
        <if test="activityName != null and activityName != ''">
            and d.activity_name like #{activityName}
        </if>
    </select>

    <!-- 前台展馆获取活动详情 -->
    <select id="queryCmsVenueActivity" resultMap="BaseResultMap"
            parameterType="java.util.Map">
        SELECT
        a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_ICON_URL,
        a.ACTIVITY_ADDRESS,
        cs.YEAR_BROWSE_COUNT AS YEAR_BROWSE_COUNT
        FROM
        (
        SELECT
        activity_id,
        count(activity_id) AS YEAR_BROWSE_COUNT
        FROM
        cms_activity_user_statistics as a
        WHERE
        OPERATE_TYPE = 1
        AND DATE_SUB(CURDATE(), INTERVAL 1 YEAR) &lt;= a.CREATE_TIME
        GROUP BY
        activity_id
        ) AS cs
        RIGHT JOIN
        (SELECT a.ACTIVITY_ID
        as ACTIVITY_ID,a.ACTIVITY_NAME as ACTIVITY_NAME,
        a.ACTIVITY_START_TIME
        as ACTIVITY_START_TIME ,a.ACTIVITY_ADDRESS as
        ACTIVITY_ADDRESS,
        a.ACTIVITY_ICON_URL as ACTIVITY_ICON_URL
        from cms_activity
        a,cms_activity_venue_relevance r,cms_venue v,sys_user u
        WHERE
        a.activity_id = r.activity_id
        AND v.venue_id = r.venue_id
        AND
        a.activity_create_user = u.user_id
        <if test="activityId != null">
            AND a.ACTIVITY_ID = #{activityId,jdbcType=INTEGER}
        </if>
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR}
        </if>
        <if test="activityArea != null">
            AND a.ACTIVITY_AREA like #{activityArea,jdbcType=VARCHAR}
        </if>

        <if test="venueArea != null">
            AND v.venue_area like #{venueArea,jdbcType=VARCHAR}
        </if>
        <if test="venueType != null">
            AND v.venue_type = #{venueType,jdbcType=VARCHAR}
        </if>
        <if test="venueId != null">
            AND v.venue_id = #{venueId,jdbcType=VARCHAR}
        </if>
        <if test="activityStartTime !=null">
            AND
            a.ACTIVITY_START_TIME>=#{activityStartTime,jdbcType=VARCHAR}
        </if>
        order by a.ACTIVITY_UPDATE_TIME desc
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
        )a on cs.activity_id = a.activity_id
    </select>

    <!-- 查询前端首页最新发布活动 -->
    <select id="queryBestNewPublishActivity" resultMap="BaseResultMap"
            parameterType="java.util.Map">
        SELECT
        a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        a.ACTIVITY_ADDRESS,
        a.activity_start_time,
        a.ACTIVITY_END_TIME,
        b.week_browse_count
        FROM
        cms_activity a
        LEFT JOIN (
        SELECT
        activity_id,
        count(activity_id) AS week_browse_count
        FROM
        cms_activity_user_statistics AS a
        WHERE
        OPERATE_TYPE = 1
        AND DATE_SUB(CURDATE(), INTERVAL 1 WEEK) &lt;= a.CREATE_TIME
        GROUP BY
        activity_id
        ) AS b ON b.activity_id = a.activity_id
        where 1=1
        <if test="activityIsDel != null">
            and a.activity_is_del = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            and a.activity_state = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="activityArea != null">
            and a.activity_area like #{activityArea, jdbcType=VARCHAR}
        </if>
        order by a.ACTIVITY_UPDATE_TIME desc
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>


    <!-- 查询详细内容中的推荐活动 -->
    <select id="getRelateActivity" resultMap="BaseResultMap"
            parameterType="hashmap">
        SELECT a.ACTIVITY_ID,
        a.ACTIVITY_NAME,a.ACTIVITY_CITY,a.ACTIVITY_AREA,
        a.ACTIVITY_ADDRESS,
        a.ACTIVITY_ICON_URL,
        a.activity_start_time,
        a.activity_end_time
        from cms_activity a
        where 1=1
        <if test="activityIsDel != null">
            and a.activity_is_del = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            and a.activity_state = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="activityArea != null">
            and a.activity_area like #{activityArea, jdbcType=VARCHAR}
        </if>
        <if test="activityId != null">
            and a.ACTIVITY_ID != #{activityId, jdbcType=VARCHAR}
        </if>
        <if test="tagIds != null">
            and (
            <foreach item="item" index="index" collection="tagIds" open="("
                     separator=" " close=")">
                <if test="index != 0">
                    OR
                </if>
                a.ACTIVITY_TYPE like CONCAT('%','${item.tagId}','%' ) or
                a.ACTIVITY_THEME like CONCAT('%','${item.tagId}','%' )
            </foreach>
            )
        </if>
        order by a.ACTIVITY_UPDATE_TIME desc
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>


    <!-- 查询前台活动列表页信息 -->
    <select id="queryFrontActivityList" resultMap="BaseResultMap"
            parameterType="java.util.Map">
        SELECT a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_END_TIME,
        a.ACTIVITY_ICON_URL,
        a.ACTIVITY_ADDRESS,
        caus.yearBrowseCount as yearBrowseCount
        FROM
        cms_activity a
        /*LEFT JOIN
        cms_activity_venue_relevance r on
        a.ACTIVITY_ID=r.ACTIVITY_ID
        LEFT JOIN
        cms_venue v on v.venue_id = r.venue_id*/
        LEFT JOIN (select activity_id, count(activity_id) as yearBrowseCount from cms_activity_user_statistics where
        OPERATE_TYPE=1
        AND DATE_SUB(CURDATE(), INTERVAL 1 YEAR) &lt;= CREATE_TIME
        group by activity_id) as caus on caus.ACTIVITY_ID = a.activity_id
        where 1=1
        <if test="activityId != null">
            AND a.ACTIVITY_ID = #{activityId,jdbcType=INTEGER}
        </if>
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR}
        </if>
        <if test="activityArea != null">
            AND a.ACTIVITY_AREA like #{activityArea,jdbcType=VARCHAR}
        </if>
        <!--<if test="venueArea != null">-->
        <!--AND v.venue_area like #{venueArea,jdbcType=VARCHAR}-->
        <!--</if>-->
        <!--<if test="venueType != null">-->
        <!--AND v.venue_type = #{venueType,jdbcType=VARCHAR}-->
        <!--</if>-->
        <!--<if test="venueId != null">-->
        <!--AND v.venue_id = #{venueId,jdbcType=VARCHAR}-->
        <!--</if>-->
        <if test="activityTime!=null">
            AND a.ACTIVITY_START_TIME
            &lt;=#{activityTime,jdbcType=VARCHAR} AND
            a.ACTIVITY_END_TIME
            &gt;=#{activityTime,jdbcType=VARCHAR}
        </if>
        <if test="activityStartTime !=null">
            AND cast(a.ACTIVITY_START_TIME as datetime)
            &gt;=#{activityStartTime,jdbcType=VARCHAR}
        </if>
        <if test="activityEndTime !=null">
            AND cast(a.ACTIVITY_END_TIME as datetime) &lt;=
            #{activityEndTime,jdbcType=VARCHAR}
        </if>

        <!--<if test="venueDept != null ">-->
        <!--AND v.VENUE_DEPT like #{venueDept,jdbcType=VARCHAR}-->
        <!--</if>-->
        <if test="activityType != null ">
            AND a.ACTIVITY_TYPE like #{activityType,jdbcType=VARCHAR}
        </if>
        <if test="activityLocation != null">
            AND a.activity_Location =
            #{activityLocation,jdbcType=VARCHAR}
        </if>
        <if test="activityPrice != null ">
            AND cast(a.ACTIVITY_PRICE as decimal(10,4)) &gt;=
            #{activityPrice,jdbcType=INTEGER}
        </if>
        <if test="activityPriceEnd != null ">
            AND cast(a.ACTIVITY_PRICE as decimal(10,4)) &lt;=
            #{activityPriceEnd,jdbcType=INTEGER}
        </if>
        order by
        <if test="activityRecommend != null and activityRecommend !=''">
            a.ACTIVITY_RECOMMEND desc , a.ACTIVITY_UPDATE_TIME desc
        </if>
        <if test="activityRecommend == null or activityRecommend == '' or appType == 2">
            a.ACTIVITY_UPDATE_TIME desc
        </if>
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>
    <!-- 查询前台活动listLoad列表页信息 -->
    <select id="queryActivityListLoad" resultMap="BaseResultMap"
            parameterType="java.util.Map">
        SELECT a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_END_TIME,
        a.ACTIVITY_ADDRESS,
        a.ACTIVITY_ICON_URL,
        caus.yearBrowseCount as yearBrowseCount
        FROM
        cms_activity a
        /*left join cms_activity_venue_relevance r
        on
        a.activity_id=r.activity_id
        left JOIN cms_venue v
        on
        v.venue_id=r.venue_id*/
        LEFT JOIN (select activity_id, count(activity_id) as yearBrowseCount from cms_activity_user_statistics where
        OPERATE_TYPE=1
        AND DATE_SUB(CURDATE(), INTERVAL 1 YEAR) &lt;= CREATE_TIME
        group by activity_id) as caus on caus.ACTIVITY_ID = a.activity_id
        WHERE 1=1
        <if test="activityId != null">
            AND a.ACTIVITY_ID = #{activityId,jdbcType=INTEGER}
        </if>
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR}
        </if>
        <if test="activityArea != null">
            AND a.ACTIVITY_AREA like #{activityArea,jdbcType=VARCHAR}
        </if>
        <!--<if test="venueArea != null">-->
        <!--AND v.venue_area like #{venueArea,jdbcType=VARCHAR}-->
        <!--</if>-->
        <!-- <if test="venueType != null"> AND v.venue_type = #{venueType,jdbcType=VARCHAR}
			</if> -->
        <!--<if test="venueId != null">-->
        <!--AND v.venue_id = #{venueId,jdbcType=VARCHAR}-->
        <!--</if>-->
        <if test="activityTime!=null">
            AND a.ACTIVITY_START_TIME
            &lt;=#{activityTime,jdbcType=VARCHAR} AND
            a.ACTIVITY_END_TIME
            &gt;=#{activityTime,jdbcType=VARCHAR}
        </if>
        <if test="activityStartTime !=null">
            AND cast(a.ACTIVITY_START_TIME as datetime)
            &gt;=#{activityStartTime,jdbcType=VARCHAR}
        </if>
        <if test="activityEndTime !=null">
            AND cast(a.ACTIVITY_END_TIME as datetime) &lt;=
            #{activityEndTime,jdbcType=VARCHAR}
        </if>
        <if test="activityType != null ">
            AND a.ACTIVITY_TYPE like #{activityType,jdbcType=VARCHAR}
        </if>
        <if test="activityLocation != null">
            AND a.activity_Location =
            #{activityLocation,jdbcType=VARCHAR}
        </if>
        <if test="activityPrice != null ">
            AND cast(a.ACTIVITY_PRICE as decimal(10,4)) &gt;=
            #{activityPrice,jdbcType=INTEGER}
        </if>
        <if test="activityPriceEnd != null ">
            AND cast(a.ACTIVITY_PRICE as decimal(10,4)) &lt;=
            #{activityPriceEnd,jdbcType=INTEGER}
        </if>

        <if test="activityName!=null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR}
        </if>

        <!-- 默认 随机排序 -->
        <if test="orderType != null and orderType =='1'.toString()">
            order by a.ACTIVITY_UPDATE_TIME desc
        </if>
        <!-- 热度 -->
        <if test="orderType != null and orderType =='2'.toString()">
            order by yearBrowseCount asc
        </if>
        <if test="orderType != null and orderType =='3'.toString()">
            order by yearBrowseCount desc
        </if>
        <!-- 时间排序 -->
        <if test="orderType != null and orderType == '4'.toString()">
            order by a.ACTIVITY_UPDATE_TIME asc
        </if>
        <if test="orderType != null and orderType == '5'.toString()">

            order by a.ACTIVITY_UPDATE_TIME desc
        </if>
        <!-- 时间排序 -->
        <if test="orderType == null or orderType == ''">
            order by a.ACTIVITY_UPDATE_TIME desc
        </if>
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>

    </select>


    <!-- 查询前台活动listLoad 带出浏览量 不用前台页面循环查列表页信息 -->
    <select id="queryActivityListCollectNumLoad" resultMap="BaseResultMap"
            parameterType="java.util.Map">
        SELECT
        a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_END_TIME,
        a.ACTIVITY_CITY,
        a.ACTIVITY_AREA,
        a.ACTIVITY_ADDRESS,
        a.ACTIVITY_ICON_URL,
        a.SYS_ID,
        a.SYS_NO,
        (
        SELECT
        count(cs.RELATE_ID)
        FROM
        cms_collect cs
        WHERE
        a.activity_id = cs.RELATE_ID
        AND cs.TYPE = 2
        ) AS collectNum,
        (
        SELECT
        sum(cae.AVAILABLE_COUNT)
        FROM
        cms_activity_event cae
        WHERE
        a.activity_id = cae.ACTIVITY_ID
        AND substring(cae.EVENT_DATE_TIME, 1, 16) > CURRENT_TIMESTAMP
        ) AS activityReservationCount,
        st.YEAR_BROWSE_COUNT,
        a.sys_no,
        a.ACTIVITY_IS_RESERVATION
        FROM
        cms_activity a
        LEFT JOIN (
        SELECT
        activity_id,
        count(activity_id) AS YEAR_BROWSE_COUNT
        FROM
        cms_activity_user_statistics as a
        WHERE
        OPERATE_TYPE = 1
        AND DATE_SUB(CURDATE(), INTERVAL 1 YEAR) &lt;= a.CREATE_TIME
        GROUP BY
        activity_id
        ) AS st ON st.activity_id = a.activity_id
        LEFT JOIN (
        SELECT cae.activity_id,
        max(cae.EVENT_DATE_TIME) as maxDateTime
        FROM
        cms_activity_event cae
        GROUP BY
        cae.activity_id
        ) as caetemp on caetemp.activity_id = a.activity_id
        WHERE substring(caetemp.maxDateTime, 1, 16) > CURRENT_TIMESTAMP
        <if test="activityId != null">
            AND a.ACTIVITY_ID = #{activityId,jdbcType=INTEGER}
        </if>
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR}
        </if>
        <if test="activityArea != null">
            AND a.ACTIVITY_AREA like #{activityArea,jdbcType=VARCHAR}
        </if>
        <if test="venueArea != null">
            AND v.venue_area like #{venueArea,jdbcType=VARCHAR}
        </if>
        <if test="venueId != null">
            AND v.venue_id = #{venueId,jdbcType=VARCHAR}
        </if>
        <if test="activityTime!=null">
            AND a.ACTIVITY_START_TIME
            &lt;=#{activityTime,jdbcType=VARCHAR} AND
            a.ACTIVITY_END_TIME
            &gt;=#{activityTime,jdbcType=VARCHAR}
        </if>
        <if test="activityStartTime !=null">
            AND GREATEST(a.ACTIVITY_START_TIME, (
            CASE a.ACTIVITY_END_TIME
            WHEN a.ACTIVITY_END_TIME IS NULL THEN
            a.ACTIVITY_START_TIME
            WHEN a.ACTIVITY_END_TIME = '' THEN
            a.ACTIVITY_START_TIME
            ELSE
            a.ACTIVITY_END_TIME
            END
            ))
            &gt;= str_to_date(
            #{activityStartTime,jdbcType=VARCHAR},
            '%Y-%m-%d'
            )
        </if>
        <if test="activityEndTime !=null">
            AND least(a.ACTIVITY_START_TIME,(
            CASE a.ACTIVITY_END_TIME
            WHEN a.ACTIVITY_END_TIME IS NULL THEN
            a.ACTIVITY_START_TIME
            WHEN a.ACTIVITY_END_TIME = '' THEN
            a.ACTIVITY_START_TIME
            ELSE
            a.ACTIVITY_END_TIME
            END
            )) &lt;=
            #{activityEndTime,jdbcType=VARCHAR}
        </if>


        <if test="activityType != null ">
            AND a.ACTIVITY_TYPE like #{activityType,jdbcType=VARCHAR}
        </if>
        <if test="activityLocation != null">
            AND a.activity_Location =
            #{activityLocation,jdbcType=VARCHAR}
        </if>
        <if test="activityPrice != null ">
            AND cast(a.ACTIVITY_PRICE as decimal(10,4)) &gt;=
            #{activityPrice,jdbcType=INTEGER}
        </if>
        <if test="activityPriceEnd != null ">
            AND cast(a.ACTIVITY_PRICE as decimal(10,4)) &lt;=
            #{activityPriceEnd,jdbcType=INTEGER}
        </if>
        order by a.ACTIVITY_UPDATE_TIME desc
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>

    </select>

    <select id="queryActivityListTicketLoadCount" resultType="java.lang.Integer" parameterType="java.util.Map">
        SELECT COUNT(*)FROM ( SELECT
        a.ACTIVITY_ID,
        IF(caetemp.aCount >0,0,1) AS activityReservationCount
        FROM
        cms_activity a

        LEFT JOIN ( SELECT cae.activity_id, MAX(cae.EVENT_DATE_TIME) AS maxDateTime ,SUM(cae.AVAILABLE_COUNT) AS aCount
        FROM cms_activity_event cae

        WHERE SUBSTRING(cae.EVENT_DATE_TIME, 1, 16) > CURRENT_TIMESTAMP

        GROUP BY cae.activity_id ) AS caetemp ON caetemp.activity_id = a.activity_id

        LEFT JOIN cms_activity_venue_relevance vr ON vr.ACTIVITY_ID = a.ACTIVITY_ID

        WHERE 1 = 1
        <!-- SUBSTRING(caetemp.maxDateTime, 1, 16) > CURRENT_TIMESTAMP-->
        <if test="venueId != null">
            and (vr.venue_id = #{venueId,jdbcType=VARCHAR} or IF(caetemp.aCount >0,0,1) = 0)
        </if>
        <if test="venueId == null">
<!--             and IF(caetemp.aCount >0,0,1) = 0-->
        </if>
        <if test="activityId != null">
            AND a.ACTIVITY_ID = #{activityId,jdbcType=INTEGER}
        </if>
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR}
        </if>
        <if test="activityArea != null">
            AND a.ACTIVITY_AREA like #{activityArea,jdbcType=VARCHAR}
        </if>
        <if test="venueArea != null">
            AND v.venue_area like #{venueArea,jdbcType=VARCHAR}
        </if>
        <if test="activityTime!=null">
            AND a.ACTIVITY_START_TIME
            &lt;=#{activityTime,jdbcType=VARCHAR} AND
            a.ACTIVITY_END_TIME
            &gt;=#{activityTime,jdbcType=VARCHAR}
        </if>
        <if test="activityStartTime !=null">
            AND GREATEST(a.ACTIVITY_START_TIME, (
            CASE a.ACTIVITY_END_TIME
            WHEN a.ACTIVITY_END_TIME IS NULL THEN
            a.ACTIVITY_START_TIME
            WHEN a.ACTIVITY_END_TIME = '' THEN
            a.ACTIVITY_START_TIME
            ELSE
            a.ACTIVITY_END_TIME
            END
            ))
            &gt;= str_to_date(
            #{activityStartTime,jdbcType=VARCHAR},
            '%Y-%m-%d'
            )
        </if>
        <if test="activityEndTime !=null">
            AND least(a.ACTIVITY_START_TIME,(
            CASE a.ACTIVITY_END_TIME
            WHEN a.ACTIVITY_END_TIME IS NULL THEN
            a.ACTIVITY_START_TIME
            WHEN a.ACTIVITY_END_TIME = '' THEN
            a.ACTIVITY_START_TIME
            ELSE
            a.ACTIVITY_END_TIME
            END
            )) &lt;=
            #{activityEndTime,jdbcType=VARCHAR}
        </if>
        <if test="activityType != null ">
            AND a.ACTIVITY_TYPE like #{activityType,jdbcType=VARCHAR}
        </if>
        <if test="activityLocation != null">
            AND a.activity_Location =
            #{activityLocation,jdbcType=VARCHAR}
        </if>
        <if test="activityPrice != null ">
            AND cast(a.ACTIVITY_PRICE as decimal(10,4)) &gt;=
            #{activityPrice,jdbcType=INTEGER}
        </if>
        <if test="activityPriceEnd != null ">
            AND cast(a.ACTIVITY_PRICE as decimal(10,4)) &lt;=
            #{activityPriceEnd,jdbcType=INTEGER}
        </if>

        ) AS total
    </select>

    <!-- 查询取票机活动list -->
    <select id="queryActivityListTicketLoad" resultMap="BaseResultMap"
            parameterType="java.util.Map">

        SELECT
        a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_END_TIME,
        a.ACTIVITY_CITY,
        a.ACTIVITY_AREA,
        a.ACTIVITY_ADDRESS,
        a.ACTIVITY_ICON_URL,
        a.SYS_ID,
        a.SYS_NO,
        (
        SELECT
        count(cs.RELATE_ID)
        FROM
        cms_collect cs
        WHERE
        a.activity_id = cs.RELATE_ID
        AND cs.TYPE = 2
        ) AS collectNum,
        IF(caetemp.aCount >0,0,1) AS activityReservationCount,
        st.YEAR_BROWSE_COUNT,
        a.sys_no,
        <if test="venueId != null">
            IF(vr.venue_id = #{venueId,jdbcType=VARCHAR},0,1) AS SORT,
        </if>
        a.ACTIVITY_IS_RESERVATION
        FROM
        cms_activity a

        LEFT JOIN (
        SELECT
        activity_id,
        count(activity_id) AS YEAR_BROWSE_COUNT
        FROM
        cms_activity_user_statistics as a
        WHERE
        OPERATE_TYPE = 1
        AND DATE_SUB(CURDATE(), INTERVAL 1 YEAR) &lt;= a.CREATE_TIME
        GROUP BY
        activity_id
        ) AS st ON st.activity_id = a.activity_id

        LEFT JOIN ( SELECT cae.activity_id, MAX(cae.EVENT_DATE_TIME) AS maxDateTime ,SUM(cae.AVAILABLE_COUNT) AS aCount
        FROM cms_activity_event cae

        WHERE SUBSTRING(cae.EVENT_DATE_TIME, 1, 16) > CURRENT_TIMESTAMP

        GROUP BY cae.activity_id ) AS caetemp ON caetemp.activity_id = a.activity_id
        LEFT JOIN sys_dict b ON a.ratings_info = b.dict_id

        LEFT JOIN cms_activity_venue_relevance vr ON vr.ACTIVITY_ID = a.ACTIVITY_ID

        WHERE 1 = 1
<!--         SUBSTRING(caetemp.maxDateTime, 1, 16) > CURRENT_TIMESTAMP-->
        <if test="venueId != null">
            and (vr.venue_id = #{venueId,jdbcType=VARCHAR} or IF(caetemp.aCount >0,0,1) = 0)
        </if>
        <if test="venueId == null">
    <!--           and IF(caetemp.aCount >0,0,1) = 0 -->
           </if>
           <if test="activityId != null">
               AND a.ACTIVITY_ID = #{activityId,jdbcType=INTEGER}
           </if>
           <if test="activityIsDel != null">
               AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
           </if>
           <if test="activityState != null">
               AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
           </if>
           <if test="activityName != null">
               AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR}
           </if>
           <if test="activityArea != null">
               AND a.ACTIVITY_AREA like #{activityArea,jdbcType=VARCHAR}
           </if>
           <if test="venueArea != null">
               AND v.venue_area like #{venueArea,jdbcType=VARCHAR}
           </if>
           <if test="activityTime!=null">
               AND a.ACTIVITY_START_TIME
               &lt;=#{activityTime,jdbcType=VARCHAR} AND
               a.ACTIVITY_END_TIME
               &gt;=#{activityTime,jdbcType=VARCHAR}
           </if>
           <if test="activityStartTime !=null">
               AND GREATEST(a.ACTIVITY_START_TIME, (
               CASE a.ACTIVITY_END_TIME
               WHEN a.ACTIVITY_END_TIME IS NULL THEN
               a.ACTIVITY_START_TIME
               WHEN a.ACTIVITY_END_TIME = '' THEN
               a.ACTIVITY_START_TIME
               ELSE
               a.ACTIVITY_END_TIME
               END
               ))
               &gt;= str_to_date(
               #{activityStartTime,jdbcType=VARCHAR},
               '%Y-%m-%d'
               )
           </if>
           <if test="activityEndTime !=null">
               AND least(a.ACTIVITY_START_TIME,(
               CASE a.ACTIVITY_END_TIME
               WHEN a.ACTIVITY_END_TIME IS NULL THEN
               a.ACTIVITY_START_TIME
               WHEN a.ACTIVITY_END_TIME = '' THEN
               a.ACTIVITY_START_TIME
               ELSE
               a.ACTIVITY_END_TIME
               END
               )) &lt;=
               #{activityEndTime,jdbcType=VARCHAR}
           </if>
           <if test="activityType != null ">
               AND a.ACTIVITY_TYPE like #{activityType,jdbcType=VARCHAR}
           </if>
           <if test="activityLocation != null">
               AND a.activity_Location =
               #{activityLocation,jdbcType=VARCHAR}
           </if>
           <if test="activityPrice != null ">
               AND cast(a.ACTIVITY_PRICE as decimal(10,4)) &gt;=
               #{activityPrice,jdbcType=INTEGER}
           </if>
           <if test="activityPriceEnd != null ">
               AND cast(a.ACTIVITY_PRICE as decimal(10,4)) &lt;=
               #{activityPriceEnd,jdbcType=INTEGER}
           </if>
           order by
           <if test="venueId != null">
               sort,
           </if>
           activityReservationCount,
           IF(ISNULL(b.dict_name),1,0) ASC,b.dict_name,
           maxDateTime
           <if test="firstResult != null">
               limit ${firstResult},${rows}
           </if>


       </select>

       <!-- 查询前台活动listLoad列表页信息 -->
    <select id="queryActivityListLoadCount" resultType="java.lang.Integer"
            parameterType="java.util.Map">
        SELECT count(1)
        FROM cms_activity a
        left join (
        SELECT
        activity_id,
        count(activity_id) AS YEAR_BROWSE_COUNT
        FROM
        cms_activity_user_statistics as a
        WHERE
        OPERATE_TYPE = 1
        AND DATE_SUB(CURDATE(), INTERVAL 1 YEAR) &lt;= a.CREATE_TIME
        GROUP BY
        activity_id
        ) AS st ON st.activity_id = a.activity_id
        LEFT JOIN (
        SELECT cae.activity_id,
        max(cae.EVENT_DATE_TIME) as maxDateTime
        FROM
        cms_activity_event cae
        GROUP BY
        cae.activity_id
        ) as caetemp on caetemp.activity_id = a.activity_id
        WHERE substring(caetemp.maxDateTime, 1, 16) > CURRENT_TIMESTAMP
        <if test="activityId != null">
            AND a.ACTIVITY_ID = #{activityId,jdbcType=INTEGER}
        </if>
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR}
        </if>
        <if test="activityArea != null">
            AND a.ACTIVITY_AREA like #{activityArea,jdbcType=VARCHAR}
        </if>
        <if test="venueArea != null">
            AND v.venue_area like #{venueArea,jdbcType=VARCHAR}
        </if>
        <!-- <if test="venueType != null"> AND v.venue_type = #{venueType,jdbcType=VARCHAR}
			</if> -->
        <if test="venueId != null">
            AND v.venue_id = #{venueId,jdbcType=VARCHAR}
        </if>
        <if test="activityTime!=null">
            AND a.ACTIVITY_START_TIME
            &lt;=#{activityTime,jdbcType=VARCHAR} AND
            a.ACTIVITY_END_TIME
            &gt;=#{activityTime,jdbcType=VARCHAR}
        </if>
        <if test="activityStartTime !=null">
            AND GREATEST(a.ACTIVITY_START_TIME, (
            CASE a.ACTIVITY_END_TIME
            WHEN a.ACTIVITY_END_TIME IS NULL THEN
            a.ACTIVITY_START_TIME
            WHEN a.ACTIVITY_END_TIME = '' THEN
            a.ACTIVITY_START_TIME
            ELSE
            a.ACTIVITY_END_TIME
            END
            ))
            &gt;= str_to_date(
            #{activityStartTime,jdbcType=VARCHAR},
            '%Y-%m-%d'
            )
        </if>
        <if test="activityEndTime !=null">
            AND least(a.ACTIVITY_START_TIME,(
            CASE a.ACTIVITY_END_TIME
            WHEN a.ACTIVITY_END_TIME IS NULL THEN
            a.ACTIVITY_START_TIME
            WHEN a.ACTIVITY_END_TIME = '' THEN
            a.ACTIVITY_START_TIME
            ELSE
            a.ACTIVITY_END_TIME
            END
            )) &lt;=
            #{activityEndTime,jdbcType=VARCHAR}
        </if>

        <!--			<if test="activityStartTime !=null">
			and
				(a.ACTIVITY_START_TIME &gt;= #{activityStartTime,jdbcType=VARCHAR}
			or a.ACTIVITY_END_TIME  &gt;= #{activityStartTime,jdbcType=VARCHAR}
			)
		</if>
		<if test="activityEndTime !=null">
			and
			(a.ACTIVITY_START_TIME &lt;= #{activityEndTime,jdbcType=VARCHAR}
			or a.ACTIVITY_END_TIME &lt;= #{activityEndTime,jdbcType=VARCHAR})

		</if>-->
        <if test="activityType != null ">
            AND a.ACTIVITY_TYPE like #{activityType,jdbcType=VARCHAR}
        </if>
        <if test="activityLocation != null">
            AND a.activity_Location =
            #{activityLocation,jdbcType=VARCHAR}
        </if>
        <if test="activityPrice != null ">
            AND cast(a.ACTIVITY_PRICE as decimal(10,4)) &gt;=
            #{activityPrice,jdbcType=INTEGER}
        </if>
        <if test="activityPriceEnd != null ">
            AND cast(a.ACTIVITY_PRICE as decimal(10,4)) &lt;=
            #{activityPriceEnd,jdbcType=INTEGER}
        </if>
    </select>

    <!-- 查询前台活动列表页数量信息 -->
    <select id="queryFrontActivityListCount" resultType="java.lang.Integer"
            parameterType="java.util.Map">
        SELECT count(*)
        FROM cms_activity a,
        cms_venue v,
        cms_activity_venue_relevance r
        WHERE a.activity_id=r.activity_id
        AND
        v.venue_id=r.venue_id
        <if test="activityId != null">
            AND a.ACTIVITY_ID = #{activityId,jdbcType=INTEGER}
        </if>
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR}
        </if>
        <if test="activityArea != null">
            AND a.ACTIVITY_AREA like #{activityArea,jdbcType=VARCHAR}
        </if>
        <if test="venueArea != null">
            AND v.venue_area like #{venueArea,jdbcType=VARCHAR}
        </if>
        <if test="venueType != null">
            AND v.venue_type = #{venueType,jdbcType=VARCHAR}
        </if>
        <if test="venueId != null">
            AND v.venue_id = #{venueId,jdbcType=VARCHAR}
        </if>
        <if test="activityTime!=null">
            AND a.ACTIVITY_START_TIME
            &lt;=#{activityTime,jdbcType=VARCHAR} AND
            a.ACTIVITY_END_TIME
            &gt;=#{activityTime,jdbcType=VARCHAR}
        </if>
        <if test="activityStartTime !=null">
            AND cast(a.ACTIVITY_START_TIME as datetime)
            &gt;=#{activityStartTime,jdbcType=VARCHAR}
        </if>
        <if test="activityEndTime !=null">
            AND cast(a.ACTIVITY_START_TIME as datetime) &lt;=
            #{activityEndTime,jdbcType=VARCHAR}
        </if>
        <if test="activityLocation != null">
            AND a.activity_Location =
            #{activityLocation,jdbcType=VARCHAR}
        </if>

        <if test="venueDept != null ">
            AND v.VENUE_DEPT like #{venueDept,jdbcType=VARCHAR}
        </if>
        <if test="activityType != null ">
            AND a.ACTIVITY_TYPE like #{activityType,jdbcType=VARCHAR}
        </if>
        <if test="activityPrice != null ">
            AND cast(a.ACTIVITY_PRICE as decimal(10,4)) &gt;=
            #{activityPrice,jdbcType=INTEGER}
        </if>
        <if test="activityPriceEnd != null ">
            AND cast(a.ACTIVITY_PRICE as decimal(10,4)) &lt;=
            #{activityPriceEnd,jdbcType=INTEGER}
        </if>
    </select>


    <!-- 查询前台活动座位信息 -->
    <select id="queryActivitySeatByCondition" resultType="java.util.Map"
            parameterType="java.util.Map">
        SELECT vs.*,ac.SEAT_STATUS as ACT_SEAT_STATUS,ac.SEAT_IS_SOLD
        FROM
        cms_venue_seat vs, cms_venue v,cms_activity_seat ac
        WHERE vs.VENUE_ID =
        v.VENUE_ID AND vs.SEAT_ID = ac.SEAT_ID
        <if test="activityId != null">
            AND ac.ACTIVITY_ID = #{activityId,jdbcType=INTEGER}
        </if>
        order by SEAT_ROW,SEAT_COLUMN
    </select>

    <!-- 查询前台活动热点推荐信息 -->
    <select id="queryRecommendActivityList" resultMap="BaseResultMap"
            parameterType="java.util.Map">
        SELECT
        a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_ICON_URL
        FROM cms_activity a
        WHERE 1=1
        <if test="activityId != null">
            AND a.ACTIVITY_ID = #{activityId,jdbcType=INTEGER}
        </if>
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR}
        </if>
        <if test="activityArea != null">
            AND a.ACTIVITY_AREA like #{activityArea,jdbcType=VARCHAR}
        </if>
        <if test="activityRecommend != null">
            AND a.ACTIVITY_RECOMMEND = #{activityRecommend,jdbcType=VARCHAR}
        </if>
        order by a.ACTIVITY_RECOMMEND_TIME desc
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>


    <!-- 查询前台活动热点推荐信息收藏数量 -->
    <select id="frontRecommendActivityCollectNum" resultType="hashmap"
            parameterType="java.util.Map">
        SELECT a.ACTIVITY_ID as activityId,
        (SELECT count(cs.RELATE_ID) from cms_collect cs where a.activity_id = cs.RELATE_ID and cs.TYPE =2) as
        collectNum,
        caus.yearBrowseCount as yearBrowseCount
        FROM
        cms_activity a
        LEFT JOIN (select activity_id, count(activity_id) as yearBrowseCount from cms_activity_user_statistics where
        OPERATE_TYPE=1
        AND DATE_SUB(CURDATE(), INTERVAL 1 YEAR) &lt;= CREATE_TIME
        group by activity_id) as caus on caus.ACTIVITY_ID = a.activity_id
        WHERE 1=1
        <if test="activityId != null">
            AND a.ACTIVITY_ID = #{activityId,jdbcType=INTEGER}
        </if>
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR}
        </if>
        <if test="activityArea != null">
            AND a.ACTIVITY_AREA like #{activityArea,jdbcType=VARCHAR}
        </if>
        <if test="activityRecommend != null">
            AND a.ACTIVITY_RECOMMEND like #{activityRecommend,jdbcType=VARCHAR}
        </if>
        order by a.ACTIVITY_RECOMMEND_TIME desc
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>

    <!-- 查询前台活动热点推荐信息 -->
    <select id="queryRecommendActivityLostList" resultMap="BaseResultMap"
            parameterType="java.util.Map">
        SELECT a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        a.ACTIVITY_LINKMAN,
        a.ACTIVITY_TEL,
        a.ACTIVITY_IS_FREE,
        a.ACTIVITY_PRICE,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_END_TIME,
        a.ACTIVITY_IS_DEL,
        a.ACTIVITY_STATE,
        a.ACTIVITY_CREATE_TIME,
        a. ACTIVITY_UPDATE_TIME,
        a.ACTIVITY_CREATE_USER,
        a.ACTIVITY_UPDATE_USER,
        a.ACTIVITY_DEPT,
        a.ACTIVITY_ICON_URL,
        a.ACTIVITY_ADDRESS,
        a.activity_Recommend

        FROM
        cms_activity a,
        cms_activity_venue_relevance r

        WHERE
        a.activity_id=r.activity_id
        /*and ACTIVITY_END_TIME > current_timestamp*/
        <if test="activityId != null">
            AND a.ACTIVITY_ID = #{activityId,jdbcType=INTEGER}
        </if>
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR}
        </if>
        <if test="activityArea != null">
            AND a.ACTIVITY_AREA not like
            #{activityArea,jdbcType=VARCHAR}
        </if>

        <if test="activityRecommend != null ">
            order by a.ACTIVITY_RECOMMEND desc ,
            a.ACTIVITY_UPDATE_TIME desc
        </if>
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>

    <!--app查询后台推荐活动 -->
    <select id="queryCmsActivityAppByActivityNum" resultMap="BaseResultMap"
            parameterType="java.util.Map">
        SELECT
        DISTINCT a.ACTIVITY_ID,
        a.ACTIVITY_ICON_URL,
        a.ACTIVITY_NAME,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_END_TIME,
        a.ACTIVITY_ADDRESS,
        ce.AVAILABLE_COUNT,
        a.ACTIVITY_LON,
        a.ACTIVITY_LAT
        FROM
        cms_activity a
        LEFT JOIN cms_activity_event ce
        on a.ACTIVITY_ID=ce.ACTIVITY_ID
        WHERE 1=1
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="activityRecommend != null">
            AND a.ACTIVITY_RECOMMEND =
            #{activityRecommend,jdbcType=VARCHAR}
        </if>
        ORDER BY a.ACTIVITY_RECOMMEND desc ,a.ACTIVITY_UPDATE_TIME desc
        limit 0,3
    </select>


    <!--前台你可能喜欢的活动(年浏览次数降序) -->
    <select id="queryYearHotActivity" resultMap="BaseResultMap"
            parameterType="com.sun3d.why.model.CmsActivity">
        SELECT
        ACTIVITY_ID,
        ACTIVITY_NAME,
        ACTIVITY_ADDRESS,
        ACTIVITY_START_TIME,
        ACTIVITY_ICON_URL,
        activity_area
        from cms_activity
        LEFT
        JOIN
        cms_statistics ON cms_activity.ACTIVITY_ID = cms_statistics.S_ID
        where
        ACTIVITY_IS_DEL =1
        and ACTIVITY_STATE=6
        and
        GREATEST(ACTIVITY_START_TIME, (
        CASE ACTIVITY_END_TIME
        WHEN ACTIVITY_END_TIME IS NULL THEN
        ACTIVITY_START_TIME
        WHEN ACTIVITY_END_TIME = '' THEN
        ACTIVITY_START_TIME
        ELSE
        ACTIVITY_END_TIME
        END
        )) >= current_timestamp
        /*and ACTIVITY_END_TIME > current_timestamp*/
        <if test="activityArea != null">
            and activity_area like #{activityArea, jdbcType=VARCHAR}
        </if>
        <if test="activityType != null and activityType != ''">
            and activity_type like #{activityType, jdbcType=VARCHAR}
        </if>
        <if test="activityName != null and activityName != ''">
            AND ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR}
        </if>
        ORDER BY YEAR_BROWSE_COUNT desc
        <if test="firstResult != null">
            <include refid="pagination_condition"/>
        </if>
    </select>
    <!--app根据展馆id获取相关活动列表 -->
    <select id="queryActivityListById" resultMap="BaseResultMap"
            parameterType="java.util.Map">
        SELECT
        a.ACTIVITY_ID,a.ACTIVITY_NAME,a.ACTIVITY_START_TIME,a.ACTIVITY_END_TIME,a.activity_is_free,
        a.ACTIVITY_PRICE,a.ACTIVITY_PAY_PRICE,a.ACTIVITY_ICON_URL,a.sys_no,a.sys_id,
        IFNULL(
        SUM(
        IF (
        ce.EVENT_DATE_TIME >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'),
        ce.AVAILABLE_COUNT,
        0
        )
        ),
        0
        ) AS AVAILABLE_COUNT,a.ACTIVITY_IS_RESERVATION
        from cms_activity a
        LEFT JOIN cms_activity_venue_relevance v
        on a.ACTIVITY_ID=v.ACTIVITY_ID
        LEFT JOIN cms_activity_event ce
        on a.ACTIVITY_ID=ce.ACTIVITY_ID
        WHERE 1=1
        <if test="venueId != null">
            AND v.VENUE_ID = #{venueId,jdbcType=VARCHAR}
        </if>
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        GROUP BY a.ACTIVITY_ID
        HAVING
        CONVERT (
        substring(
        GROUP_CONCAT(
        DISTINCT ce.event_date_time
        ORDER BY
        ce.event_date_time DESC
        ),
        1,
        16
        ),
        CHAR
        ) >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
        order by a.ACTIVITY_UPDATE_TIME desc
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>

    <select id="queryActivityListByCity" resultMap="BaseResultMap"
            parameterType="java.util.Map">
        SELECT a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        a.ACTIVITY_ADDRESS,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_ICON_URL

        <!--a.ACTIVITY_TEL,
		a.ACTIVITY_SORT,
		a.ACTIVITY_IS_FREE,
		a.ACTIVITY_PRICE,

		a.ACTIVITY_END_TIME,
		a.ACTIVITY_IS_DEL,
		a.ACTIVITY_STATE,
		a.ACTIVITY_CREATE_TIME,
		a. ACTIVITY_UPDATE_TIME,
		a.ACTIVITY_CREATE_USER,
		a.ACTIVITY_UPDATE_USER,
		a.ACTIVITY_DEPT,
		a.activity_Recommend-->
        FROM
        cms_activity a
        WHERE 1=1
        <if test="activityIds != null">
            AND a.activity_Id not in
            <foreach item="item" index="index" collection="activityIds"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR}
        </if>
        <if test="activityArea != null">
            AND a.ACTIVITY_AREA like #{activityArea,jdbcType=VARCHAR}
        </if>
        <if test="activityType != null">
            and a.activity_type like #{activityType, jdbcType=VARCHAR}
        </if>
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>


    <!--app标签推荐今天是否有活动 -->
    <select id="queryAppCountByActivity" resultMap="BaseResultMap">
        SELECT
        a.ACTIVITY_ID,a.ACTIVITY_ICON_URL,a.ACTIVITY_NAME,a.ACTIVITY_ADDRESS,a.ACTIVITY_IS_FREE,a.ACTIVITY_LON,a.ACTIVITY_LAT
        from cms_activity a
        WHERE 1=1
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        /*and a.ACTIVITY_END_TIME > current_timestamp*/
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="date != null">
            AND DATE_FORMAT(a.ACTIVITY_END_TIME,'%Y-%m') =
            #{date,jdbcType=VARCHAR}
        </if>
        <if test="activityType != null ">
            AND a.ACTIVITY_TYPE like #{activityType,jdbcType=VARCHAR}
        </if>
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>

    <!--根据活动id 获得该活动的标签值 -->
    <select id="queryActivityLabelById" resultType="hashmap"
            parameterType="hashmap">
        SELECT TAG_ID as tagId, TAG_NAME as tagName from cms_tag
        where 1=1
        AND
        TAG_ID in
        <foreach item="item" index="index" collection="tagIds" open="("
                 separator="," close=")">
            #{item}
        </foreach>

    </select>

    <select id="queryExistArea" resultType="hashmap" parameterType="java.lang.String">
        SELECT ACTIVITY_AREA as activityArea from cms_activity
        where 1=1
        <if test="activityState != null ">
            AND ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        group by ACTIVITY_AREA

    </select>

    <select id="queryExistType" resultType="hashmap" parameterType="java.lang.String">
        SELECT ACTIVITY_TYPE as activityType from cms_activity
        where 1=1
        <if test="activityType != null ">
            AND ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        group by ACTIVITY_Type

    </select>


    <!--统计活动数量 -->

    <select id="queryActivityStatistic" resultType="java.util.Map"
            parameterType="java.util.Map">
        SELECT
        a.ACTIVITY_AREA AS area,
        a.curCount AS curCount,
        a.preCount AS preCount
        FROM
        ((
        SELECT
        ACTIVITY_AREA,
        0 preCount,
        count(*) curCount
        FROM
        cms_activity
        WHERE
        ACTIVITY_CREATE_TIME &gt;= date_sub(
        #{activityCreateTimeEnd},
        INTERVAL
        <if test="queryType == 1">
            1 WEEK
        </if>
        <if test="queryType == 2">
            1 MONTH
        </if>
        <if test="queryType == 3">
            3 MONTH
        </if>
        <if test="queryType == 4">
            1 YEAR
        </if>
        )
        AND ACTIVITY_CREATE_TIME &lt;= #{activityCreateTimeEnd}
        AND ACTIVITY_IS_DEL = '1'
        AND ACTIVITY_STATE = '6'
        GROUP BY
        ACTIVITY_AREA
        )
        UNION
        (
        SELECT
        ACTIVITY_AREA,
        count(*) preCount,
        0 curCount
        FROM
        cms_activity
        WHERE
        ACTIVITY_CREATE_TIME &gt;= date_sub(
        #{activityCreateTimeEnd},
        INTERVAL
        <if test="queryType == 1">
            2 WEEK
        </if>
        <if test="queryType == 2">
            2 MONTH
        </if>
        <if test="queryType == 3">
            6 MONTH
        </if>
        <if test="queryType == 4">
            2 YEAR
        </if>
        )
        AND ACTIVITY_CREATE_TIME &lt;= date_sub(
        #{activityCreateTimeEnd},
        INTERVAL
        <if test="queryType == 1">
            1 WEEK
        </if>
        <if test="queryType == 2">
            1 MONTH
        </if>
        <if test="queryType == 3">
            3 MONTH
        </if>
        <if test="queryType == 4">
            1 YEAR
        </if>
        )
        AND ACTIVITY_IS_DEL = '1'
        AND ACTIVITY_STATE = '6'
        GROUP BY
        ACTIVITY_AREA
        ))
        AS a
        GROUP BY
        a.ACTIVITY_AREA


    </select>


    <!--统计活动标签数量 -->
    <select id="queryActivityCircleStatistic" resultType="java.util.Map"
            parameterType="java.util.Map">
        SELECT a.ACTIVITY_LOCATION as activityLocation
        ,count(a.ACTIVITY_LOCATION) as activityLocationCount,a.ACTIVITY_AREA
        as area
        FROM cms_activity a
        WHERE 1=1
        and a.ACTIVITY_LOCATION is not null
        and a.ACTIVITY_LOCATION != ''
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>


        group by a.ACTIVITY_LOCATION,a.ACTIVITY_AREA

        order by
        activityLocationCount desc


        <!--<if test="activityCreateTimeBegin != null"> -->
        <!--AND a.ACTIVITY_CREATE_TIME &gt;= #{activityCreateTimeBegin,jdbcType=TIMESTAMP} -->
        <!--</if> -->
        <!--<if test="activityCreateTimeEnd != null"> -->
        <!--AND a.ACTIVITY_CREATE_TIME &lt;= #{activityCreateTimeEnd,jdbcType=TIMESTAMP} -->
        <!--</if> -->
    </select>

    <!-- 统计各个区县活动数量 -->
    <select id="queryActivityGroupByArea" resultType="java.util.Map"
            parameterType="java.util.Map">
        select count(*) as statisticsCount ,a.ACTIVITY_AREA as area FROM
        cms_activity a
        where 1=1
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        group by a.ACTIVITY_AREA
    </select>
    <!--app根据条件筛选活动列表 -->
    <select id="queryAppFrontActivityList" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
        DISTINCT a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_END_TIME,
        a.ACTIVITY_ADDRESS,
        a.ACTIVITY_PRICE,
        a.ACTIVITY_PAY_PRICE,
        a.JOIN_METHOD,
        a.ACTIVITY_ICON_URL,
        IFNULL(sum(ce.AVAILABLE_COUNT),0) AS AVAILABLE_COUNT,
        a.activity_Recommend,
        a.ACTIVITY_LON,
        a.ACTIVITY_LAT,
        a.ACTIVITY_IS_RESERVATION,
        a.ACTIVITY_UPDATE_TIME
        FROM
        cms_activity a LEFT JOIN cms_activity_event ce
        on a.ACTIVITY_ID=ce.ACTIVITY_ID
        where 1=1
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR} ESCAPE '/'
        </if>
        <if test="activityArea != null">
            AND a.ACTIVITY_AREA like #{activityArea,jdbcType=VARCHAR}
        </if>
        <if test="activityTime!=null">
            AND a.ACTIVITY_START_TIME
            &lt;=#{activityTime,jdbcType=VARCHAR} AND
            a.ACTIVITY_END_TIME
            &gt;=#{activityTime,jdbcType=VARCHAR}
        </if>
        <if test="activityStartTime !=null">
            AND GREATEST(a.ACTIVITY_START_TIME,a.ACTIVITY_END_TIME)
            &gt;=#{activityStartTime,jdbcType=VARCHAR}
        </if>
        <if test="activityEndTime !=null">
            AND least(a.ACTIVITY_START_TIME,a.ACTIVITY_END_TIME) &lt;=
            #{activityEndTime,jdbcType=VARCHAR}
        </if>
        <if test="activityType != null ">
            AND a.ACTIVITY_TYPE like #{activityType,jdbcType=VARCHAR}
        </if>
        <if test="activityLocation != null">
            AND a.activity_Location =
            #{activityLocation,jdbcType=VARCHAR}
        </if>
        GROUP BY a.ACTIVITY_ID
        <if test="activityRecommend == null and appType == 2">
            order by a.ACTIVITY_UPDATE_TIME desc
        </if>
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>
    <!--app根据条件筛选活动列表数 -->
    <select id="queryAppActivityListCount" resultType="java.lang.Integer" parameterType="java.util.Map">
        SELECT
        COUNT(DISTINCT a.ACTIVITY_ID) FROM
        cms_activity a LEFT JOIN cms_activity_event ce
        on a.ACTIVITY_ID=ce.ACTIVITY_ID
        where 1=1
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR} escape '/'
        </if>
        <if test="activityArea != null">
            AND a.ACTIVITY_AREA like #{activityArea,jdbcType=VARCHAR}
        </if>
        <if test="activityTime!=null">
            AND a.ACTIVITY_START_TIME
            &lt;=#{activityTime,jdbcType=VARCHAR} AND
            a.ACTIVITY_END_TIME
            &gt;=#{activityTime,jdbcType=VARCHAR}
        </if>
        <if test="activityStartTime !=null">
            AND GREATEST(a.ACTIVITY_START_TIME,a.ACTIVITY_END_TIME)
            &gt;=#{activityStartTime,jdbcType=VARCHAR}
        </if>
        <if test="activityEndTime !=null">
            AND least(a.ACTIVITY_START_TIME,a.ACTIVITY_END_TIME) &lt;=
            #{activityEndTime,jdbcType=VARCHAR}
        </if>
        <if test="activityType != null ">
            AND a.ACTIVITY_TYPE like #{activityType,jdbcType=VARCHAR}
        </if>
        <if test="activityLocation != null">
            AND a.activity_Location =
            #{activityLocation,jdbcType=VARCHAR}
        </if>
        <if test="activityTheme != null ">
            AND a.ACTIVITY_THEME like #{activityTheme,jdbcType=VARCHAR}
        </if>
        <!--<if test="activityStartDateTime != null and activityStartDateTime != ''">
			AND substring(ce.event_date_time,1,16) &gt;= #{activityStartDateTime}
		</if>-->
    </select>

    <!--app根据活动id查询活动对象 -->
    <select id="queryAppActivityById" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
        a.ACTIVITY_NOTICE,
        a.SYS_ID,
        a.SYS_NO,
        GROUP_CONCAT(
        DISTINCT cf.FUN_NAME SEPARATOR ','
        ) AS funName,
        SUBSTRING(a.activity_city, locate(',', a.activity_city)+1) as city,
        SUBSTRING(a.activity_area, locate(',', a.activity_area)+1) as area,
        a.ACTIVITY_ID,
        a.ACTIVITY_ICON_URL,
        a.ACTIVITY_NAME,
        a.ACTIVITY_SITE,
        a.ACTIVITY_ADDRESS,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_END_TIME,
        a.price_describe,
        a.ACTIVITY_TEL,
        a.ACTIVITY_PRICE,
        a.ACTIVITY_PAY_PRICE,
        a.activity_is_free,
        IFNULL((
        CASE WHEN
        str_to_date(a.ACTIVITY_START_TIME,'%Y-%m-%d') > CURDATE() THEN
        DATEDIFF(a.ACTIVITY_START_TIME,CURDATE())
        WHEN CURDATE()&gt;=str_to_date(a.ACTIVITY_START_TIME,'%Y-%m-%d') and CURDATE()&lt;=str_to_date(a.ACTIVITY_END_TIME,'%Y-%m-%d')
        THEN
        '0'
        ELSE
        '-1'
        END
        ),'-1')as dateNums,
        a.ACTIVITY_MEMO,
        a.ACTIVITY_TIME_DES,
        a.ACTIVITY_LON,
        a.ACTIVITY_LAT,
        a.ACTIVITY_IS_RESERVATION,
        a.ACTIVITY_SUPPLEMENT_TYPE,
        a.ACTIVITY_SALES_ONLINE,
        <if test="userId!=null">
            (select COUNT(*) from cms_collect c WHERE 1=1 AND c.TYPE=#{type}
            and c.USER_ID=#{userId}
            AND c.RELATE_ID=#{relatedId}) AS collectNum,
        </if>
        <if test="userId!=null">
            (
            SELECT
            count(*)
            FROM
            cms_user_wantgo cau
            WHERE
            1 = 1 and cau.relate_id =#{relatedId}
            AND cau.USER_ID =#{userId}
            ) AS activityIsWant,
        </if>
        GROUP_CONCAT(DISTINCT ct.TAG_NAME SEPARATOR ',') AS tagName,
        (SELECT IFNULL(SUM(ce.AVAILABLE_COUNT),0) from cms_activity_event ce WHERE 1=1
        <if test="relatedId!=null">
            AND ce.ACTIVITY_ID=#{relatedId}
        </if>
        AND ce.EVENT_DATE_TIME >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
        )AS AVAILABLE_COUNT
        FROM
        cms_activity a
        INNER JOIN (
        SELECT
        CONVERT (
        concat_ws(
        ',',
        ca.ACTIVITY_THEME,
        ca.ACTIVITY_TYPE
        ),
        CHAR
        ) AS type,
        ca.ACTIVITY_ID
        FROM
        cms_activity ca
        WHERE
        1 = 1
        <if test="relatedId!=null">
            AND ca.ACTIVITY_ID=#{relatedId}
        </if>
        ) al ON a.ACTIVITY_ID = al.ACTIVITY_ID
        LEFT JOIN cms_tag ct ON FIND_IN_SET(ct.TAG_ID, al.type)
        LEFT JOIN cms_activity_template cat on cat.TEMPL_ID=a.TEMPL_ID
        LEFT JOIN cms_activity_template_rel catl on catl.TEMPL_ID=cat.TEMPL_ID
        LEFT JOIN cms_function cf on cf.FUN_ID=catl.FUN_ID
        WHERE
        1 = 1
        AND a.ACTIVITY_IS_DEL = 1
        AND a.ACTIVITY_STATE = 6
        <if test="relatedId!=null">
            AND a.ACTIVITY_ID=#{relatedId}
        </if>
        <!--<if test="activityStartTime != null and activityStartTime != ''">
			AND substring(ce.event_date_time,1,16) &gt;= #{activityStartTime}
		</if>-->
    </select>

    <!--活动草稿箱发布活动-->
    <update id="updateStateByActivityId" parameterType="com.sun3d.why.model.CmsActivity">
		update
		CMS_ACTIVITY
		set ACTIVITY_STATE = #{activityState}
		where ACTIVITY_ID = #{activityId}
	</update>


    <select id="setOldEvent" resultMap="BaseResultMap" parameterType="java.util.Map">
		SELECT  *FROM cms_activity a WHERE  a.ACTIVITY_START_TIME like '%:%' or a.ACTIVITY_END_TIME like '%:%'
	</select>

    <!--数字文化管或图书馆活动个数-->
    <select id="queryCmsActivityListLoadCount" resultType="java.lang.Integer"
            parameterType="java.util.Map">
        SELECT
        count(*)
        FROM
        cms_activity a
        LEFT JOIN cms_activity_venue_relevance r ON a.activity_id = r.activity_id
        LEFT JOIN cms_venue v ON v.venue_id = r.venue_id
        LEFT JOIN (
        SELECT
        activity_id,
        count(activity_id) AS weekBrowseCount
        FROM
        cms_activity_user_statistics as a
        WHERE
        OPERATE_TYPE = 1
        GROUP BY
        activity_id
        ) AS s ON s.activity_id = a.activity_id
        LEFT JOIN (
        SELECT cae.activity_id,
        max(cae.EVENT_DATE_TIME) as maxDateTime
        FROM
        cms_activity_event cae
        GROUP BY
        cae.activity_id
        ) as caetemp on caetemp.activity_id = a.activity_id
        WHERE substring(caetemp.maxDateTime, 1, 16) > CURRENT_TIMESTAMP
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR}
        </if>
        <if test="activityArea != null">
            AND a.ACTIVITY_AREA like #{activityArea,jdbcType=VARCHAR}
        </if>
        <if test="venueId == null">
            and v.venue_id in
            <foreach item="item" index="index" collection="venueIds"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="venueId != null">
            and v.venue_id = #{venueId}
        </if>
    </select>


    <!--数字文化管或图书馆活动列表-->
    <select id="queryCmsActivityListLoad" resultMap="BaseResultMap"
            parameterType="java.util.Map">
        SELECT a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        a.ACTIVITY_LINKMAN,
        a.ACTIVITY_TEL,
        a.ACTIVITY_IS_FREE,
        a.ACTIVITY_PRICE,
        a.ACTIVITY_PAY_PRICE,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_END_TIME,
        a.ACTIVITY_IS_DEL,
        a.ACTIVITY_STATE,
        a.ACTIVITY_CREATE_TIME,
        a.ACTIVITY_UPDATE_TIME,
        a.ACTIVITY_CREATE_USER,
        a.ACTIVITY_UPDATE_USER,
        a.ACTIVITY_DEPT,
        a.ACTIVITY_ICON_URL,
        a.ACTIVITY_ADDRESS,
        a.activity_Recommend,
        a.activity_is_reservation,
        v.venue_id AS venue_id,
        v.venue_name AS venue_name,
        v.venue_type AS
        venue_type,
        v.venue_area AS venue_area,
        st.YEAR_BROWSE_COUNT,
        (select sum(b.available_count) from cms_activity_event b where b.activity_id=a.activity_id and
        substring(b.event_date_time, 1, 16) > CURRENT_TIMESTAMP group by b.activity_id) as available_count
        FROM
        cms_activity a
        left join cms_activity_venue_relevance r
        on
        a.activity_id=r.activity_id
        left JOIN cms_venue v
        on
        v.venue_id=r.venue_id
        LEFT JOIN (
        SELECT
        activity_id,
        count(activity_id) AS YEAR_BROWSE_COUNT
        FROM
        cms_activity_user_statistics as a
        WHERE
        OPERATE_TYPE = 1
        AND DATE_SUB(CURDATE(), INTERVAL 1 YEAR) &lt;= a.CREATE_TIME
        GROUP BY
        activity_id
        ) AS st ON st.activity_id = a.activity_id
        LEFT JOIN (
        SELECT cae.activity_id,
        max(cae.EVENT_DATE_TIME) as maxDateTime
        FROM
        cms_activity_event cae
        GROUP BY
        cae.activity_id
        ) as caetemp on caetemp.activity_id = a.activity_id
        WHERE substring(caetemp.maxDateTime, 1, 16) > CURRENT_TIMESTAMP
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR}
        </if>
        <if test="activityArea != null">
            AND a.ACTIVITY_AREA like #{activityArea,jdbcType=VARCHAR}
        </if>
        <if test="venueId == null">
            and v.venue_id in
            <foreach item="item" index="index" collection="venueIds"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="venueId != null">
            and v.venue_id = #{venueId}
        </if>
        order by a.ACTIVITY_UPDATE_TIME asc
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>

    <!--数字文化管或图书馆活动下属活动列表-->
    <select id="queryUnderlingActivityByCondition" resultMap="BaseResultMap"
            parameterType="java.util.Map">
        SELECT a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        a.ACTIVITY_IS_FREE,
        a.ACTIVITY_IS_DEL,
        a.ACTIVITY_STATE,
        a.ACTIVITY_UPDATE_TIME,
        a.ACTIVITY_AREA,
        a.ACTIVITY_IS_RESERVATION,
        a.activity_Recommend,
        v.venue_id,
        v.venue_name,
        v.venue_type,
        u.user_account,
        a.ACTIVITY_SALES_ONLINE
        FROM cms_activity a
        inner JOIN
        cms_activity_venue_relevance r ON r.activity_id = a.activity_id
        inner JOIN cms_venue v ON v.venue_id = r.venue_id
        LEFT JOIN sys_user u ON
        a.activity_create_user = u.user_id
        WHERE 1=1
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR}
        </if>
        <if test="venueIds != null">
            and v.venue_id in
            <foreach item="item" index="index" collection="venueIds"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        order by a.ACTIVITY_UPDATE_TIME desc
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>

    <!--数字文化管或图书馆活动下属活动条数-->
    <select id="queryUnderlingActivityCountByCondition" resultType="java.lang.Integer"
            parameterType="java.util.Map">
        SELECT count(*)
        FROM cms_activity a
        LEFT JOIN
        cms_activity_venue_relevance r ON r.activity_id = a.activity_id
        LEFT
        JOIN cms_venue v ON v.venue_id = r.venue_id
        LEFT JOIN sys_user u ON
        a.activity_create_user = u.user_id
        WHERE 1=1
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR}
        </if>
        <if test="venueIds != null">
            and v.venue_id in
            <foreach item="item" index="index" collection="venueIds"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>

    <!-- 查询后台活动名称是否存在 -->
    <select id="queryCmsActivityByActivityName" resultMap="BaseResultMap">
		SELECT
		a.ACTIVITY_ID,
		a.ACTIVITY_NAME,
		a.SYS_ID
		FROM cms_activity a
		WHERE
		a.ACTIVITY_NAME =#{activityName}
		limit 1
	</select>

    <!-- app查询栏目推荐列表信息 过滤过期的活动hucheng-->
    <select id="queryAppRecommendCmsActivityByCondition" resultMap="BaseResultMap"
            parameterType="java.util.Map">
        SELECT a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        a.ACTIVITY_TYPE,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_END_TIME,
        a.ACTIVITY_STATE,
        a.ACTIVITY_CREATE_TIME,
        a.ACTIVITY_UPDATE_TIME,
        a.ACTIVITY_CREATE_USER,
        a.ACTIVITY_UPDATE_USER,
        a.ACTIVITY_AREA,
        a.ACTIVITY_DEPT,
        a.ACTIVITY_IS_RESERVATION,
        a.CREATE_ACTIVITY_CODE,
        a.activity_Recommend,
        v.venue_name AS venue_name,
        v.venue_area AS
        venue_area,
        u.user_account AS user_account,
        a.ACTIVITY_TIME_DES,
        a.ACTIVITY_SALES_ONLINE,
        crr.RECOMMEND_ID,
        crr.recommend_time as activity_recommend_time
        FROM cms_activity a
        LEFT JOIN cms_recommend_related crr ON a.activity_id = crr.related_id
        <if test="recommendColumnType != null">
            and crr.recommend_column_type = #{recommendColumnType}
        </if>
        LEFT JOIN cms_activity_venue_relevance r ON r.activity_id = a.activity_id
        LEFT JOIN cms_venue v ON v.venue_id = r.venue_id
        LEFT JOIN sys_user u ON a.activity_create_user = u.user_id
        WHERE 1=1
        AND a.ACTIVITY_END_TIME &gt;CURDATE()
        AND a.ACTIVITY_IS_DEL =1
        AND a.ACTIVITY_STATE = 6
        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR}
        </if>
        <if test="activityArea != null">
            AND a.ACTIVITY_AREA like #{activityArea,jdbcType=VARCHAR}
        </if>
        <if test="activityTheme != null ">
            AND a.ACTIVITY_THEME like #{activityTheme,jdbcType=VARCHAR}
        </if>
        <if test="activityType != null ">
            AND a.ACTIVITY_TYPE like #{activityType,jdbcType=VARCHAR}
        </if>
        order by
        crr.RECOMMEND_TIME desc,a.activity_update_time desc
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>

    <!-- app查询栏目推荐列表信息个数 过滤过期的活动hucheng-->
    <select id="queryAppRecommendCmsActivityCountByCondition" resultType="java.lang.Integer"
            parameterType="java.util.Map">
        SELECT count(*)
        FROM cms_activity a
        LEFT JOIN cms_recommend_related crr ON a.activity_id = crr.related_id
        <if test="recommendColumnType != null">
            and crr.recommend_column_type = #{recommendColumnType}
        </if>
        LEFT JOIN
        cms_activity_venue_relevance r ON r.activity_id = a.activity_id
        LEFT
        JOIN cms_venue v ON v.venue_id = r.venue_id
        LEFT JOIN sys_user u ON
        a.activity_create_user = u.user_id
        WHERE 1=1
        AND a.ACTIVITY_END_TIME &gt;CURDATE()
        AND a.ACTIVITY_IS_DEL =1
        AND a.ACTIVITY_STATE = 6
        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR}
        </if>
        <if test="activityArea != null">
            AND a.ACTIVITY_AREA like #{activityArea,jdbcType=VARCHAR}
        </if>

        <if test="activityTheme != null ">
            AND a.ACTIVITY_THEME like #{activityTheme,jdbcType=VARCHAR}
        </if>
        <if test="activityType != null ">
            AND a.ACTIVITY_TYPE like #{activityType,jdbcType=VARCHAR}
        </if>
    </select>


    <!-- 查询栏目推荐列表信息 过滤过期的活动 且置顶的活动  此方法作用是先查询已置顶的活动list，如果超过3条则将第3条设为非置顶-->
    <select id="queryRecommendCmsActivityList" resultMap="BaseResultMap"
            parameterType="java.util.Map">

        SELECT a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        a.ACTIVITY_IS_FREE,
        a.ACTIVITY_PRICE,
        a.ACTIVITY_PAY_PRICE,
        a.ACTIVITY_TYPE,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_END_TIME,
        a.ACTIVITY_STATE,
        a.ACTIVITY_CREATE_TIME,
        a.ACTIVITY_UPDATE_TIME,
        a.ACTIVITY_CREATE_USER,
        a.ACTIVITY_UPDATE_USER,
        a.ACTIVITY_AREA,
        a.ACTIVITY_DEPT,
        a.ACTIVITY_IS_RESERVATION,
        a.CREATE_ACTIVITY_CODE,
        a.activity_Recommend,
        v.venue_name AS venue_name,
        v.venue_area AS
        venue_area,
        u.user_account AS user_account,
        a.ACTIVITY_TIME_DES,
        a.ACTIVITY_SALES_ONLINE,
        a.SYS_ID,
        a.SYS_NO
        FROM cms_activity a
        LEFT JOIN
        cms_activity_venue_relevance r ON r.activity_id = a.activity_id
        LEFT
        JOIN cms_venue v ON v.venue_id = r.venue_id
        LEFT JOIN sys_user u ON
        a.activity_create_user = u.user_id
        WHERE 1=1
        AND a.ACTIVITY_RECOMMEND = 'Y'
        AND a.ACTIVITY_END_TIME &gt;CURDATE()
        AND a.ACTIVITY_IS_DEL =1
        AND a.ACTIVITY_STATE = 6

        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR}
        </if>
        <if test="activityArea != null">
            AND a.ACTIVITY_AREA like #{activityArea,jdbcType=VARCHAR}
        </if>


        <if test="activityType != null ">
            AND a.ACTIVITY_TYPE like #{activityType,jdbcType=VARCHAR}
        </if>


        <if test="activityTheme != null">
            AND
            <foreach item="item" index="index" collection="activityTheme" open="(" separator=" " close=")">
                <if test="index != 0">
                    OR
                </if>
                a.ACTIVITY_THEME like CONCAT('%','${item}','%' )

            </foreach>
        </if>
        order by
        a.ACTIVITY_RECOMMEND_TIME desc,a.ACTIVITY_UPDATE_TIME desc

        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>


    <!-- 查询栏目推荐列表信息 过滤过期的活动 且置顶的活动  此方法作用是先查询已置顶的活动list，如果超过3条则将第3条设为非置顶-->
    <select id="queryAppRecommendCmsActivityList" resultMap="BaseResultMap"
            parameterType="java.util.Map">

        SELECT a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        a.ACTIVITY_IS_FREE,
        a.ACTIVITY_PRICE,
        a.ACTIVITY_PAY_PRICE,
        a.ACTIVITY_TYPE,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_END_TIME,
        a.ACTIVITY_STATE,
        a.ACTIVITY_CREATE_TIME,
        a.ACTIVITY_UPDATE_TIME,
        a.ACTIVITY_CREATE_USER,
        a.ACTIVITY_UPDATE_USER,
        a.ACTIVITY_AREA,
        a.ACTIVITY_DEPT,
        a.ACTIVITY_IS_RESERVATION,
        a.CREATE_ACTIVITY_CODE,
        a.activity_Recommend,
        v.venue_name AS venue_name,
        v.venue_area AS
        venue_area,
        u.user_account AS user_account,
        a.ACTIVITY_TIME_DES,
        a.ACTIVITY_SALES_ONLINE,
        a.SYS_ID,
        a.SYS_NO
        FROM cms_activity a
        LEFT JOIN cms_recommend_related crr ON a.activity_id = crr.related_id
        LEFT JOIN
        cms_activity_venue_relevance r ON r.activity_id = a.activity_id
        LEFT
        JOIN cms_venue v ON v.venue_id = r.venue_id
        LEFT JOIN sys_user u ON
        a.activity_create_user = u.user_id
        WHERE 1=1
        AND a.ACTIVITY_RECOMMEND = 'Y'
        AND a.ACTIVITY_END_TIME &gt;CURDATE()
        AND a.ACTIVITY_IS_DEL =1
        AND a.ACTIVITY_STATE = 6

        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR}
        </if>
        <if test="activityArea != null">
            AND a.ACTIVITY_AREA like #{activityArea,jdbcType=VARCHAR}
        </if>


        <if test="activityType != null ">
            AND a.ACTIVITY_TYPE like #{activityType,jdbcType=VARCHAR}
        </if>


        <if test="activityTheme != null">
            AND
            <foreach item="item" index="index" collection="activityTheme" open="(" separator=" " close=")">
                <if test="index != 0">
                    OR
                </if>
                a.ACTIVITY_THEME like CONCAT('%','${item}','%' )
            </foreach>
        </if>
        order by
        crr.RECOMMEND_TIME desc,crr.UPDATE_TIME desc
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>


    <!--文化云3.1前端首页即将开始的活动-->
    <select id="queryWillStartActivity" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
        a.activity_id,
        a.activity_name,
        a.activity_city,
        a.activity_area,
        a.activity_address,
        a.activity_icon_url,
        a.activity_start_time,
        a.activity_end_time
        FROM
        cms_activity a
        WHERE
        a.activity_is_del = 1
        AND a.activity_state = 6
        <if test="activityArea != null">
            and a.activity_area like #{activityArea}
        </if>
        and a.activity_start_time > #{currentDate}
        AND a.activity_start_time &lt;= DATE_ADD(#{currentDate},INTERVAL 3 DAY)
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>

    <!--文化云3.1前端首页本周活动-->
    <select id="queryThisWeekActivity" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
        a.activity_id,
        a.activity_name,
        a.activity_icon_url,
        a.activity_city,
        a.activity_area,
        a.activity_start_time,
        a.activity_end_time
        FROM
        cms_activity a
        WHERE
        a.activity_is_del = 1
        AND a.activity_state = 6
        and a.activity_start_time = #{activityStartTime}
        <if test="activityArea != null">
            and a.activity_area like #{activityArea}
        </if>
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>

    <!--文化云3.1前端首页猜你喜欢的活动-->
    <select id="queryMayLikeActivity" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
        a.activity_id,
        a.activity_name,
        a.activity_icon_url,
        a.activity_city,
        a.activity_area,
        a.activity_address,
        a.activity_start_time,
        a.activity_end_time
        FROM
        cms_activity a
        WHERE 1=1
        AND a.activity_is_del = 1
        AND a.activity_state = 6
        AND a.ACTIVITY_START_TIME >= CURDATE()
        <if test="activityArea != null">
            and a.activity_area like #{activityArea}
        </if>
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>

    <!--文化云3.5前端首页栏目(周末去哪儿)活动-->
    <select id="queryNavigationActivity" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
        *
        FROM
        cms_activity
        RIGHT JOIN (
        SELECT
        RECOMMEND_ID,
        RELATED_ID,
        UPDATE_USER_ID,
        RECOMMEND_TIME
        FROM
        cms_recommend_related
        WHERE
        RECOMMEND_COLUMN_TYPE = 3
        ) sd ON ACTIVITY_ID = sd.RELATED_ID
        ORDER BY
        sd.RECOMMEND_TIME DESC
        limit 0,4
    </select>

    <!--修改活动信息 -->
    <update id="editRecommendCmsActivity" parameterType="com.sun3d.why.model.CmsActivity">
		update cms_activity set activity_recommend_time = #{activityRecommendTime} where activity_id=#{activityId}
	</update>


    <!--修改评级信息 -->
    <update id="editRatingsInfo">
        update cms_activity set ratings_info=#{0} where activity_id=#{1}
    </update>

    <!--查询评级信息 -->
    <select id="queryRatingsInfoByActivityId" parameterType="java.lang.String" resultType="java.lang.String">
        select ratings_info from cms_activity where activity_id=#{activityId,jdbcType=VARCHAR}
    </select>

    <!--文化云3.1个人中心  发布活动列表-->
    <select id="queryUserPublicActivityList" resultMap="BaseResultMap" parameterType="java.util.Map">
        select a.activity_id,a.activity_name,a.activity_start_time,
        a.activity_address,a.activity_create_time,a.activity_end_time,
        a.activity_state,a.activity_city,a.activity_area
        from cms_activity a
        where 1=1
        <if test="activityTerminalUserId != null">
            and a.activity_Terminal_User_Id = #{activityTerminalUserId}
        </if>
        <if test="activityPersonal != null">
            and a.activity_Personal = #{activityPersonal}
        </if>
        <if test="activityIsDel != null">
            and a.ACTIVITY_IS_DEL = #{activityIsDel}
        </if>
        <if test="activityStates != null">
            and a.ACTIVITY_STATE in
            <foreach item="item" index="index" collection="activityStates"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        order by a.ACTIVITY_UPDATE_TIME desc
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>

    <!--文化云3.1个人中心  发布活动列表-->
    <select id="queryUserPublicActivityListCount" resultType="integer" parameterType="java.util.Map">
        select count(*)
        from cms_activity a
        where 1=1
        <if test="activityTerminalUserId != null">
            and a.activity_Terminal_User_Id = #{activityTerminalUserId}
        </if>
        <if test="activityPersonal != null">
            and a.activity_Personal = #{activityPersonal}
        </if>
        <if test="activityIsDel != null">
            and a.ACTIVITY_IS_DEL = #{activityIsDel}
        </if>
        <if test="activityStates != null">
            and a.ACTIVITY_STATE in
            <foreach item="item" index="index" collection="activityStates"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>
    <!--app根据条件筛选活动列表 -->
    <select id="queryActivityListPage" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        /*GROUP_CONCAT(
        DISTINCT ct.TAG_COLOR SEPARATOR ','
        ) AS tagColor,
        GROUP_CONCAT(
        DISTINCT ct.TAG_INITIAL SEPARATOR ','
        ) AS tagInitial,
        GROUP_CONCAT(
        DISTINCT ct.TAG_ID SEPARATOR ','
        ) AS tagId,*/
        ct.tag_id,
        ct.tag_initial,
        ct.tag_color,
        b.eventimes,
        b.ACTIVITY_SITE,
        b.ACTIVITY_SUBJECT,
        b.ACTIVITY_ID,
        b.ACTIVITY_NAME,
        b.ACTIVITY_START_TIME,
        b.ACTIVITY_ADDRESS,
        b.ACTIVITY_END_TIME,
        b.activity_is_free,
        b.ACTIVITY_PRICE,
        b.ACTIVITY_PAY_PRICE,
        b.ACTIVITY_ICON_URL,
        b.AVAILABLE_COUNT,
        b.ACTIVITY_LON,
        b.ACTIVITY_LAT,
        b.ACTIVITY_IS_RESERVATION,
        b.distance
        from(SELECT GROUP_CONCAT(
        DISTINCT ce.EVENT_TIME
        ORDER BY
        ce.event_date_time ASC
        ) AS eventimes,
        a.ACTIVITY_SITE,
        a.ACTIVITY_SUBJECT,
        a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_ADDRESS,
        a.ACTIVITY_END_TIME,
        a.activity_is_free,
        a.ACTIVITY_PRICE,
        a.ACTIVITY_PAY_PRICE,
        a.ACTIVITY_ICON_URL,
        a.activity_type,
        IFNULL(
        SUM(
        IF (
        ce.EVENT_DATE_TIME >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'),
        ce.AVAILABLE_COUNT,
        0
        )
        ),
        0
        ) AS AVAILABLE_COUNT,
        a.ACTIVITY_LON,
        a.ACTIVITY_LAT,
        a.ACTIVITY_IS_RESERVATION,
        a.ACTIVITY_UPDATE_TIME,
        /* (CASE
        WHEN
        round(
        (
        UNIX_TIMESTAMP(date_sub(a.ACTIVITY_CREATE_TIME,interval -1 day)) - UNIX_TIMESTAMP(NOW())
        ) / 3600
        ) &gt;0 and round(
        (
        UNIX_TIMESTAMP(date_sub(a.ACTIVITY_CREATE_TIME,interval -1 day)) - UNIX_TIMESTAMP(NOW())
        ) / 3600
        )&lt;=24
        THEN
        1
        ELSE
        0
        END
        ) AS hours,*/
        round(
        6378.138 * 2 * asin(
        sqrt(
        pow(
        sin(
        (
        a.ACTIVITY_LAT * pi() / 180 -
        <if test="lat!=null">
            #{lat}
        </if>
        * pi() / 180
        ) / 2
        ),
        2
        ) + cos(a.ACTIVITY_LAT * pi() / 180) * cos(
        <if test="lat!=null">
            #{lat}
        </if>
        * pi() / 180) * pow(
        sin(
        (
        a.ACTIVITY_LON * pi() / 180 -
        <if test="lon!=null">
            #{lon}
        </if>
        * pi() / 180
        ) / 2
        ),
        2
        )
        )
        ) * 1000
        ) AS distance
        FROM
        cms_activity a
        LEFT JOIN cms_activity_event ce on a.ACTIVITY_ID=ce.ACTIVITY_ID
        WHERE
        1 = 1
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="activityTime!=null">
            AND a.ACTIVITY_START_TIME
            &lt;=#{activityTime,jdbcType=VARCHAR} AND
            a.ACTIVITY_END_TIME
            &gt;=#{activityTime,jdbcType=VARCHAR}
        </if>
        <!--<if test="appType==2">
			AND a.ACTIVITY_START_TIME &gt;= NOW()
			AND a.ACTIVITY_START_TIME &lt;date_add(NOW(),INTERVAL 3 DAY)
		</if>-->
        <!--<if test="typeTagIds!= null">
			AND
			<foreach item="item" index="index" collection="typeTagIds" open="(" separator=" " close=")">
				<if test="index != 0">
					OR
				</if>
				a.ACTIVITY_TYPE like CONCAT('%','${item}','%' )
			</foreach>
		</if>-->
        <!--<if test="tagType==2">
			<if test="typeTagIds != null" >
				AND
				<if test="tagThemeType==1">
					(
				</if>
				<foreach item="item" index="index" collection="typeTagIds" open="(" separator=" " close=")">
					<if test="index != 0">
						OR
					</if>
					a.ACTIVITY_TYPE like CONCAT('%','${item}','%' )
				</foreach>
			</if>
		</if>
		<if test="tagThemeType==1">
		<if test="typeTagIds== null">
			AND
		</if>
		<if test="typeTagIds!= null">
			or
		</if>
			<foreach item="item" index="index" collection="themeTagIds" open="(" separator=" " close=")">
				<if test="index != 0">
					OR
				</if>
				a.ACTIVITY_THEME like CONCAT('%','${item}','%' )
			</foreach>
			<if test="tagType==2">
				)
			</if>
		</if>-->
        GROUP BY
        a.ACTIVITY_ID
        HAVING CONVERT(substring(GROUP_CONCAT(DISTINCT ce.event_date_time ORDER BY ce.event_date_time
        DESC),1,16),CHAR)>= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')) b
        LEFT JOIN cms_tag ct ON FIND_IN_SET(ct.TAG_ID, b.ACTIVITY_TYPE)
        where 1=1
        <if test="typeTagIds!= null">
            AND ct.tag_id in
            <foreach item="item" collection="typeTagIds" open="(" separator="," close=")">
                '${item}'
            </foreach>
        </if>
        group by b.activity_id
        ORDER BY
        <if test="appType==1">
            b.distance ASC,
        </if>
        <!--<if test="appType==2">
			b.ACTIVITY_START_TIME ASC,
		</if>-->
        <if test="activityTime!=null">
            b.ACTIVITY_START_TIME desc,
        </if>
        b.ACTIVITY_UPDATE_TIME desc
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>
    <!--app查询最新活动 -->
    <select id="queryAppLatestByActivity" resultMap="BaseResultMap">
        SELECT
        a.ACTIVITY_ID,a.ACTIVITY_ICON_URL,a.ACTIVITY_NAME,a.ACTIVITY_ADDRESS,a.ACTIVITY_IS_FREE,a.ACTIVITY_LON,a.ACTIVITY_LAT
        from cms_activity a
        WHERE 1=1
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        /*and a.ACTIVITY_END_TIME > current_timestamp*/
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="activityRecommend != null">
            AND a.ACTIVITY_RECOMMEND =
            #{activityRecommend,jdbcType=VARCHAR}
        </if>
        <if test="date != null">
            AND DATE_FORMAT(a.ACTIVITY_END_TIME,'%Y-%m') =
            #{date,jdbcType=VARCHAR}
        </if>
        <if test="activityType != null ">
            AND a.ACTIVITY_TYPE like #{activityType,jdbcType=VARCHAR}
        </if>
        order by a.ACTIVITY_UPDATE_TIME DESC
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>
    <!--app查询最热门活动 -->
    <select id="queryAppHotByActivity" resultMap="BaseResultMap"
            parameterType="java.util.Map">
        SELECT DISTINCT
        GROUP_CONCAT(
        DISTINCT ct.TAG_ID SEPARATOR ','
        ) AS TAG_ID,
        SUBSTRING(a.activity_city, locate(',', a.activity_city)+1) as city,
        SUBSTRING(a.activity_area, locate(',', a.activity_area)+1) as area,
        a.ACTIVITY_TYPE,
        a.ACTIVITY_THEME,
        GROUP_CONCAT(
        DISTINCT ce.EVENT_TIME
        ORDER BY
        ce.event_date_time ASC
        ) AS eventimes,
        a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_END_TIME,
        a.ACTIVITY_SITE,
        a.ACTIVITY_SUBJECT,
        a.activity_is_free,
        a.ACTIVITY_PRICE,
        a.ACTIVITY_PAY_PRICE,
        a.ACTIVITY_ICON_URL,
        IFNULL(
        SUM(
        IF (
        ce.EVENT_DATE_TIME >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'),
        ce.AVAILABLE_COUNT,
        0
        )
        ),
        0
        ) AS AVAILABLE_COUNT,
        a.activity_Recommend,
        a.ACTIVITY_LON,
        a.ACTIVITY_LAT,
        a.ACTIVITY_IS_RESERVATION,
        round(
        6378.138 * 2 * asin(
        sqrt(
        pow(
        sin(
        (
        a.ACTIVITY_LAT * pi() / 180 -
        <if test="lat!=null">
            #{lat}
        </if>
        * pi() / 180
        ) / 2
        ),
        2
        ) + cos(a.ACTIVITY_LAT * pi() / 180) * cos(
        <if test="lat!=null">
            #{lat}
        </if>
        * pi() / 180) * pow(
        sin(
        (
        a.ACTIVITY_LON * pi() / 180 -
        <if test="lon!=null">
            #{lon}
        </if>
        * pi() / 180
        ) / 2
        ),
        2
        )
        )
        ) * 1000
        ) AS distance
        FROM
        cms_activity a
        LEFT JOIN cms_recommend_related cr ON cr.RELATED_ID = a.ACTIVITY_ID
        LEFT JOIN cms_activity_event ce on a.ACTIVITY_ID=ce.ACTIVITY_ID
        LEFT JOIN cms_tag ct ON FIND_IN_SET(ct.TAG_ID, a.ACTIVITY_TYPE)
        WHERE
        1 = 1
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="typeTagIds!= null">
            AND
            <foreach item="item" index="index" collection="typeTagIds" open="(" separator=" " close=")">
                <if test="index != 0">
                    OR
                </if>
                a.ACTIVITY_TYPE like CONCAT('%','${item}','%' )
            </foreach>
        </if>
        <!--	<if test="tagType==2">
			<if test="typeTagIds != null" >
				AND
				<if test="tagThemeType==1">
					(
				</if>
				<foreach item="item" index="index" collection="typeTagIds" open="(" separator=" " close=")">
					<if test="index != 0">
						OR
					</if>
					a.ACTIVITY_TYPE like CONCAT('%','${item}','%' )
				</foreach>
			</if>
		</if>
		<if test="tagThemeType==1">
			<if test="typeTagIds== null">
				AND
			</if>
			<if test="typeTagIds!= null">
				OR
			</if>
			<foreach item="item" index="index" collection="themeTagIds" open="(" separator=" " close=")">
				<if test="index != 0">
					OR
				</if>
				a.ACTIVITY_THEME like CONCAT('%','${item}','%' )
			</foreach>
			<if test="tagType==2">
				)
			</if>
		</if>-->
        GROUP BY
        a.ACTIVITY_ID
        HAVING CONVERT(substring(GROUP_CONCAT(DISTINCT ce.event_date_time ORDER BY ce.event_date_time
        DESC),1,16),CHAR)>= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
        ORDER BY cr.RECOMMEND_TIME desc,a.ACTIVITY_UPDATE_TIME DESC
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>

    <!--app最新活动条数 -->
    <select id="queryAppHotByActivityListCount" resultType="java.lang.Integer"
            parameterType="java.util.Map">
        SELECT COUNT(DISTINCT a.ACTIVITY_ID) from cms_activity a
        LEFT JOIN cms_statistics c ON
        a.ACTIVITY_ID = c.S_ID
        LEFT JOIN cms_activity_event ce on a.ACTIVITY_ID=ce.ACTIVITY_ID
        WHERE 1=1
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR}
        </if>
        <if test="activityArea != null">
            AND a.ACTIVITY_AREA like #{activityArea,jdbcType=VARCHAR}
        </if>
        <if test="activityTime!=null">
            AND a.ACTIVITY_START_TIME
            &lt;=#{activityTime,jdbcType=VARCHAR} AND
            a.ACTIVITY_END_TIME
            &gt;=#{activityTime,jdbcType=VARCHAR}
        </if>
        <if test="activityStartTime !=null">
            AND GREATEST(a.ACTIVITY_START_TIME,a.ACTIVITY_END_TIME)
            &gt;=#{activityStartTime,jdbcType=VARCHAR}
        </if>
        <if test="activityEndTime !=null">
            AND least(a.ACTIVITY_START_TIME,a.ACTIVITY_END_TIME) &lt;=
            #{activityEndTime,jdbcType=VARCHAR}
        </if>
        <if test="activityType != null ">
            AND a.ACTIVITY_TYPE like #{activityType,jdbcType=VARCHAR}
        </if>
    </select>


    <!--app根据标签查询活动列表数据 -->
    <select id="queryAppCount" resultType="java.lang.Integer"
            parameterType="java.util.Map">
        SELECT count(DISTINCT a.ACTIVITY_ID)
        FROM
        cms_activity a LEFT JOIN cms_activity_event ce
        on a.ACTIVITY_ID=ce.ACTIVITY_ID
        WHERE 1=1
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="activityRecommend !=null">
            AND a.ACTIVITY_RECOMMEND =
            #{activityRecommend,jdbcType=VARCHAR}
        </if>
        <!--<if test="activityStartTime != null and activityStartTime != ''">
			AND substring(ce.event_date_time,1,16) &gt;= #{activityStartTime}
		</if>-->
    </select>
    <!--app查看首页栏目活动 -->
    <select id="queryFrontAppAllActivityList" resultMap="BaseResultMap"
            parameterType="java.util.Map">
        SELECT DISTINCT
        GROUP_CONCAT(
        DISTINCT ct.TAG_ID SEPARATOR ','
        ) AS TAG_ID,
        GROUP_CONCAT(
        DISTINCT ce.EVENT_TIME
        ORDER BY
        ce.event_date_time ASC
        ) AS eventimes,
        SUBSTRING(a.activity_city, locate(',', a.activity_city)+1) as city,
        SUBSTRING(a.activity_area, locate(',', a.activity_area)+1) as area,
        a.ACTIVITY_NAME,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_END_TIME,
        a.ACTIVITY_ADDRESS,
        a.ACTIVITY_PRICE,
        a.ACTIVITY_PAY_PRICE,
        a.ACTIVITY_ICON_URL,
        a.activity_is_free,
        IFNULL(
        SUM(
        IF (
        ce.EVENT_DATE_TIME >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'),
        ce.AVAILABLE_COUNT,
        0
        )
        ),0) AS AVAILABLE_COUNT,
        a.ACTIVITY_ID,
        a.ACTIVITY_LON,
        a.ACTIVITY_LAT,
        a.ACTIVITY_IS_RESERVATION,
        a.ACTIVITY_UPDATE_TIME
        FROM cms_activity a
        LEFT JOIN cms_recommend_related cr ON cr.RELATED_ID = a.ACTIVITY_ID
        <if test="recommendType!=null">
            AND cr.RECOMMEND_COLUMN_TYPE = #{recommendType,jdbcType=INTEGER}
        </if>
        LEFT JOIN cms_tag ct ON FIND_IN_SET(ct.TAG_ID, a.ACTIVITY_THEME)
        LEFT JOIN cms_activity_event ce ON a.ACTIVITY_ID = ce.ACTIVITY_ID
        WHERE
        1 = 1
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="tagName!=null">
            AND ct.TAG_NAME =#{tagName,jdbcType=VARCHAR}
        </if>
        GROUP BY
        a.ACTIVITY_ID
        HAVING CONVERT(substring(GROUP_CONCAT(DISTINCT ce.event_date_time ORDER BY ce.event_date_time
        DESC),1,16),CHAR)>= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
        ORDER BY cr.RECOMMEND_TIME desc,a.ACTIVITY_UPDATE_TIME DESC
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>

    <!--app根据不同条件筛选活动列表 -->
    <select id="queryAppActivityListByCondition" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
        DISTINCT
        SUBSTRING(a.activity_city, locate(',', a.activity_city)+1) as city,
        SUBSTRING(a.activity_area, locate(',', a.activity_area)+1) as area,
        GROUP_CONCAT(
        DISTINCT ce.EVENT_TIME
        ORDER BY
        ce.event_date_time ASC
        ) AS eventimes,
        a.sys_no,
        a.sys_id,
        a.ACTIVITY_ADDRESS,
        a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_END_TIME,
        a.activity_update_time,
        a.ACTIVITY_SITE,
        a.activity_is_free,
        a.activity_price,
        a.ACTIVITY_PAY_PRICE,
        a.ACTIVITY_SUBJECT,
        a.ACTIVITY_ICON_URL,
        IFNULL(
        SUM(
        IF (
        ce.EVENT_DATE_TIME >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'),
        ce.AVAILABLE_COUNT,
        0
        )
        ),0)AS AVAILABLE_COUNT,
        /*(CASE
        WHEN
        round(
        (
        UNIX_TIMESTAMP(date_sub(a.ACTIVITY_CREATE_TIME,interval -1 day)) - UNIX_TIMESTAMP(NOW())
        ) / 3600
        ) &gt;0 and round(
        (
        UNIX_TIMESTAMP(date_sub(a.ACTIVITY_CREATE_TIME,interval -1 day)) - UNIX_TIMESTAMP(NOW())
        ) / 3600
        )&lt;=24
        THEN
        1
        ELSE
        0
        END
        ) AS hours,*/
        a.ACTIVITY_LON,
        a.ACTIVITY_LAT,
        a.ACTIVITY_IS_RESERVATION,
        round(
        6378.138 * 2 * asin(
        sqrt(
        pow(
        sin(
        (
        a.ACTIVITY_LAT * pi() / 180 -
        <if test="lat!=null">
            #{lat}
        </if>
        * pi() / 180
        ) / 2
        ),
        2
        ) + cos(a.ACTIVITY_LAT * pi() / 180) * cos(
        <if test="lat!=null">
            #{lat}
        </if>
        * pi() / 180) * pow(
        sin(
        (
        a.ACTIVITY_LON * pi() / 180 -
        <if test="lon!=null">
            #{lon}
        </if>
        * pi() / 180
        ) / 2
        ),
        2
        )
        )
        ) * 1000
        ) AS distance
        FROM
        cms_activity a
        LEFT JOIN cms_activity_event ce on a.ACTIVITY_ID=ce.ACTIVITY_ID
        where 1=1
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR} ESCAPE '/'
        </if>
        <if test="activityArea != null">
            AND a.ACTIVITY_AREA like #{activityArea,jdbcType=VARCHAR}
        </if>
        <if test="activityTime!=null">
            AND a.ACTIVITY_START_TIME
            &lt;=#{activityTime,jdbcType=VARCHAR} AND
            a.ACTIVITY_END_TIME
            &gt;=#{activityTime,jdbcType=VARCHAR}
        </if>
        <if test="activityStartTime !=null">
            AND GREATEST(a.ACTIVITY_START_TIME,a.ACTIVITY_END_TIME)
            &gt;=#{activityStartTime,jdbcType=VARCHAR}
        </if>
        <if test="activityEndTime !=null">
            AND least(a.ACTIVITY_START_TIME,a.ACTIVITY_END_TIME) &lt;=
            #{activityEndTime,jdbcType=VARCHAR}
        </if>
        <if test="activityType != null ">
            AND a.ACTIVITY_TYPE like #{activityType,jdbcType=VARCHAR}
        </if>
        <if test="activityTheme != null ">
            AND a.ACTIVITY_THEME like #{activityTheme,jdbcType=VARCHAR}
        </if>
        <if test="activityLocation != null">
            AND a.activity_Location =
            #{activityLocation,jdbcType=VARCHAR}
        </if>
        GROUP BY a.ACTIVITY_ID
        order by a.ACTIVITY_UPDATE_TIME desc
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>
    <!-- 根据TagId查询相关活动数目 -->
    <select id="queryActivityCountByTag" parameterType="java.lang.String" resultType="java.lang.Integer">
		SELECT
		count(*)
		FROM cms_activity a
		WHERE a.ACTIVITY_IS_DEL = 1
		and a.ACTIVITY_STATE = 6
		and a.ACTIVITY_DEPT like '0.1%'
		and a.ACTIVITY_TYPE like #{tagId}
	</select>

    <!-- app获取首页活动类型标签列表 -->
    <select id="queryActivityThemeByCode" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT
		t.TAG_NAME,
		t.TAG_ID,
		t.TAG_IMAGE_URL
		FROM
		sys_dict s
		LEFT JOIN cms_tag t ON t.TAG_TYPE = s.DICT_ID
		WHERE
		1 = 1
		AND s.DICT_CODE =#{dictCode}
		AND s.DICT_STATE =1
		AND t.TAG_RECOMMEND=1
		AND t.TAG_IS_DELETE=1
		GROUP BY t.TAG_ID
		ORDER BY
		t.TAG_CREATE_TIME DESC
	</select>
    <!--app查询最新发布活动列表 -->
    <select id="queryAppCurrentActivityList" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT DISTINCT
        SUBSTRING(a.activity_city, locate(',', a.activity_city)+1) as city,
        SUBSTRING(a.activity_area, locate(',', a.activity_area)+1) as area,
        a.ACTIVITY_NAME,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_END_TIME,
        a.ACTIVITY_ADDRESS,
        a.ACTIVITY_PRICE,
        a.ACTIVITY_PAY_PRICE,
        a.ACTIVITY_ICON_URL,
        IFNULL(
        SUM(
        IF (
        ce.EVENT_DATE_TIME >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'),
        ce.AVAILABLE_COUNT,
        0
        )
        ),0) AS AVAILABLE_COUNT,
        a.ACTIVITY_ID,
        a.ACTIVITY_LON,
        a.ACTIVITY_LAT,
        a.ACTIVITY_IS_RESERVATION,
        a.ACTIVITY_UPDATE_TIME,
        ct.TAG_ID AS activityType
        FROM
        cms_activity a
        LEFT JOIN cms_tag ct ON FIND_IN_SET(ct.TAG_ID, a.ACTIVITY_THEME)
        LEFT JOIN cms_activity_event ce ON a.ACTIVITY_ID = ce.ACTIVITY_ID
        WHERE
        1 = 1
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        <if test="tagName!=null">
            AND ct.TAG_NAME =#{tagName}
        </if>
        GROUP BY
        a.ACTIVITY_ID
        HAVING
        CONVERT (
        substring(
        GROUP_CONCAT(
        DISTINCT ce.event_date_time
        ORDER BY
        ce.event_date_time DESC
        ),
        1,
        16
        ),
        CHAR
        ) >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
        ORDER BY
        a.ACTIVITY_UPDATE_TIME DESC
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>

    <!--&lt;!&ndash; 查询前台活动listLoad 带出浏览量 不用前台页面循环查列表页信息 &ndash;&gt;-->
    <!--<select id="queryLuceneActivityList" resultMap="BaseResultMap">-->
    <!--SELECT-->
    <!--a.ACTIVITY_ID,-->
    <!--a.ACTIVITY_NAME,-->
    <!--a.ACTIVITY_START_TIME,-->
    <!--a.ACTIVITY_END_TIME,-->
    <!--a.ACTIVITY_CITY,-->
    <!--a.ACTIVITY_AREA,-->
    <!--a.ACTIVITY_ADDRESS,-->
    <!--a.ACTIVITY_ICON_URL,-->
    <!--FROM-->
    <!--cms_activity a-->
    <!--WHERE 1=1-->
    <!--and a.ACTIVITY_IS_DEL = 1-->
    <!--and a.ACTIVITY_STATE = 6-->
    <!--</select>-->

    <!-- 查询正在进行的可预定活动 -->
    <select id="queryOngoingActivityCanBook" resultMap="BaseResultMap">
		SELECT cae.*,ca.activity_name,ca.ACTIVITY_SALES_ONLINE,cae.AVAILABLE_COUNT as availableCount, cae.event_Date_Time as eventDateTimes,
		 cae.event_id as EventIds,ca.event_count as activityReservationCount  from cms_activity_event cae
		 LEFT  JOIN  cms_activity ca on cae.activity_id = ca.activity_id
		  where cae.EVENT_DATE_TIME >  NOW() and ca.ACTIVITY_IS_RESERVATION = 2 and ca.ACTIVITY_STATE = 6
	</select>

    <!--app查询推荐置顶的活动-->
    <select id="queryRecommendActivity" resultMap="BaseResultMap" parameterType="java.util.Map">
        /*推荐置顶的活动*/
        (select * from(SELECT b.activity_id, b.activity_name, b.activity_is_free, b.activity_price,b.ACTIVITY_PAY_PRICE,
        b.activity_subject,
        b.activity_site, b.activity_start_time,
        b.activity_end_time, b.activity_icon_url, b.activity_address, b.ACTIVITY_IS_RESERVATION,
        b.ACTIVITY_SALES_ONLINE, b.AVAILABLE_COUNT, b.eventimes
        FROM (SELECT a.ACTIVITY_ID, a.ACTIVITY_NAME, a.ACTIVITY_DEPT,
        a.activity_subject,a.activity_site,a.activity_start_time,a.activity_end_time,
        a.activity_icon_url,a.ACTIVITY_IS_RESERVATION,a.ACTIVITY_SALES_ONLINE,a.activity_is_free,a.activity_price,a.ACTIVITY_PAY_PRICE,sd.RECOMMEND_TIME,
        IFNULL(SUM(IF(ce.EVENT_DATE_TIME >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'),ce.AVAILABLE_COUNT,0)),0) AS
        AVAILABLE_COUNT,a.activity_address,
        GROUP_CONCAT(DISTINCT ce.EVENT_TIME ORDER BY ce.event_time ASC) AS eventimes,max(ce.event_date_time) as
        max_event_date_time
        FROM cms_activity a LEFT JOIN cms_activity_event ce ON a.ACTIVITY_ID = ce.ACTIVITY_ID
        RIGHT JOIN (SELECT RECOMMEND_ID, RELATED_ID, UPDATE_USER_ID, RECOMMEND_TIME FROM cms_recommend_related WHERE
        RECOMMEND_COLUMN_TYPE = 4) sd
        ON a.ACTIVITY_ID = sd.RELATED_ID where a.activity_is_del = 1 and a.activity_state = 6
        GROUP BY a.ACTIVITY_ID) b LEFT JOIN cms_recommend_related cr ON b.ACTIVITY_ID = cr.RELATED_id AND cr.top_id =
        b.activity_id AND cr.top_type = 1
        ORDER BY cr.top_time DESC,b.RECOMMEND_TIME desc) as activity1)
        UNION
        /*正在进行并且可预定的活动*/
        (select * from(SELECT a.activity_id, a.activity_name, a.activity_is_free, a.activity_price,a.ACTIVITY_PAY_PRICE,
        a.activity_subject,
        a.activity_site, a.activity_start_time,
        a.activity_end_time, a.activity_icon_url, a.activity_address, a.ACTIVITY_IS_RESERVATION,
        a.ACTIVITY_SALES_ONLINE,
        IFNULL(SUM(IF(d.EVENT_DATE_TIME > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'),
        d.AVAILABLE_COUNT, 0)), 0) AS AVAILABLE_COUNT, GROUP_CONCAT(DISTINCT d.EVENT_TIME ORDER BY d.event_time ASC) AS
        eventimes
        FROM cms_activity a LEFT JOIN cms_activity_event d ON a.activity_id = d.ACTIVITY_ID LEFT JOIN cms_statistics cs
        ON a.activity_id = cs.s_id
        LEFT JOIN (SELECT b.activity_id, min(b.event_date_time) AS min_date_time,
        max(b.event_date_time) AS max_date_time FROM cms_activity_event b GROUP BY b.activity_id) c ON a.activity_id =
        c.activity_id
        WHERE a.activity_is_del = 1 AND a.activity_state = 6 AND c.min_date_time &lt;= DATE_FORMAT(NOW(), '%Y-%m-%d
        %H:%i')
        AND c.max_date_time >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i') GROUP BY d.activity_id ORDER BY cs.year_browse_count
        desc, c.min_date_time asc) as activity2
        where activity2.AVAILABLE_COUNT > 0)
        UNION
        /*正在进行并且不可预定的活动*/
        (select * from(SELECT a.activity_id, a.activity_name, a.activity_is_free, a.activity_price,a.ACTIVITY_PAY_PRICE,
        a.activity_subject,
        a.activity_site, a.activity_start_time,
        a.activity_end_time, a.activity_icon_url, a.activity_address, a.ACTIVITY_IS_RESERVATION,
        a.ACTIVITY_SALES_ONLINE,
        IFNULL(SUM(IF(d.EVENT_DATE_TIME > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'),
        d.AVAILABLE_COUNT, 0)), 0) AS AVAILABLE_COUNT, GROUP_CONCAT(DISTINCT d.EVENT_TIME ORDER BY d.event_time ASC) AS
        eventimes
        FROM cms_activity a LEFT JOIN cms_activity_event d ON a.activity_id = d.ACTIVITY_ID LEFT JOIN cms_statistics cs
        ON a.activity_id = cs.s_id
        LEFT JOIN (SELECT b.activity_id, min(b.event_date_time) AS min_date_time,
        max(b.event_date_time) AS max_date_time FROM cms_activity_event b GROUP BY b.activity_id) c ON a.activity_id =
        c.activity_id
        WHERE a.activity_is_del = 1 AND a.activity_state = 6 AND c.min_date_time &lt;= DATE_FORMAT(NOW(), '%Y-%m-%d
        %H:%i')
        AND c.max_date_time >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i') GROUP BY d.activity_id ORDER BY cs.year_browse_count
        desc, c.min_date_time asc) as activity3
        where activity3.AVAILABLE_COUNT = 0)
        UNION
        /*今天、明天之后并且可预定的活动*/
        (select * from(SELECT a.activity_id, a.activity_name, a.activity_is_free, a.activity_price,a.ACTIVITY_PAY_PRICE,
        a.activity_subject,
        a.activity_site, a.activity_start_time,
        a.activity_end_time, a.activity_icon_url, a.activity_address, a.ACTIVITY_IS_RESERVATION,
        a.ACTIVITY_SALES_ONLINE,
        IFNULL(SUM(IF(d.EVENT_DATE_TIME > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'), d.AVAILABLE_COUNT, 0)), 0) AS
        AVAILABLE_COUNT, GROUP_CONCAT(DISTINCT d.EVENT_TIME
        ORDER BY d.event_time ASC) AS eventimes FROM cms_activity a LEFT JOIN cms_activity_event d ON a.activity_id =
        d.ACTIVITY_ID
        LEFT JOIN cms_statistics cs ON a.activity_id = cs.s_id LEFT JOIN (SELECT b.activity_id, min(b.event_date_time)
        AS min_date_time,
        max(b.event_date_time) AS max_date_time FROM cms_activity_event b GROUP BY b.activity_id) c ON a.activity_id =
        c.activity_id
        WHERE a.activity_is_del = 1 AND a.activity_state = 6 AND c.min_date_time > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
        GROUP BY d.activity_id ORDER BY cs.year_browse_count desc, c.min_date_time asc) as activity4 where
        activity4.AVAILABLE_COUNT > 0)
        UNION
        /*今天、明天之后并且不可预定的活动*/
        (select * from(SELECT a.activity_id, a.activity_name, a.activity_is_free, a.activity_price,a.ACTIVITY_PAY_PRICE,
        a.activity_subject,
        a.activity_site, a.activity_start_time,
        a.activity_end_time, a.activity_icon_url, a.activity_address, a.ACTIVITY_IS_RESERVATION,
        a.ACTIVITY_SALES_ONLINE,
        IFNULL(SUM(IF(d.EVENT_DATE_TIME > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'), d.AVAILABLE_COUNT, 0)), 0) AS
        AVAILABLE_COUNT, GROUP_CONCAT(DISTINCT d.EVENT_TIME
        ORDER BY d.event_time ASC) AS eventimes FROM cms_activity a LEFT JOIN cms_activity_event d ON a.activity_id =
        d.ACTIVITY_ID
        LEFT JOIN cms_statistics cs ON a.activity_id = cs.s_id LEFT JOIN (SELECT b.activity_id, min(b.event_date_time)
        AS min_date_time,
        max(b.event_date_time) AS max_date_time FROM cms_activity_event b GROUP BY b.activity_id) c ON a.activity_id =
        c.activity_id
        WHERE a.activity_is_del = 1 AND a.activity_state = 6 AND c.min_date_time > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
        GROUP BY d.activity_id ORDER BY cs.year_browse_count desc, c.min_date_time asc) as activity5 where
        activity5.AVAILABLE_COUNT = 0)
        UNION
        /*过期并且可预定的活动*/
        (select * from(SELECT a.activity_id, a.activity_name, a.activity_is_free, a.activity_price,a.ACTIVITY_PAY_PRICE,
        a.activity_subject,
        a.activity_site, a.activity_start_time,
        a.activity_end_time, a.activity_icon_url, a.activity_address, a.ACTIVITY_IS_RESERVATION,
        a.ACTIVITY_SALES_ONLINE,
        IFNULL(SUM(IF(d.EVENT_DATE_TIME > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'), d.AVAILABLE_COUNT, 0)), 0) AS
        AVAILABLE_COUNT,
        GROUP_CONCAT(DISTINCT d.EVENT_TIME ORDER BY d.event_time ASC) AS eventimes FROM cms_activity a
        LEFT JOIN cms_activity_event d ON a.activity_id = d.ACTIVITY_ID LEFT JOIN cms_statistics cs ON a.activity_id =
        cs.s_id
        LEFT JOIN (SELECT b.activity_id, min(b.event_date_time) AS min_date_time,
        max(b.event_date_time) AS max_date_time FROM cms_activity_event b GROUP BY b.activity_id) c ON a.activity_id =
        c.activity_id
        WHERE a.activity_is_del = 1 AND a.activity_state = 6 AND c.max_date_time &lt; DATE_FORMAT(NOW(), '%Y-%m-%d
        %H:%i')
        GROUP BY d.activity_id ORDER BY cs.year_browse_count desc, c.min_date_time asc) as activity6 where
        activity6.AVAILABLE_COUNT > 0)
        UNION
        /*过期并且不可预定的活动*/
        (select * from(SELECT a.activity_id, a.activity_name, a.activity_is_free, a.activity_price,a.ACTIVITY_PAY_PRICE,
        a.activity_subject,
        a.activity_site, a.activity_start_time,
        a.activity_end_time, a.activity_icon_url, a.activity_address, a.ACTIVITY_IS_RESERVATION,
        a.ACTIVITY_SALES_ONLINE,
        IFNULL(SUM(IF(d.EVENT_DATE_TIME > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'), d.AVAILABLE_COUNT, 0)), 0) AS
        AVAILABLE_COUNT,
        GROUP_CONCAT(DISTINCT d.EVENT_TIME ORDER BY d.event_time ASC) AS eventimes FROM cms_activity a
        LEFT JOIN cms_activity_event d ON a.activity_id = d.ACTIVITY_ID LEFT JOIN cms_statistics cs ON a.activity_id =
        cs.s_id
        LEFT JOIN (SELECT b.activity_id, min(b.event_date_time) AS min_date_time,
        max(b.event_date_time) AS max_date_time FROM cms_activity_event b GROUP BY b.activity_id) c ON a.activity_id =
        c.activity_id
        WHERE a.activity_is_del = 1 AND a.activity_state = 6 AND c.max_date_time &lt; DATE_FORMAT(NOW(), '%Y-%m-%d
        %H:%i')
        GROUP BY d.activity_id ORDER BY cs.year_browse_count desc, c.min_date_time asc) as activity7 where
        activity7.AVAILABLE_COUNT = 0)
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>

    <!--why3.4 app查询推荐置顶的活动-->
    <select id="queryAppRecommendCmsActivity" resultMap="BaseResultMap">
		/*推荐置顶的活动*/
		SELECT b.activity_id, b.activity_name, b.activity_is_free, b.activity_price,b.ACTIVITY_PAY_PRICE, b.activity_subject, b.activity_site, b.activity_start_time,
		b.activity_end_time, b.activity_icon_url, b.activity_address, b.ACTIVITY_IS_RESERVATION, b.ACTIVITY_SALES_ONLINE, b.AVAILABLE_COUNT, b.eventimes, b.activity_update_time, b.sys_no, b.sys_id
		FROM (SELECT a.ACTIVITY_ID, a.ACTIVITY_NAME, a.ACTIVITY_DEPT, a.activity_subject,a.activity_site,a.activity_start_time,a.activity_end_time,a.sys_no,a.sys_id,
		a.activity_icon_url,a.ACTIVITY_IS_RESERVATION,a.ACTIVITY_SALES_ONLINE,a.activity_is_free,a.activity_price,a.ACTIVITY_PAY_PRICE,sd.RECOMMEND_TIME,a.activity_update_time,
		IFNULL(SUM(IF(ce.EVENT_DATE_TIME >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'),ce.AVAILABLE_COUNT,0)),0) AS AVAILABLE_COUNT,a.activity_address,
		GROUP_CONCAT(DISTINCT ce.EVENT_TIME ORDER BY ce.event_time ASC) AS eventimes,max(ce.event_date_time) as max_event_date_time
		FROM cms_activity a LEFT JOIN cms_activity_event ce ON a.ACTIVITY_ID = ce.ACTIVITY_ID
		RIGHT JOIN (SELECT RECOMMEND_ID, RELATED_ID, UPDATE_USER_ID, RECOMMEND_TIME FROM cms_recommend_related WHERE RECOMMEND_COLUMN_TYPE = 4) sd
		ON a.ACTIVITY_ID = sd.RELATED_ID where a.activity_is_del = 1 and a.activity_state = 6
		GROUP BY a.ACTIVITY_ID) b LEFT JOIN cms_recommend_related cr ON b.ACTIVITY_ID = cr.RELATED_id AND cr.top_id = b.activity_id AND cr.top_type = 1
		ORDER BY cr.top_time DESC,b.RECOMMEND_TIME desc
	</select>

    <!--app查询置顶标签的活动-->
    <select id="queryTopActivity" resultMap="BaseResultMap" parameterType="java.util.Map">
        /*标签置顶的活动*/
        (select * from(SELECT b.activity_id, b.activity_name, b.activity_is_free, b.activity_price,b.ACTIVITY_PAY_PRICE,
        b.activity_subject,
        b.activity_site, b.activity_start_time,
        b.activity_end_time, b.activity_icon_url, b.activity_address, b.ACTIVITY_IS_RESERVATION,
        b.ACTIVITY_SALES_ONLINE, b.AVAILABLE_COUNT, b.eventimes
        FROM (SELECT a.ACTIVITY_ID, a.ACTIVITY_NAME, a.ACTIVITY_DEPT, a.activity_subject, a.activity_site,
        a.activity_start_time,
        a.activity_end_time, a.activity_icon_url, a.activity_address, a.ACTIVITY_IS_RESERVATION,
        a.ACTIVITY_SALES_ONLINE, a.activity_is_free, a.activity_price,a.ACTIVITY_PAY_PRICE,
        IFNULL(SUM(IF(ce.EVENT_DATE_TIME >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'), ce.AVAILABLE_COUNT, 0)), 0) AS
        AVAILABLE_COUNT,
        GROUP_CONCAT(DISTINCT ce.EVENT_TIME ORDER BY ce.event_time ASC) AS eventimes
        FROM cms_activity a LEFT JOIN cms_activity_event ce ON a.ACTIVITY_ID = ce.ACTIVITY_ID
        WHERE a.activity_is_del = 1 and a.activity_state = 6 and a.activity_type LIKE '%${tagId}%' GROUP BY
        a.ACTIVITY_ID) b
        INNER JOIN cms_recommend_related cr ON b.ACTIVITY_ID = cr.RELATED_id AND cr.top_id = #{tagId} AND cr.top_type =
        1 ORDER BY cr.top_time DESC) as activity1)
        UNION
        /*正在进行并且可预定的活动*/
        (select * from(SELECT a.activity_id, a.activity_name, a.activity_is_free, a.activity_price,a.ACTIVITY_PAY_PRICE,
        a.activity_subject,
        a.activity_site, a.activity_start_time,
        a.activity_end_time, a.activity_icon_url, a.activity_address,
        a.ACTIVITY_IS_RESERVATION, a.ACTIVITY_SALES_ONLINE, IFNULL(SUM(IF(d.EVENT_DATE_TIME > DATE_FORMAT(NOW(),
        '%Y-%m-%d %H:%i'),
        d.AVAILABLE_COUNT, 0)), 0) AS AVAILABLE_COUNT, GROUP_CONCAT(DISTINCT d.EVENT_TIME ORDER BY d.event_time ASC) AS
        eventimes
        FROM cms_activity a LEFT JOIN cms_activity_event d ON a.activity_id = d.ACTIVITY_ID left join cms_statistics cs
        on a.activity_id = cs.S_ID
        LEFT JOIN (SELECT b.activity_id, min(b.event_date_time) AS min_date_time,
        max(b.event_date_time) AS max_date_time FROM cms_activity_event b GROUP BY b.activity_id) c ON a.activity_id =
        c.activity_id
        WHERE a.activity_is_del = 1 AND a.activity_state = 6 AND a.activity_type LIKE '%${tagId}%' AND c.min_date_time
        &lt;= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
        AND c.max_date_time >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i') GROUP BY d.activity_id ORDER BY cs.year_browse_count
        desc, c.min_date_time asc) as activity2
        where activity2.AVAILABLE_COUNT > 0)
        UNION
        /*正在进行并且不可预定的活动*/
        (select * from(SELECT a.activity_id, a.activity_name, a.activity_is_free, a.activity_price,a.ACTIVITY_PAY_PRICE,
        a.activity_subject,
        a.activity_site, a.activity_start_time,
        a.activity_end_time, a.activity_icon_url, a.activity_address,
        a.ACTIVITY_IS_RESERVATION, a.ACTIVITY_SALES_ONLINE, IFNULL(SUM(IF(d.EVENT_DATE_TIME > DATE_FORMAT(NOW(),
        '%Y-%m-%d %H:%i'),
        d.AVAILABLE_COUNT, 0)), 0) AS AVAILABLE_COUNT, GROUP_CONCAT(DISTINCT d.EVENT_TIME ORDER BY d.event_time ASC) AS
        eventimes
        FROM cms_activity a LEFT JOIN cms_activity_event d ON a.activity_id = d.ACTIVITY_ID left join cms_statistics cs
        on a.activity_id = cs.S_ID
        LEFT JOIN (SELECT b.activity_id, min(b.event_date_time) AS min_date_time,
        max(b.event_date_time) AS max_date_time FROM cms_activity_event b GROUP BY b.activity_id) c ON a.activity_id =
        c.activity_id
        WHERE a.activity_is_del = 1 AND a.activity_state = 6 AND a.activity_type LIKE '%${tagId}%' AND c.min_date_time
        &lt;= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
        AND c.max_date_time >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i') GROUP BY d.activity_id ORDER BY cs.year_browse_count
        desc, c.min_date_time asc) as activity3
        where activity3.AVAILABLE_COUNT = 0)
        UNION
        /*今天、明天之后并且可预定的活动*/
        (select * from(SELECT a.activity_id, a.activity_name, a.activity_is_free, a.activity_price,a.ACTIVITY_PAY_PRICE,
        a.activity_subject,
        a.activity_site, a.activity_start_time,
        a.activity_end_time, a.activity_icon_url, a.activity_address, a.ACTIVITY_IS_RESERVATION,
        a.ACTIVITY_SALES_ONLINE,
        IFNULL(SUM(IF(d.EVENT_DATE_TIME > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'), d.AVAILABLE_COUNT, 0)), 0) AS
        AVAILABLE_COUNT, GROUP_CONCAT(DISTINCT d.EVENT_TIME
        ORDER BY d.event_time ASC) AS eventimes FROM cms_activity a LEFT JOIN cms_activity_event d ON a.activity_id =
        d.ACTIVITY_ID
        left join cms_statistics cs on a.activity_id = cs.S_ID LEFT JOIN (SELECT b.activity_id, min(b.event_date_time)
        AS min_date_time,
        max(b.event_date_time) AS max_date_time FROM cms_activity_event b GROUP BY b.activity_id) c ON a.activity_id =
        c.activity_id
        WHERE a.activity_is_del = 1 AND a.activity_state = 6 AND a.activity_type LIKE '%${tagId}%' AND c.min_date_time >
        DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
        GROUP BY d.activity_id ORDER BY cs.year_browse_count desc, c.min_date_time asc) as activity4 where
        activity4.AVAILABLE_COUNT > 0)
        UNION
        /*今天、明天之后并且不可预定的活动*/
        (select * from(SELECT a.activity_id, a.activity_name, a.activity_is_free, a.activity_price,a.ACTIVITY_PAY_PRICE,
        a.activity_subject,
        a.activity_site, a.activity_start_time,
        a.activity_end_time, a.activity_icon_url, a.activity_address, a.ACTIVITY_IS_RESERVATION,
        a.ACTIVITY_SALES_ONLINE,
        IFNULL(SUM(IF(d.EVENT_DATE_TIME > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'), d.AVAILABLE_COUNT, 0)), 0) AS
        AVAILABLE_COUNT, GROUP_CONCAT(DISTINCT d.EVENT_TIME
        ORDER BY d.event_time ASC) AS eventimes FROM cms_activity a LEFT JOIN cms_activity_event d ON a.activity_id =
        d.ACTIVITY_ID
        left join cms_statistics cs on a.activity_id = cs.S_ID LEFT JOIN (SELECT b.activity_id, min(b.event_date_time)
        AS min_date_time,
        max(b.event_date_time) AS max_date_time FROM cms_activity_event b GROUP BY b.activity_id) c ON a.activity_id =
        c.activity_id
        WHERE a.activity_is_del = 1 AND a.activity_state = 6 AND a.activity_type LIKE '%${tagId}%' AND c.min_date_time >
        DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
        GROUP BY d.activity_id ORDER BY cs.year_browse_count desc, c.min_date_time asc) as activity5 where
        activity5.AVAILABLE_COUNT = 0)
        UNION
        /*过期并且可预定的活动*/
        (select * from(SELECT a.activity_id, a.activity_name, a.activity_is_free, a.activity_price,a.ACTIVITY_PAY_PRICE,
        a.activity_subject,
        a.activity_site, a.activity_start_time,
        a.activity_end_time, a.activity_icon_url, a.activity_address, a.ACTIVITY_IS_RESERVATION,
        a.ACTIVITY_SALES_ONLINE,
        IFNULL(SUM(IF(d.EVENT_DATE_TIME > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'), d.AVAILABLE_COUNT, 0)), 0) AS
        AVAILABLE_COUNT,
        GROUP_CONCAT(DISTINCT d.EVENT_TIME ORDER BY d.event_time ASC) AS eventimes FROM cms_activity a
        LEFT JOIN cms_activity_event d ON a.activity_id = d.ACTIVITY_ID left join cms_statistics cs on a.activity_id =
        cs.S_ID
        LEFT JOIN (SELECT b.activity_id, min(b.event_date_time) AS min_date_time,
        max(b.event_date_time) AS max_date_time FROM cms_activity_event b GROUP BY b.activity_id) c ON a.activity_id =
        c.activity_id
        WHERE a.activity_is_del = 1 AND a.activity_state = 6 AND a.activity_type LIKE '%${tagId}%' AND c.max_date_time
        &lt; DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
        GROUP BY d.activity_id ORDER BY cs.year_browse_count desc, c.min_date_time asc) as activity6 where
        activity6.AVAILABLE_COUNT > 0)
        UNION
        /*过期并且不可预定的活动*/
        (select * from(SELECT a.activity_id, a.activity_name, a.activity_is_free, a.activity_price,a.ACTIVITY_PAY_PRICE,
        a.activity_subject,
        a.activity_site, a.activity_start_time,
        a.activity_end_time, a.activity_icon_url, a.activity_address, a.ACTIVITY_IS_RESERVATION,
        a.ACTIVITY_SALES_ONLINE,
        IFNULL(SUM(IF(d.EVENT_DATE_TIME > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'), d.AVAILABLE_COUNT, 0)), 0) AS
        AVAILABLE_COUNT,
        GROUP_CONCAT(DISTINCT d.EVENT_TIME ORDER BY d.event_time ASC) AS eventimes FROM cms_activity a
        LEFT JOIN cms_activity_event d ON a.activity_id = d.ACTIVITY_ID left join cms_statistics cs on a.activity_id =
        cs.S_ID
        LEFT JOIN (SELECT b.activity_id, min(b.event_date_time) AS min_date_time,
        max(b.event_date_time) AS max_date_time FROM cms_activity_event b GROUP BY b.activity_id) c ON a.activity_id =
        c.activity_id
        WHERE a.activity_is_del = 1 AND a.activity_state = 6 AND a.activity_type LIKE '%${tagId}%' AND c.max_date_time
        &lt; DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
        GROUP BY d.activity_id ORDER BY cs.year_browse_count desc, c.min_date_time asc) as activity7 where
        activity7.AVAILABLE_COUNT = 0)
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>

    <!--why3.4 app查询置顶标签的活动-->
    <select id="queryAppTopCmsActivity" resultMap="BaseResultMap" parameterType="java.util.Map">
		/*标签置顶的活动*/
		(select * from(SELECT b.activity_id, b.activity_name, b.activity_is_free, b.activity_price,b.ACTIVITY_PAY_PRICE, b.activity_subject, b.activity_site, b.activity_start_time,
		b.activity_end_time, b.activity_icon_url, b.activity_address, b.ACTIVITY_IS_RESERVATION, b.ACTIVITY_SALES_ONLINE, b.AVAILABLE_COUNT, b.eventimes, b.activity_update_time, b.sys_no, b.sys_id
		FROM (SELECT a.ACTIVITY_ID, a.ACTIVITY_NAME, a.ACTIVITY_DEPT, a.activity_subject, a.activity_site, a.activity_start_time,
		a.activity_end_time, a.activity_icon_url, a.activity_address, a.ACTIVITY_IS_RESERVATION, a.sys_no, a.sys_id,
		a.ACTIVITY_SALES_ONLINE, a.activity_is_free, a.activity_price,a.ACTIVITY_PAY_PRICE, a.activity_update_time,
		IFNULL(SUM(IF(ce.EVENT_DATE_TIME >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'), ce.AVAILABLE_COUNT, 0)), 0) AS AVAILABLE_COUNT,
		GROUP_CONCAT(DISTINCT ce.EVENT_TIME ORDER BY ce.event_time ASC) AS eventimes
		FROM cms_activity a LEFT JOIN cms_activity_event ce ON a.ACTIVITY_ID = ce.ACTIVITY_ID
		WHERE a.activity_is_del = 1 and a.activity_state = 6 and a.activity_type LIKE '%${tagId}%' GROUP BY a.ACTIVITY_ID) b
		INNER JOIN cms_recommend_related cr ON b.ACTIVITY_ID = cr.RELATED_id AND cr.top_id = #{tagId} AND cr.top_type = 1 ORDER BY cr.top_time DESC) as activity1)
		UNION
		/*正在进行并且可预定的活动*/
		(select * from(SELECT a.activity_id, a.activity_name, a.activity_is_free, a.activity_price,a.ACTIVITY_PAY_PRICE, a.activity_subject, a.activity_site, a.activity_start_time,
		a.activity_end_time, a.activity_icon_url, a.activity_address,
		a.ACTIVITY_IS_RESERVATION, a.ACTIVITY_SALES_ONLINE, IFNULL(SUM(IF(d.EVENT_DATE_TIME > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'),
		d.AVAILABLE_COUNT, 0)), 0) AS AVAILABLE_COUNT, GROUP_CONCAT(DISTINCT d.EVENT_TIME ORDER BY d.event_time ASC) AS eventimes, a.activity_update_time, a.sys_no, a.sys_id
		FROM cms_activity a LEFT JOIN cms_activity_event d ON a.activity_id = d.ACTIVITY_ID left join cms_statistics cs on a.activity_id = cs.S_ID
		LEFT JOIN (SELECT b.activity_id, min(b.event_date_time) AS min_date_time,
		max(b.event_date_time) AS max_date_time FROM cms_activity_event b GROUP BY b.activity_id) c ON a.activity_id = c.activity_id
		WHERE a.activity_is_del = 1 AND a.activity_state = 6 AND a.activity_type LIKE '%${tagId}%' AND c.min_date_time &lt;= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
		AND c.max_date_time >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i') GROUP BY d.activity_id ORDER BY cs.year_browse_count desc, c.min_date_time asc) as activity2
		where activity2.AVAILABLE_COUNT > 0)
		UNION
		/*正在进行并且不可预定的活动*/
		(select * from(SELECT a.activity_id, a.activity_name, a.activity_is_free, a.activity_price,a.ACTIVITY_PAY_PRICE, a.activity_subject, a.activity_site, a.activity_start_time,
		a.activity_end_time, a.activity_icon_url, a.activity_address,
		a.ACTIVITY_IS_RESERVATION, a.ACTIVITY_SALES_ONLINE, IFNULL(SUM(IF(d.EVENT_DATE_TIME > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'),
		d.AVAILABLE_COUNT, 0)), 0) AS AVAILABLE_COUNT, GROUP_CONCAT(DISTINCT d.EVENT_TIME ORDER BY d.event_time ASC) AS eventimes, a.activity_update_time, a.sys_no, a.sys_id
		FROM cms_activity a LEFT JOIN cms_activity_event d ON a.activity_id = d.ACTIVITY_ID left join cms_statistics cs on a.activity_id = cs.S_ID
		LEFT JOIN (SELECT b.activity_id, min(b.event_date_time) AS min_date_time,
		max(b.event_date_time) AS max_date_time FROM cms_activity_event b GROUP BY b.activity_id) c ON a.activity_id = c.activity_id
		WHERE a.activity_is_del = 1 AND a.activity_state = 6 AND a.activity_type LIKE '%${tagId}%' AND c.min_date_time &lt;= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
		AND c.max_date_time >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i') GROUP BY d.activity_id ORDER BY cs.year_browse_count desc, c.min_date_time asc) as activity3
		where activity3.AVAILABLE_COUNT = 0)
		UNION
		/*今天、明天之后并且可预定的活动*/
		(select * from(SELECT a.activity_id, a.activity_name, a.activity_is_free, a.activity_price,a.ACTIVITY_PAY_PRICE, a.activity_subject, a.activity_site, a.activity_start_time,
		a.activity_end_time, a.activity_icon_url, a.activity_address, a.ACTIVITY_IS_RESERVATION, a.ACTIVITY_SALES_ONLINE,
		IFNULL(SUM(IF(d.EVENT_DATE_TIME > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'), d.AVAILABLE_COUNT, 0)), 0) AS AVAILABLE_COUNT, GROUP_CONCAT(DISTINCT d.EVENT_TIME
		ORDER BY d.event_time ASC) AS eventimes, a.activity_update_time, a.sys_no, a.sys_id FROM cms_activity a LEFT JOIN cms_activity_event d ON a.activity_id = d.ACTIVITY_ID
		left join cms_statistics cs on a.activity_id = cs.S_ID LEFT JOIN (SELECT b.activity_id, min(b.event_date_time) AS min_date_time,
		max(b.event_date_time) AS max_date_time FROM cms_activity_event b GROUP BY b.activity_id) c ON a.activity_id = c.activity_id
		WHERE a.activity_is_del = 1 AND a.activity_state = 6 AND a.activity_type LIKE '%${tagId}%' AND c.min_date_time > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
		GROUP BY d.activity_id ORDER BY cs.year_browse_count desc, c.min_date_time asc) as activity4 where activity4.AVAILABLE_COUNT > 0)
		UNION
		/*今天、明天之后并且不可预定的活动*/
		(select * from(SELECT a.activity_id, a.activity_name, a.activity_is_free, a.activity_price,a.ACTIVITY_PAY_PRICE, a.activity_subject, a.activity_site, a.activity_start_time,
		a.activity_end_time, a.activity_icon_url, a.activity_address, a.ACTIVITY_IS_RESERVATION, a.ACTIVITY_SALES_ONLINE,
		IFNULL(SUM(IF(d.EVENT_DATE_TIME > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'), d.AVAILABLE_COUNT, 0)), 0) AS AVAILABLE_COUNT, GROUP_CONCAT(DISTINCT d.EVENT_TIME
		ORDER BY d.event_time ASC) AS eventimes, a.activity_update_time, a.sys_no, a.sys_id FROM cms_activity a LEFT JOIN cms_activity_event d ON a.activity_id = d.ACTIVITY_ID
		left join cms_statistics cs on a.activity_id = cs.S_ID LEFT JOIN (SELECT b.activity_id, min(b.event_date_time) AS min_date_time,
		max(b.event_date_time) AS max_date_time FROM cms_activity_event b GROUP BY b.activity_id) c ON a.activity_id = c.activity_id
		WHERE a.activity_is_del = 1 AND a.activity_state = 6 AND a.activity_type LIKE '%${tagId}%' AND c.min_date_time > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
		GROUP BY d.activity_id ORDER BY cs.year_browse_count desc, c.min_date_time asc) as activity5 where activity5.AVAILABLE_COUNT = 0)
		UNION
		/*过期并且可预定的活动*/
		(select * from(SELECT a.activity_id, a.activity_name, a.activity_is_free, a.activity_price,a.ACTIVITY_PAY_PRICE, a.activity_subject, a.activity_site, a.activity_start_time,
		a.activity_end_time, a.activity_icon_url, a.activity_address, a.ACTIVITY_IS_RESERVATION, a.ACTIVITY_SALES_ONLINE,
		IFNULL(SUM(IF(d.EVENT_DATE_TIME > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'), d.AVAILABLE_COUNT, 0)), 0) AS AVAILABLE_COUNT,
		GROUP_CONCAT(DISTINCT d.EVENT_TIME ORDER BY d.event_time ASC) AS eventimes, a.activity_update_time, a.sys_no, a.sys_id FROM cms_activity a
		LEFT JOIN cms_activity_event d ON a.activity_id = d.ACTIVITY_ID left join cms_statistics cs on a.activity_id = cs.S_ID
		LEFT JOIN (SELECT b.activity_id, min(b.event_date_time) AS min_date_time,
		max(b.event_date_time) AS max_date_time FROM cms_activity_event b GROUP BY b.activity_id) c ON a.activity_id = c.activity_id
		WHERE a.activity_is_del = 1 AND a.activity_state = 6 AND a.activity_type LIKE '%${tagId}%' AND c.max_date_time &lt; DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
		GROUP BY d.activity_id ORDER BY cs.year_browse_count desc, c.min_date_time asc) as activity6 where activity6.AVAILABLE_COUNT > 0)
		UNION
		/*过期并且不可预定的活动*/
		(select * from(SELECT a.activity_id, a.activity_name, a.activity_is_free, a.activity_price,a.ACTIVITY_PAY_PRICE, a.activity_subject, a.activity_site, a.activity_start_time,
		a.activity_end_time, a.activity_icon_url, a.activity_address, a.ACTIVITY_IS_RESERVATION, a.ACTIVITY_SALES_ONLINE,
		IFNULL(SUM(IF(d.EVENT_DATE_TIME > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'), d.AVAILABLE_COUNT, 0)), 0) AS AVAILABLE_COUNT,
		GROUP_CONCAT(DISTINCT d.EVENT_TIME ORDER BY d.event_time ASC) AS eventimes, a.activity_update_time, a.sys_no, a.sys_id FROM cms_activity a
		LEFT JOIN cms_activity_event d ON a.activity_id = d.ACTIVITY_ID left join cms_statistics cs on a.activity_id = cs.S_ID
		LEFT JOIN (SELECT b.activity_id, min(b.event_date_time) AS min_date_time,
		max(b.event_date_time) AS max_date_time FROM cms_activity_event b GROUP BY b.activity_id) c ON a.activity_id = c.activity_id
		WHERE a.activity_is_del = 1 AND a.activity_state = 6 AND a.activity_type LIKE '%${tagId}%' AND c.max_date_time &lt; DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
		GROUP BY d.activity_id ORDER BY cs.year_browse_count desc, c.min_date_time asc) as activity7 where activity7.AVAILABLE_COUNT = 0)
	</select>

    <select id="queryAppIndexData" parameterType="java.util.Map" resultType="com.sun3d.why.model.extmodel.AppIndexData">
        SELECT
        cssc.activityId,
        cssc.commentCount,
        cssc.scanCount,
        cssc.collectCount,
        cssc.sys_id sysId,
        cssc.sys_no sysNo,
        <if test="lat != null and lon != null">
            cssc.distance,
        </if>
        IFNULL(sum(cae.AVAILABLE_COUNT), 0) AS ticketCount
        FROM
        (
        SELECT
        acs.activityId,
        acs.commentCount,
        acs.scanCount,
        acs.sys_id,
        acs.sys_no,
        <if test="lat != null and lon != null">
            acs.distance,
        </if>
        COUNT(css.ID) collectCount
        FROM
        (
        SELECT
        ac.ACTIVITY_ID activityId,
        ac.commentCount,
        ac.sys_id,
        ac.sys_no,
        <if test="lat != null and lon != null">
            ac.distance,
        </if>
        count(cs.ID) scanCount
        FROM
        (
        SELECT
        ca.ACTIVITY_ID,
        ca.sys_id,
        ca.sys_no,
        <if test="lat != null and lon != null">
            round(
            6378.138 * 2 * asin(
            sqrt(
            pow(
            sin(
            (ca.ACTIVITY_LAT * pi() / 180 - #{lat} * pi() / 180) / 2
            ),
            2
            ) + cos(ca.ACTIVITY_LAT * pi() / 180) * cos(#{lat} * pi() / 180) * pow(
            sin(
            (
            ca.ACTIVITY_LON * pi() / 180 - #{lon} * pi() / 180) / 2
            ),
            2
            )
            )
            ) * 1000
            ) AS distance,
        </if>
        COUNT(cc.COMMENT_ID) commentCount
        FROM
        cms_activity ca
        LEFT JOIN cms_comment cc ON ca.ACTIVITY_ID = cc.COMMENT_RK_ID
        AND cc.COMMENT_TYPE = 2
        WHERE
        ca.ACTIVITY_ID IN

        <foreach collection="list" separator="," item="item" open="(" close=")">
            #{item}
        </foreach>

        GROUP BY
        ca.ACTIVITY_ID
        ) ac
        LEFT JOIN cms_activity_user_statistics cs ON ac.ACTIVITY_ID = cs.ACTIVITY_ID
        AND cs.OPERATE_TYPE = 1
        GROUP BY
        ac.ACTIVITY_ID
        ) acs
        LEFT JOIN cms_activity_user_statistics css ON acs.activityId = css.ACTIVITY_ID
        AND css.OPERATE_TYPE = 3
        GROUP BY
        acs.activityId
        ) cssc
        LEFT JOIN cms_activity_event cae ON cssc.activityId = cae.ACTIVITY_ID
        AND substring(cae.EVENT_DATE_TIME, 1, 16) > CURRENT_TIMESTAMP
        GROUP BY
        cssc.activityId
    </select>

    <!--why3.4 app近期活动列表-->
    <select id="queryNearActivityByCondition" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
        f.tag_id,f.tag_name,f.tag_image_url,g.activity_id,g.activity_name,g.AVAILABLE_COUNT,g.activity_price,g.ACTIVITY_PAY_PRICE,g.activity_start_time,
        g.activity_end_time,g.eventimes,g.activity_area,g.activity_type,<if test="lat != null and lon != null">
        g.distance,</if>g.dict_name,g.activity_is_free,
        g.activity_is_reservation,g.activity_update_time,g.activity_sales_online,g.activity_icon_url,g.sys_no,g.sys_id
        from(
        select a.activity_id,a.activity_name, a.activity_price,a.ACTIVITY_PAY_PRICE,
        a.activity_start_time,d.year_browse_count,a.sys_no,a.sys_id,
        a.activity_end_time, c.eventimes,
        a.activity_area,a.activity_type,c.min_date_time,c.max_date_time,c.AVAILABLE_COUNT,a.activity_is_free,
        <if test="lat != null and lon != null">
            round(6378.138 * 2 * asin(sqrt(pow(sin((a.ACTIVITY_LAT * pi() / 180 - #{lat} * pi() / 180) / 2), 2) +
            cos(a.ACTIVITY_LAT * pi() / 180) * cos(#{lat} * pi() / 180) * pow(sin((a.ACTIVITY_LON * pi() / 180 - #{lon}
            * pi() / 180) / 2),
            2))) * 1000) AS distance,
        </if>
        e.dict_name, a.activity_is_reservation, a.activity_update_time, a.activity_sales_online, a.activity_icon_url
        from cms_activity a
        left join (SELECT b.activity_id, min(b.event_date_time) AS min_date_time, max(b.event_date_time) AS
        max_date_time,
        GROUP_CONCAT(DISTINCT b.EVENT_TIME ORDER BY b.event_time ASC) AS eventimes,
        IFNULL(SUM(IF(left(b.EVENT_DATE_TIME, 16) > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'), b.AVAILABLE_COUNT, 0)), 0) AS
        AVAILABLE_COUNT
        FROM cms_activity_event b GROUP BY b.activity_id) c on a.activity_id = c.activity_id
        left join cms_statistics d on a.activity_id = d.s_id
        left join sys_dict e on a.activity_location = e.dict_id
        where a.activity_is_del = 1 and a.activity_state = 6
        <if test="activityArea != null">
            and a.activity_area like #{activityArea}
            <if test="activityLocation != null">
                and a.activity_location = #{activityLocation}
            </if>
        </if>
        <if test="sortType == 2 or sortType == 0">
            and left(c.min_date_time,16) > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
        </if>
        <if test="sortType == 3">
            and CONCAT(left(c.max_date_time,10),' ',right(c.max_date_time,5)) > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
        </if>
        <if test="chooseType == 1 or chooseType == 2 or chooseType == 3 or chooseType == 4">
            and ((left(c.min_date_time, 16) > #{startTime} and left(c.min_date_time, 16) &lt; #{endTime} and
            left(c.max_date_time, 16) > #{endTime}) OR
            (left(c.min_date_time, 16) &lt; #{startTime} and left(c.max_date_time, 16) > #{startTime} and
            left(c.max_date_time, 16) &lt; #{endTime}) OR
            (left(c.min_date_time, 16) &lt; #{startTime} and left(c.max_date_time, 16) > #{endTime}) OR
            (left(c.min_date_time, 16) > #{startTime} and left(c.max_date_time, 16) &lt; #{endTime}) OR
            (left(c.min_date_time, 16) = #{startTime} and left(c.max_date_time, 16) = #{endTime}) OR
            (left(c.min_date_time, 16) = #{startTime} and left(c.max_date_time, 16) &lt; #{endTime}) OR
            (left(c.min_date_time, 16) > #{startTime} and left(c.max_date_time, 16) = #{endTime}) OR
            (left(c.min_date_time, 16) = #{startTime} and left(c.max_date_time, 16) > #{endTime}) OR
            (left(c.min_date_time, 16) &lt; #{startTime} and left(c.max_date_time, 16) = #{endTime}))
        </if>
        <if test="isWeekend == 1 or isWeekend == 0">
            and (
            <foreach collection="list" separator="or" item="item" open="" close="">
                (a.activity_start_time &lt;= '${item}' and a.activity_end_time >= '${item}')
            </foreach>
            )
        </if>
        <if test="bookType == 1">
            and a.activity_is_reservation = 2
            and left(c.max_date_time,16) > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
            and c.AVAILABLE_COUNT > 0
        </if>
        <if test="bookType == 0">
            and a.activity_is_reservation = 1 and left(c.max_date_time,16) > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
        </if>
        ) g left join cms_tag f on find_in_set(f.tag_id, g.activity_type)
        where 1=1
        <if test="activityType != null">
            and f.tag_id in
            <foreach collection="activityType" separator="," item="item" open="(" close=")">
                '${item}'
            </foreach>
        </if>
        group by g.activity_id
        /*排序*/
        <if test="sortType == null">
            /*order by g.distance asc*/
            order by g.activity_update_time desc
        </if>
        <if test="sortType == 1">
            /*order by g.activity_update_time desc*/
            <if test="lat != null and lon != null">
                order by g.distance asc
            </if>
        </if>
        <if test="sortType == 0">
            order by g.distance asc,left(g.min_date_time,16) asc,g.year_browse_count desc
        </if>
        <if test="sortType == 2">
            order by left(g.min_date_time,16) asc
        </if>
        <if test="sortType == 3">
            order by CONCAT(left(g.max_date_time,10),' ',right(g.max_date_time,5)) asc
        </if>
        <if test="sortType == 4">
            order by g.activity_update_time desc
        </if>
        <if test="sortType == 5">
            order by g.year_browse_count desc
        </if>
        <if test="sortType == 6">
            order by (select count(*) from cms_comment e where e.comment_rk_id = g.activity_id) desc
        </if>
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>

    <!-- 文化云3.4 web 首页活动列表查询 -->
    <!-- 
    	市级单位一共8个：
		佛山市图书馆			
		佛山市文化馆			
		佛山市博物馆			
		佛山市祖庙博物馆			
		佛山粤剧传习所			
		佛山市艺术创作院			
		佛山市演艺中心			
		佛山市石景宜刘紫英伉俪文化艺术馆
	-->
    <select id="queryIndexActivityByCondition" parameterType="java.util.Map" resultMap="BaseResultMap">
        select a.activity_id,a.activity_name, a.activity_price,a.ACTIVITY_PAY_PRICE,
        a.activity_start_time,a.sys_no,a.sys_id,
        a.activity_area,
        a.activity_is_reservation, a.activity_update_time, a.activity_sales_online,
        a.activity_icon_url,a.ACTIVITY_ADDRESS,a.ACTIVITY_SITE,a.cancel_end_time,
        c.AVAILABLE_COUNT,
        (SELECT max(cae.event_date_time) from cms_activity_event cae where cae.activity_id = a.activity_id) as activity_end_time,
        IF(EXISTS(SELECT 1 FROM cms_activity_event cae WHERE cae.activity_id = a.activity_id and LEFT(cae.event_date_time,16) &gt;DATE_FORMAT(NOW(),'%Y-%m-%d %H:%i:%S')),0,1) as is_end,
        ABS(DATEDIFF(NOW(),STR_TO_DATE(a.activity_end_time,'%Y-%m-%d'))) as end_date_between,
        ABS(DATEDIFF(NOW(),STR_TO_DATE(a.activity_start_time,'%Y-%m-%d'))) as start_date_between,
        IF(EXISTS(SELECT 1 FROM cms_activity_venue_relevance cavr WHERE cavr.activity_id = a.activity_id 
        and cavr.venue_id in ('d8d29ea9e80f4e04b3d6aad59dc5043b','dbafab1a49d44cb094a818d7894b86a2','d04fac23e9ec40939a7561668c6ba3fb','dac61a84ad4e4551bccd9e65e64b7e54',
        'a5038217ba574832a7bb7f5cc077786f','f9b90f959f654630959f07d6237aff20','71683cd86669404bb113b5cb449e7a07','08f2b3888f5343d882573d3397144367')
        ),1,0) as is_city_activity,
        case when a.activity_is_reservation=1 then 2
		else if (c.AVAILABLE_COUNT>0, 1, 3) end AS is_available
        <if test="userId != null">
            ,(SELECT count(*) from cms_collect cc where a.activity_id=cc.RELATE_ID and cc.USER_ID = #{userId} and
            cc.TYPE= 2) as collectNum
        </if>
        from cms_activity a
        left join cms_statistics d on a.activity_id = d.s_id
        left join (SELECT b.activity_id,
        IFNULL(SUM(b.AVAILABLE_COUNT),0) AS AVAILABLE_COUNT
        FROM cms_activity_event b
        WHERE
        b.EVENT_DATE_TIME > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
        GROUP BY b.activity_id) c on a.activity_id = c.activity_id
        where a.activity_state = 6 AND a.activity_is_del = 1
        <if test="startTime != null">
            and a.activity_end_time &gt;= #{startTime}
        </if>
        <if test="endTime != null">
            and a.activity_start_time &lt;= #{endTime}
        </if>
        <if test="activityArea != null">
            and a.activity_area like #{activityArea}
            <if test="activityLocation != null">
                and a.activity_location = #{activityLocation}
            </if>
        </if>
        <if test="activityName != null">
            and a.activity_Name like #{activityName}
        </if>
        <if test="sortType == 2">
            and EXISTS(SELECT 1 FROM cms_activity_event cae WHERE cae.activity_id = a.activity_id and LEFT(cae.event_date_time,16) &gt;DATE_FORMAT(NOW(),'%Y-%m-%d %H:%i:%S'))
        </if>
        <if test="sortType == 3">
            and a.END_TIME_POINT &gt; DATE_FORMAT(NOW(), '%Y-%m-%d')
        </if>
        <if test="bookType == 1">
            and a.activity_is_reservation = 2
        </if>
        <if test="bookType == 0">
            and a.activity_is_reservation = 1
        </if>
        <if test="activityType != null">
            and a.activity_type LIKE #{activityType}
        </if>
        group by a.activity_id
        <if test="sortType == null">
            order by a.activity_recommend desc,
            		is_end asc,
            		end_date_between asc,
            		is_city_activity desc,
            		is_available asc
        </if>
        <if test="sortType == 2">
            order by is_end asc,
            		start_date_between asc,
            		is_city_activity desc,
            		is_available asc
            		
        </if>
        <if test="sortType == 3">
            order by is_end asc,
            		end_date_between asc,
            		is_city_activity desc,
            		is_available asc
        </if>
        <if test="sortType == 4">
            order by a.activity_create_time desc
        </if>
        <if test="sortType == 5">
            order by is_end asc,d.year_browse_count desc
        </if>
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>

    <!-- 文化云3.4 web 首页活动列表总条数 -->
    <!--<select id="queryIndexActivityCountByCondition" parameterType="java.util.Map" resultType="integer">-->
    <!--select count(DISTINCT g.activity_Id)-->
    <!--from(-->
    <!--select a.activity_id,a.activity_name, a.activity_price,-->
    <!--a.activity_start_time,d.year_browse_count,a.sys_no,a.sys_id,-->
    <!--a.activity_end_time, c.eventimes,-->
    <!--a.activity_area,a.activity_type,c.min_date_time,c.max_date_time,c.AVAILABLE_COUNT,-->
    <!--e.dict_name, a.activity_is_reservation, a.activity_update_time, a.activity_sales_online, a.activity_icon_url-->
    <!--from cms_activity a-->
    <!--left join (SELECT b.activity_id, min(b.event_date_time) AS min_date_time, max(b.event_date_time) AS-->
    <!--max_date_time,-->
    <!--GROUP_CONCAT(DISTINCT b.EVENT_TIME ORDER BY b.event_time ASC) AS eventimes,-->
    <!--IFNULL(SUM(IF(left(b.EVENT_DATE_TIME, 16) > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'), b.AVAILABLE_COUNT, 0)), 0) AS-->
    <!--AVAILABLE_COUNT-->
    <!--FROM cms_activity_event b GROUP BY b.activity_id) c on a.activity_id = c.activity_id-->
    <!--left join cms_statistics d on a.activity_id = d.s_id-->
    <!--left join sys_dict e on a.activity_location = e.dict_id-->
    <!--where a.activity_is_del = 1 and a.activity_state = 6-->
    <!--<if test="activityArea != null">-->
    <!--and a.activity_area like #{activityArea}-->
    <!--<if test="activityLocation != null">-->
    <!--and a.activity_location = #{activityLocation}-->
    <!--</if>-->
    <!--</if>-->
    <!--<if test="activityName != null">-->
    <!--and a.activity_Name like #{activityName}-->
    <!--</if>-->

    <!--<if test="sortType == 2 or sortType == 0">-->
    <!--and left(c.min_date_time,16) > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')-->
    <!--</if>-->
    <!--<if test="sortType == 3">-->
    <!--and CONCAT(left(c.max_date_time,10),' ',right(c.max_date_time,5)) > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')-->
    <!--</if>-->
    <!--<if test="chooseType == 1 or chooseType == 2 or chooseType == 3 or chooseType == 4">-->
    <!--and ((left(c.min_date_time, 16) > #{startTime} and left(c.min_date_time, 16) &lt; #{endTime} and-->
    <!--left(c.max_date_time, 16) > #{endTime}) OR-->
    <!--(left(c.min_date_time, 16) &lt; #{startTime} and left(c.max_date_time, 16) > #{startTime} and-->
    <!--left(c.max_date_time, 16) &lt; #{endTime}) OR-->
    <!--(left(c.min_date_time, 16) &lt; #{startTime} and left(c.max_date_time, 16) > #{endTime}) OR-->
    <!--(left(c.min_date_time, 16) > #{startTime} and left(c.max_date_time, 16) &lt; #{endTime}) OR-->
    <!--(left(c.min_date_time, 16) = #{startTime} and left(c.max_date_time, 16) = #{endTime}) OR-->
    <!--(left(c.min_date_time, 16) = #{startTime} and left(c.max_date_time, 16) &lt; #{endTime}) OR-->
    <!--(left(c.min_date_time, 16) > #{startTime} and left(c.max_date_time, 16) = #{endTime}) OR-->
    <!--(left(c.min_date_time, 16) = #{startTime} and left(c.max_date_time, 16) > #{endTime}) OR-->
    <!--(left(c.min_date_time, 16) &lt; #{startTime} and left(c.max_date_time, 16) = #{endTime}))-->
    <!--</if>-->
    <!--<if test="isWeekend == 1 or isWeekend == 0">-->
    <!--and (-->
    <!--<foreach collection="list" separator="or" item="item" open="" close="">-->
    <!--(a.activity_start_time &lt;= '${item}' and a.activity_end_time >= '${item}')-->
    <!--</foreach>-->
    <!--)-->
    <!--</if>-->
    <!--<if test="bookType == 1">-->
    <!--and a.activity_is_reservation = 2-->
    <!--and left(c.max_date_time,16) > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')-->
    <!--and c.AVAILABLE_COUNT > 0-->
    <!--</if>-->
    <!--<if test="bookType == 0">-->
    <!--and a.activity_is_reservation = 1 and left(c.max_date_time,16) > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')-->
    <!--</if>-->
    <!--) g left join cms_tag f on find_in_set(f.tag_id, g.activity_type)-->
    <!--where 1=1-->
    <!--<if test="activityType != null">-->
    <!--and f.tag_id in-->
    <!--<foreach collection="activityType" separator="," item="item" open="(" close=")">-->
    <!--'${item}'-->
    <!--</foreach>-->
    <!--</if>-->
    <!--</select>-->

    <!--why3.5 app日历下每天活动场数-->
    <select id="queryAppEveryDateActivityCount" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT count(*)
		FROM cms_activity a
		WHERE a.ACTIVITY_IS_DEL = 1
		AND a.ACTIVITY_STATE = 6
		and a.activity_start_time &lt;= #{everyDate}
		and a.activity_end_time >= #{everyDate}
	</select>

    <!--why3.5 app日历下某一天活动列表-->
    <select id="queryAppEveryDateActivityList" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
        sd.dict_name,
        cv.venue_name,
        GROUP_CONCAT(
        DISTINCT ce.EVENT_TIME
        ORDER BY
        ce.event_date_time ASC
        ) AS eventimes,
        a.ACTIVITY_SITE,
        a.sys_id,
        a.sys_no,
        a.ACTIVITY_SUBJECT,
        a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_ADDRESS,
        a.ACTIVITY_END_TIME,
        a.activity_is_free,
        a.ACTIVITY_PRICE,
        a.ACTIVITY_PAY_PRICE,
        a.ACTIVITY_ICON_URL,
        if((select count(*) from cms_recommend_related crr where crr.RECOMMEND_COLUMN_TYPE =4 and crr.RELATED_ID =
        a.activity_id)>0,'Y','N') as ACTIVITY_RECOMMEND,
        a.activity_type,
        round(
        6378.138 * 2 * asin(
        sqrt(
        pow(
        sin(
        (
        a.ACTIVITY_LAT * pi() / 180 - #{lat} * pi() / 180
        ) / 2
        ),
        2
        ) + cos(a.ACTIVITY_LAT * pi() / 180) * cos(#{lat} * pi() / 180) * pow(
        sin(
        (
        a.ACTIVITY_LON * pi() / 180 - #{lon} * pi() / 180
        ) / 2
        ),
        2
        )
        )
        ) * 1000
        ) AS distance,
        IFNULL(
        SUM(
        IF (
        ce.EVENT_DATE_TIME >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'),
        ce.AVAILABLE_COUNT,
        0
        )
        ),
        0
        ) AS AVAILABLE_COUNT,
        a.ACTIVITY_LON,
        a.ACTIVITY_LAT,
        a.activity_location,
        a.ACTIVITY_IS_RESERVATION,
        a.ACTIVITY_UPDATE_TIME,
        cs.year_browse_count
        FROM
        cms_activity a
        LEFT JOIN cms_activity_event ce ON a.ACTIVITY_ID = ce.ACTIVITY_ID
        LEFT JOIN cms_statistics cs ON a.activity_id = cs.s_id
        LEFT JOIN cms_activity_venue_relevance cavr ON a.activity_id = cavr.activity_id
        LEFT JOIN cms_venue cv ON cavr.venue_id = cv.venue_id
        LEFT JOIN sys_dict sd ON a.activity_location = sd.dict_id
        WHERE a.ACTIVITY_IS_DEL = 1
        AND a.ACTIVITY_STATE = 6
        and a.activity_start_time &lt;= #{everyDate}
        AND a.activity_end_time >= #{everyDate}
        GROUP BY a.ACTIVITY_ID
        ORDER BY cs.year_browse_count DESC
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>

    <!--why3.5 app附近活动列表 -->
    <select id="queryAppNearActivityList" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
        b.eventimes,
        b.sys_id,
        b.sys_no,
        b.ACTIVITY_SITE,
        b.ACTIVITY_SUBJECT,
        b.ACTIVITY_ID,
        b.ACTIVITY_NAME,
        cv.venue_name,
        b.ACTIVITY_START_TIME,
        b.ACTIVITY_ADDRESS,
        b.ACTIVITY_END_TIME,
        b.activity_is_free,
        b.ACTIVITY_PRICE,
        b.ACTIVITY_PAY_PRICE,
        b.ACTIVITY_ICON_URL,
        b.AVAILABLE_COUNT,
        b.ACTIVITY_LON,
        b.ACTIVITY_LAT,
        b.ACTIVITY_RECOMMEND,
        b.ACTIVITY_IS_RESERVATION,
        b.distance,
        b.activity_update_time,
        sd.dict_name,
        ct.tag_name,
        b.PRICE_TYPE,
        b.SPIKE_TYPE,
        <!--同一结束时间按评级降序-->
        (CASE
        WHEN sd2.dict_name='A' THEN 0
        WHEN sd2.dict_name='B' THEN 1
        WHEN sd2.dict_name='C' THEN 2
        WHEN sd2.dict_name='D' THEN 3
        ELSE 4 END
        ) sort2,
        <!--7天内PV-->
        (SELECT SUM(sr.pv)
        FROM stat_react sr
        WHERE sr.pk = b.activity_id AND DATE_SUB(CURDATE(),interval 7 DAY)&lt;=sr.cdate
        ) sort3
        FROM(
        SELECT GROUP_CONCAT(DISTINCT ce.EVENT_TIME ORDER BY ce.event_date_time ASC) AS eventimes,
        a.ACTIVITY_SITE,
        a.sys_id,
        a.sys_no,
        a.ACTIVITY_SUBJECT,
        a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_ADDRESS,
        a.ACTIVITY_END_TIME,
        a.activity_is_free,
        a.ACTIVITY_PRICE,
        a.ACTIVITY_PAY_PRICE,
        a.ACTIVITY_ICON_URL,
        a.activity_type,
        a.ratings_info,
        a.PRICE_TYPE,
        a.SPIKE_TYPE,
        IFNULL(
        SUM(
        IF(ce.EVENT_DATE_TIME >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'),ce.AVAILABLE_COUNT,0)
        )
        ,0) AS AVAILABLE_COUNT,
        a.ACTIVITY_LON,
        a.ACTIVITY_LAT,
        a.activity_location,
        a.ACTIVITY_IS_RESERVATION,
        a.ACTIVITY_UPDATE_TIME,
        IF((select count(*) from cms_recommend_related crr where crr.RECOMMEND_COLUMN_TYPE =4 and crr.RELATED_ID =
        a.activity_id)>0,'Y','N') as ACTIVITY_RECOMMEND,
        round(6378.138 * 2 * asin(sqrt(pow(sin((a.ACTIVITY_LAT * pi() / 180 - #{lat} * pi() / 180) / 2), 2) +
        cos(a.ACTIVITY_LAT * pi() / 180) * cos(#{lat} * pi() / 180) * pow(sin((a.ACTIVITY_LON * pi() / 180 - #{lon}
        * pi() / 180) / 2),
        2))) * 1000) AS distance,
        <!--已订完调整到排序最后-->
        IF(AVAILABLE_COUNT>0,0,1) sort1
        FROM cms_activity a
        LEFT JOIN cms_activity_event ce ON a.ACTIVITY_ID=ce.ACTIVITY_ID
        WHERE a.ACTIVITY_IS_DEL = 1 AND a.ACTIVITY_STATE = 6 and a.ACTIVITY_END_TIME >= DATE_FORMAT(NOW(),'%Y-%m-%d')
        GROUP BY a.ACTIVITY_ID
        <!--当天已结束的活动，滤掉不显示（以活动结束最后一场时间为准）-->
        HAVING CONVERT(substring(GROUP_CONCAT(DISTINCT ce.event_date_time
        ORDER BY ce.event_date_time DESC),1,16),CHAR)>= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
        ORDER BY sort1
        ) b
        LEFT JOIN cms_tag ct ON FIND_IN_SET(ct.tag_id, b.activity_type)
        LEFT JOIN cms_activity_venue_relevance cavr ON b.activity_id = cavr.activity_id
        LEFT JOIN cms_venue cv ON cavr.venue_id = cv.venue_id
        LEFT JOIN sys_dict sd ON b.activity_location = sd.dict_id
        LEFT JOIN sys_dict sd2 ON b.ratings_info = sd2.dict_id
        WHERE b.distance &lt;= 5000
        <if test="activityType != null">
            AND ct.tag_id in
            <foreach collection="activityType" separator="," item="item" open="(" close=")">
                '${item}'
            </foreach>
        </if>
        <if test="activityIsFree != null">
            and b.activity_is_free = #{activityIsFree}
        </if>
        <if test="activityIsReservation != null">
            and b.activity_is_reservation = #{activityIsReservation}
        </if>
        GROUP BY b.activity_id
        <!-- 智能排序 -->
        <if test="sortType == 1">ORDER BY b.distance</if>
        <!-- 热门排序  -->
        <if test="sortType == 2">ORDER BY sort2 ,sort3 DESC</if>
        <!-- 最新上线 -->
        <if test="sortType == 3">ORDER BY b.activity_update_time DESC</if>
        <!-- 即将结束 -->
        <if test="sortType == 4">ORDER BY b.ACTIVITY_END_TIME, sort2</if>
        <if test="firstResult != null">
            LIMIT ${firstResult},${rows}
        </if>
    </select>

    <!--why3.5 app根据活动id查询活动对象 -->
    <select id="queryAppCmsActivityById" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
        a.ACTIVITY_NOTICE,
        a.SYS_ID,
        a.SYS_NO,
        GROUP_CONCAT(DISTINCT cf.FUN_NAME SEPARATOR ',' ) AS funName,
        SUBSTRING(a.activity_city, locate(',', a.activity_city)+1) as city,
        SUBSTRING(a.activity_area, locate(',', a.activity_area)+1) as area,
        a.ACTIVITY_ID,
        a.ACTIVITY_ICON_URL,
        a.ACTIVITY_NAME,
        cv.venue_name,
        a.ACTIVITY_SITE,
        a.ACTIVITY_ADDRESS,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_END_TIME,
        a.price_describe,
        a.ACTIVITY_TEL,
        a.ACTIVITY_PRICE,
        a.ACTIVITY_PAY_PRICE,
        a.activity_is_free,
        IFNULL(
        (CASE
        WHEN str_to_date(a.ACTIVITY_START_TIME,'%Y-%m-%d') > CURDATE() THEN DATEDIFF(a.ACTIVITY_START_TIME,CURDATE())
        WHEN CURDATE()&gt;=str_to_date(a.ACTIVITY_START_TIME,'%Y-%m-%d') and CURDATE()&lt;=str_to_date(a.ACTIVITY_END_TIME,'%Y-%m-%d')
        THEN '0' ELSE '-1' END
        )
        ,'-1')as dateNums,
        a.ACTIVITY_MEMO,
        a.ACTIVITY_TIME_DES,
        a.ACTIVITY_LON,
        a.ACTIVITY_LAT,
        a.ACTIVITY_IS_RESERVATION,
        a.ACTIVITY_SUPPLEMENT_TYPE,
        a.ACTIVITY_SALES_ONLINE,
        a.activity_host,
        a.ACTIVITY_ORGANIZER,
        a.ACTIVITY_COORGANIZER,
        a.ACTIVITY_PERFORMED,
        a.ACTIVITY_SPEAKER,
        a.TICKET_SETTINGS,
        a.TICKET_NUMBER,
        a.TICKET_COUNT,
        a.IDENTITY_CARD,
        a.PRICE_TYPE,
        a.LOWEST_CREDIT,
        a.COST_CREDIT,
        a.DEDUCTION_CREDIT,
        a.SPIKE_TYPE,
        a.SINGLE_EVENT,
        <if test="userId!=null">
            (select COUNT(*) from cms_collect c WHERE 1=1 AND c.TYPE=#{type}
            and c.USER_ID=#{userId}
            AND c.RELATE_ID=#{relatedId}) AS collectNum,
        </if>
        <if test="userId!=null">
            (SELECT count(*)
            FROM cms_user_wantgo cau
            WHERE 1 = 1 and cau.RELATE_ID =#{relatedId}
            AND cau.USER_ID =#{userId}
            ) AS activityIsWant,
        </if>
        GROUP_CONCAT(DISTINCT ct.TAG_NAME SEPARATOR ',') AS tagName,
        (SELECT IFNULL(SUM(ce.AVAILABLE_COUNT),0) from cms_activity_event ce WHERE 1=1
        <if test="relatedId!=null">
            AND ce.ACTIVITY_ID=#{relatedId}
        </if>
        AND ce.EVENT_DATE_TIME >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
        )AS AVAILABLE_COUNT
        FROM cms_activity a
        INNER JOIN (
        SELECT
        CONVERT ( concat_ws( ',',ca.ACTIVITY_THEME,ca.ACTIVITY_TYPE),CHAR) AS
        type,ca.ACTIVITY_ID
        FROM cms_activity ca
        WHERE 1 = 1
        <if test="relatedId!=null">
            AND ca.ACTIVITY_ID=#{relatedId}
        </if>
        ) al ON a.ACTIVITY_ID = al.ACTIVITY_ID
        LEFT JOIN cms_tag ct ON FIND_IN_SET(ct.TAG_ID, al.type)
        LEFT JOIN cms_activity_template cat on cat.TEMPL_ID=a.TEMPL_ID
        LEFT JOIN cms_activity_template_rel catl on catl.TEMPL_ID=cat.TEMPL_ID
        LEFT JOIN cms_function cf on cf.FUN_ID=catl.FUN_ID
        LEFT JOIN cms_activity_venue_relevance cavr on a.activity_id = cavr.activity_id
        LEFT JOIN cms_venue cv on cavr.venue_id = cv.venue_id
        WHERE 1 = 1 AND a.ACTIVITY_IS_DEL = 1 AND a.ACTIVITY_STATE = 6
        <if test="relatedId!=null">
            AND a.ACTIVITY_ID=#{relatedId}
        </if>
        <!--<if test="activityStartTime != null and activityStartTime != ''">
			AND substring(ce.event_date_time,1,16) &gt;= #{activityStartTime}
		</if>-->
    </select>

    <!--why3.5 app根据展馆id获取相关活动列表 -->
    <select id="queryAppActivityListById" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
        a.ACTIVITY_ID,a.ACTIVITY_NAME,a.ACTIVITY_START_TIME,a.ACTIVITY_END_TIME,a.activity_is_free,
        a.ACTIVITY_PRICE,a.ACTIVITY_PAY_PRICE,a.ACTIVITY_ICON_URL,a.sys_no,a.sys_id,a.ACTIVITY_SUBJECT,cs.year_browse_count,
        tag.tag_name,a.activity_update_time,a.ACTIVITY_ADDRESS,a.ACTIVITY_SITE,
        if((select count(*) from cms_recommend_related crr where crr.RECOMMEND_COLUMN_TYPE =4 and crr.RELATED_ID =
        a.activity_id)>0,'Y','N') as ACTIVITY_RECOMMEND,
        IFNULL(
        SUM(
        IF(ce.EVENT_DATE_TIME >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'),ce.AVAILABLE_COUNT,0)
        )
        ,0) AS AVAILABLE_COUNT,
        a.ACTIVITY_IS_RESERVATION,a.PRICE_TYPE,a.SPIKE_TYPE,
        v.venue_name,d.dict_name
        <if test="userId != null">
            ,(SELECT count(*) from cms_collect cc where a.activity_id=cc.RELATE_ID and cc.USER_ID = #{userId} and
            cc.TYPE= 2) as collectNum
        </if>
        from cms_activity a
        LEFT JOIN cms_activity_venue_relevance cavr on a.ACTIVITY_ID=cavr.ACTIVITY_ID
        LEFT JOIN cms_venue v on cavr.venue_id = v.venue_id
        LEFT JOIN cms_activity_event ce on a.ACTIVITY_ID=ce.ACTIVITY_ID
        left join cms_tag tag on find_in_set(tag.tag_id, a.activity_type)
        left join cms_statistics cs on a.activity_id = cs.s_id
        LEFT JOIN sys_dict d on a.activity_location = d.dict_id
        WHERE 1=1
        <if test="venueId != null">
            AND v.VENUE_ID = #{venueId,jdbcType=VARCHAR}
        </if>
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        GROUP BY a.ACTIVITY_ID
        HAVING CONVERT(substring(GROUP_CONCAT(DISTINCT ce.event_date_time
        ORDER BY ce.event_date_time DESC),1,16),CHAR)>= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
        ORDER BY a.ACTIVITY_UPDATE_TIME desc
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>

    <!--why3.5 app根据展馆id获取相关活动个数 -->
    <select id="queryAppActivityCountById" resultType="java.lang.Integer"
            parameterType="java.util.Map">
        select count(*) from (SELECT
        a.ACTIVITY_ID
        from cms_activity a
        LEFT JOIN cms_activity_venue_relevance v
        on a.ACTIVITY_ID=v.ACTIVITY_ID
        LEFT JOIN cms_activity_event ce
        on a.ACTIVITY_ID=ce.ACTIVITY_ID
        left join cms_statistics cs on a.activity_id = cs.s_id
        WHERE 1=1
        <if test="venueId != null">
            AND v.VENUE_ID = #{venueId,jdbcType=VARCHAR}
        </if>
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        GROUP BY a.ACTIVITY_ID
        HAVING
        CONVERT (
        substring(
        GROUP_CONCAT(
        DISTINCT ce.event_date_time
        ORDER BY
        ce.event_date_time DESC
        ),
        1,
        16
        ),
        CHAR
        ) >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')) b
    </select>

    <!--why3.5 app根据不同条件筛选活动列表(搜索功能) -->
    <select id="queryAppCmsActivityListByCondition" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT DISTINCT
        SUBSTRING(a.activity_city, locate(',', a.activity_city)+1) as city,
        SUBSTRING(a.activity_area, locate(',', a.activity_area)+1) as area,
        GROUP_CONCAT(DISTINCT ce.EVENT_TIME ORDER BY ce.event_date_time ASC) AS eventimes,
        a.sys_no,
        a.sys_id,
        a.ACTIVITY_ADDRESS,
        a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        cv.venue_name,
        sd.dict_name,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_END_TIME,
        a.activity_update_time,
        a.ACTIVITY_SITE,
        a.activity_is_free,
        a.activity_price,
        a.ACTIVITY_PAY_PRICE,
        a.ACTIVITY_SUBJECT,
        a.JOIN_METHOD,
        a.ACTIVITY_ICON_URL,
        cs.year_browse_count,
        a.PRICE_TYPE,
        a.SPIKE_TYPE,
        ct.tag_name,
        if((select count(*) from cms_recommend_related crr where crr.RECOMMEND_COLUMN_TYPE =4 and crr.RELATED_ID =
        a.activity_id)>0,'Y','N') as ACTIVITY_RECOMMEND,
        IFNULL(
        SUM(
        IF (ce.EVENT_DATE_TIME >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'),ce.AVAILABLE_COUNT,0)
        )
        ,0)AS AVAILABLE_COUNT,
        a.ACTIVITY_LON,
        a.ACTIVITY_LAT,
        a.ACTIVITY_IS_RESERVATION,
        <if test="lat != null and lon != null">
            round(6378.138 * 2 * asin(sqrt(pow(sin((a.ACTIVITY_LAT * pi() / 180 - #{lat} * pi() / 180) / 2), 2) +
            cos(a.ACTIVITY_LAT * pi() / 180) * cos(#{lat} * pi() / 180) * pow(sin((a.ACTIVITY_LON * pi() / 180 - #{lon}
            * pi() / 180) / 2),
            2))) * 1000) AS distance
        </if>
        FROM cms_activity a
        LEFT JOIN cms_activity_event ce on a.ACTIVITY_ID=ce.ACTIVITY_ID
        left join cms_activity_venue_relevance cavr on a.activity_id=cavr.activity_id
        left join cms_venue cv on cavr.venue_id = cv.venue_id
        left join cms_tag tag on FIND_IN_SET(tag.tag_id,a.activity_type)
        left join cms_statistics cs on a.activity_id = cs.s_id
        left join sys_dict sd on a.activity_location = sd.dict_id
        LEFT JOIN cms_tag ct ON FIND_IN_SET(ct.tag_id, a.activity_type)
        where a.ACTIVITY_IS_DEL = 1 AND a.ACTIVITY_STATE = 6
        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR} escape '/'
        </if>
        <if test="activityArea != null">
            AND a.ACTIVITY_AREA like #{activityArea,jdbcType=VARCHAR}
        </if>
        <if test="activityIsReservation != null">
            AND a.activity_is_reservation = #{activityIsReservation}
        </if>
        <if test="activityType != null ">
            and tag.tag_id in
            <foreach item="item" index="index" collection="activityType" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        GROUP BY a.ACTIVITY_ID
        HAVING CONVERT (substring(GROUP_CONCAT(DISTINCT ce.event_date_time ORDER BY ce.event_date_time DESC),1,16),CHAR)
        >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
        ORDER BY a.ACTIVITY_UPDATE_TIME desc
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>
    <select id="queryAppCmsActivityListByConditionAll" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT DISTINCT
        SUBSTRING(a.activity_city, locate(',', a.activity_city)+1) as city,
        SUBSTRING(a.activity_area, locate(',', a.activity_area)+1) as area,
        GROUP_CONCAT(DISTINCT ce.EVENT_TIME ORDER BY ce.event_date_time ASC) AS eventimes,
        a.sys_no,
        a.sys_id,
        a.ACTIVITY_ADDRESS,
        a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        cv.venue_name,
        sd.dict_name,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_END_TIME,
        a.activity_update_time,
        a.ACTIVITY_SITE,
        a.activity_is_free,
        a.activity_price,
        a.ACTIVITY_PAY_PRICE,
        a.ACTIVITY_SUBJECT,
        a.JOIN_METHOD,
        a.ACTIVITY_ICON_URL,
        cs.year_browse_count,
        a.PRICE_TYPE,
        a.SPIKE_TYPE,
        ct.tag_name,
        if((select count(*) from cms_recommend_related crr where crr.RECOMMEND_COLUMN_TYPE =4 and crr.RELATED_ID =
        a.activity_id)>0,'Y','N') as ACTIVITY_RECOMMEND,
        IFNULL(
        SUM(
        IF (ce.EVENT_DATE_TIME >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'),ce.AVAILABLE_COUNT,0)
        )
        ,0)AS AVAILABLE_COUNT,
        a.ACTIVITY_LON,
        a.ACTIVITY_LAT,
        a.ACTIVITY_IS_RESERVATION,
        <if test="lat != null and lon != null">
            round(6378.138 * 2 * asin(sqrt(pow(sin((a.ACTIVITY_LAT * pi() / 180 - #{lat} * pi() / 180) / 2), 2) +
            cos(a.ACTIVITY_LAT * pi() / 180) * cos(#{lat} * pi() / 180) * pow(sin((a.ACTIVITY_LON * pi() / 180 - #{lon}
            * pi() / 180) / 2),
            2))) * 1000) AS distance
        </if>
        FROM cms_activity a
        LEFT JOIN cms_activity_event ce on a.ACTIVITY_ID=ce.ACTIVITY_ID
        left join cms_activity_venue_relevance cavr on a.activity_id=cavr.activity_id
        left join cms_venue cv on cavr.venue_id = cv.venue_id
        left join cms_tag tag on FIND_IN_SET(tag.tag_id,a.activity_type)
        left join cms_statistics cs on a.activity_id = cs.s_id
        left join sys_dict sd on a.activity_location = sd.dict_id
        LEFT JOIN cms_tag ct ON FIND_IN_SET(ct.tag_id, a.activity_type)
        where a.ACTIVITY_IS_DEL = 1 AND a.ACTIVITY_STATE = 6
        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR} escape '/'
        </if>
        <if test="activityArea != null">
            AND a.ACTIVITY_AREA like #{activityArea,jdbcType=VARCHAR}
        </if>
        <if test="activityIsReservation != null">
            AND a.activity_is_reservation = #{activityIsReservation}
        </if>
        <if test="activityType != null ">
            and tag.tag_id in
            <foreach item="item" index="index" collection="activityType" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        GROUP BY a.ACTIVITY_ID
        <!-- HAVING CONVERT (substring(GROUP_CONCAT(DISTINCT ce.event_date_time ORDER BY ce.event_date_time DESC),1,16),CHAR)
        >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i') -->
        ORDER BY a.ACTIVITY_UPDATE_TIME desc
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>

    <!--why3.5 why3.5 app根据不同条件筛选活动个数(搜索功能) -->
    <select id="queryAppCmsActivityListCount" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(*) from (SELECT a.activity_id
        FROM cms_activity a
        LEFT JOIN cms_activity_event ce on a.ACTIVITY_ID=ce.ACTIVITY_ID
        left join cms_tag tag on FIND_IN_SET(tag.tag_id,a.activity_type)
        where a.ACTIVITY_IS_DEL = 1 AND a.ACTIVITY_STATE = 6
        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR} escape '/'
        </if>
        <if test="activityArea != null">
            AND a.ACTIVITY_AREA like #{activityArea,jdbcType=VARCHAR}
        </if>
        <if test="activityIsReservation != null">
            AND a.activity_is_reservation = #{activityIsReservation}
        </if>
        <if test="activityType != null ">
            and tag.tag_id in
            <foreach item="item" index="index" collection="activityType"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        GROUP BY a.ACTIVITY_ID
        HAVING CONVERT (substring(GROUP_CONCAT(DISTINCT ce.event_date_time ORDER BY ce.event_date_time DESC),1,16),CHAR)
        >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')) b
    </select>
    <select id="queryAppCmsActivityListCountAll" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(*) from (SELECT a.activity_id
        FROM cms_activity a
        LEFT JOIN cms_activity_event ce on a.ACTIVITY_ID=ce.ACTIVITY_ID
        left join cms_tag tag on FIND_IN_SET(tag.tag_id,a.activity_type)
        where a.ACTIVITY_IS_DEL = 1 AND a.ACTIVITY_STATE = 6
        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR} escape '/'
        </if>
        <if test="activityArea != null">
            AND a.ACTIVITY_AREA like #{activityArea,jdbcType=VARCHAR}
        </if>
        <if test="activityIsReservation != null">
            AND a.activity_is_reservation = #{activityIsReservation}
        </if>
        <if test="activityType != null ">
            and tag.tag_id in
            <foreach item="item" index="index" collection="activityType"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        GROUP BY a.ACTIVITY_ID
        ) b
    </select>

    <!--why3.5 app查询推荐置顶的活动-->
    <select id="queryAppRecommendActivityList" resultMap="BaseResultMap">
        SELECT
        b.activity_id,
        b.activity_name,
        b.activity_is_free,
        b.activity_price,
        b.ACTIVITY_PAY_PRICE,
        b.activity_subject,
        b.activity_site,
        b.activity_start_time,
        b.activity_end_time,
        b.activity_icon_url,
        b.activity_address,
        b.ACTIVITY_IS_RESERVATION,
        b.ACTIVITY_SALES_ONLINE,
        b.AVAILABLE_COUNT,
        b.eventimes,
        b.activity_update_time,
        b.venue_name,
        b.dict_name,
        b.activity_area,
        b.year_browse_count,
        b.ACTIVITY_RECOMMEND,
        b.sys_no,
        b.sys_id,
        ct.tag_name,
        b.PRICE_TYPE,
        b.SPIKE_TYPE
        FROM(
        SELECT
        a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        a.ACTIVITY_DEPT,
        a.activity_subject,
        a.activity_site,
        a.activity_start_time,
        a.activity_end_time,
        a.sys_no,
        a.sys_id,
        a.activity_icon_url,
        a.ACTIVITY_IS_RESERVATION,
        a.ACTIVITY_SALES_ONLINE,
        a.activity_is_free,
        a.activity_price,
        a.ACTIVITY_PAY_PRICE,
        a.activity_type,
        IF((select count(*) from cms_recommend_related crr where crr.RELATED_ID = a.activity_id and crr.top_id =
        a.activity_id
        AND crr.top_type = 1)>0,'Y','N') as ACTIVITY_RECOMMEND,
        sd.RECOMMEND_TIME,
        d.dict_name,
        a.activity_area,
        a.activity_update_time,
        v.venue_name,
        s.year_browse_count,
        a.PRICE_TYPE,
        a.SPIKE_TYPE,
        IFNULL(
        SUM(
        IF(ce.EVENT_DATE_TIME >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'),ce.AVAILABLE_COUNT,0)
        )
        ,0) AS AVAILABLE_COUNT,
        <!--已订完调整到排序最后-->
        IF(AVAILABLE_COUNT>0,0,1) sort1,
        a.activity_address,
        GROUP_CONCAT(DISTINCT ce.EVENT_TIME ORDER BY ce.event_time ASC) AS eventimes,
        max(ce.event_date_time) AS max_event_date_time
        FROM cms_activity a
        LEFT JOIN cms_activity_event ce ON a.ACTIVITY_ID = ce.ACTIVITY_ID
        LEFT JOIN cms_activity_venue_relevance cavr on a.activity_id = cavr.activity_id
        LEFT JOIN cms_venue v on cavr.venue_id = v.venue_id
        LEFT JOIN sys_dict d on a.activity_location = d.dict_id
        LEFT JOIN cms_statistics s on a.activity_id = s.s_id
        RIGHT JOIN (
        SELECT RECOMMEND_ID,RELATED_ID,UPDATE_USER_ID,RECOMMEND_TIME
        FROM cms_recommend_related
        WHERE RECOMMEND_COLUMN_TYPE = 4
        ) sd ON a.ACTIVITY_ID = sd.RELATED_ID
        WHERE a.activity_is_del = 1 AND a.activity_state = 6
        GROUP BY a.ACTIVITY_ID
        <!--当天已结束的活动，滤掉不显示（以活动结束最后一场时间为准）-->
        HAVING CONVERT(substring(GROUP_CONCAT(DISTINCT ce.event_date_time
        ORDER BY ce.event_date_time DESC),1,16),CHAR)>= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
        ORDER BY sort1
        ) b
        LEFT JOIN cms_tag ct ON FIND_IN_SET(ct.tag_id, b.activity_type)
        LEFT JOIN cms_recommend_related cr ON b.ACTIVITY_ID = cr.RELATED_id AND cr.top_id = b.activity_id AND
        cr.top_type = 1
        GROUP BY b.ACTIVITY_ID
        ORDER BY cr.top_time DESC, b.RECOMMEND_TIME DESC
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>

    <!--why3.5 app查询推荐的活动（带筛选）-->
    <select id="queryFilterActivityList" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
        b.sys_no,
        b.sys_id,
        b.activity_id,
        b.activity_name,
        b.activity_is_free,
        b.activity_price,
        b.ACTIVITY_PAY_PRICE,
        b.activity_subject,
        b.activity_site,
        b.activity_start_time,
        b.activity_end_time,
        b.activity_icon_url,
        b.activity_address,
        b.ACTIVITY_IS_RESERVATION,
        b.ACTIVITY_SALES_ONLINE,
        b.AVAILABLE_COUNT,
        b.eventimes,
        b.activity_update_time,
        b.venue_name,
        b.dict_name,
        b.activity_area,
        b.ACTIVITY_RECOMMEND,
        b.PRICE_TYPE,
        b.SPIKE_TYPE,
        ct.tag_name,
        (SELECT SUM(sr.pv)
        FROM stat_react sr
        WHERE sr.pk = b.activity_id AND DATE_SUB(CURDATE(),interval 7 DAY)&lt;=sr.cdate
        ) sort3
        FROM(
        SELECT
        a.sys_no,
        a.sys_id,
        a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        a.ACTIVITY_DEPT,
        a.activity_subject,
        a.activity_site,
        a.activity_start_time,
        a.activity_end_time,
        a.activity_icon_url,
        a.ACTIVITY_IS_RESERVATION,
        a.ACTIVITY_SALES_ONLINE,
        a.activity_is_free,
        a.activity_price,
        a.ACTIVITY_PAY_PRICE,
        a.activity_type,
        d.dict_name,
        a.activity_area,
        a.activity_address,
        a.activity_update_time,
        v.venue_name,
        a.PRICE_TYPE,
        a.SPIKE_TYPE,
        IF((select count(*) from cms_recommend_related crr where crr.RELATED_ID = a.activity_id and crr.top_id =
        a.activity_id
        AND crr.top_type = 1)>0,'Y','N') as ACTIVITY_RECOMMEND,
        IFNULL(
        SUM(
        IF(ce.EVENT_DATE_TIME >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'),ce.AVAILABLE_COUNT,0)
        )
        ,0) AS AVAILABLE_COUNT,
        <!--已订完调整到排序最后-->
        IF(AVAILABLE_COUNT>0,0,1) sort1,
        <!--同一结束时间按评级降序-->
        (CASE
        WHEN d.dict_name='A' THEN 0
        WHEN d.dict_name='B' THEN 1
        WHEN d.dict_name='C' THEN 2
        WHEN d.dict_name='D' THEN 3
        ELSE 4 END
        ) sort2,
        <!-- 市中心距离 -->
        <if test="activityArea == null">
            round(6378.138 * 2 * asin(sqrt(pow(sin((a.ACTIVITY_LAT * pi() / 180 - 31.22 * pi() / 180) / 2), 2) +
            cos(a.ACTIVITY_LAT * pi() / 180) * cos(31.22 * pi() / 180) * pow(sin((a.ACTIVITY_LON * pi() / 180 - 121.48
            * pi() / 180) / 2),
            2))) * 1000) AS distance,
        </if>
        GROUP_CONCAT(DISTINCT ce.EVENT_TIME ORDER BY ce.event_time ASC) AS eventimes
        FROM cms_activity a
        LEFT JOIN cms_activity_event ce ON a.ACTIVITY_ID = ce.ACTIVITY_ID
        LEFT JOIN cms_activity_venue_relevance cavr on a.activity_id = cavr.activity_id
        LEFT JOIN cms_venue v on cavr.venue_id = v.venue_id
        LEFT JOIN sys_dict d on a.activity_location = d.dict_id
        WHERE a.activity_is_del = 1 AND a.activity_state = 6 AND a.ACTIVITY_END_TIME >= DATE_FORMAT(NOW(),'%Y-%m-%d')
        <if test="activityIsFree != null">
            AND a.activity_is_free = #{activityIsFree}
        </if>
        <if test="activityIsReservation != null">
            AND a.activity_is_reservation = #{activityIsReservation}
        </if>
        <if test="activityArea != null">
            AND a.activity_area like #{activityArea}
            <if test="activityLocation != null">
                AND a.activity_location = #{activityLocation}
            </if>
        </if>
        GROUP BY a.ACTIVITY_ID
        <!--当天已结束的活动，滤掉不显示（以活动结束最后一场时间为准）-->
        HAVING CONVERT(substring(GROUP_CONCAT(DISTINCT ce.event_date_time
        ORDER BY ce.event_date_time DESC),1,16),CHAR)>= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
        ORDER BY sort1
        ) b
        LEFT JOIN cms_tag ct ON FIND_IN_SET(ct.tag_id, b.activity_type)
        <if test="activityArea == null">
            WHERE b.distance &lt;= 2500
        </if>
        GROUP BY b.ACTIVITY_ID
        <!-- 智能排序 -->
        <if test="sortType == 1">ORDER BY b.sort2, b.ACTIVITY_END_TIME</if>
        <!-- 热门排序  -->
        <if test="sortType == 2">ORDER BY b.sort2, sort3 DESC</if>
        <!-- 最新上线 -->
        <if test="sortType == 3">ORDER BY b.activity_update_time DESC</if>
        <!-- 即将结束 -->
        <if test="sortType == 4">ORDER BY b.ACTIVITY_END_TIME, b.sort2</if>
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>

    <!--why3.5 app查询置顶标签的活动-->
    <select id="queryAppTopActivityList" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
			a.sys_no,
			a.sys_id,
			a.ACTIVITY_ID,
			a.ACTIVITY_NAME,
			a.ACTIVITY_DEPT,
			a.activity_subject,
			a.activity_site,
			a.activity_start_time,
			a.activity_icon_url,
			a.ACTIVITY_IS_RESERVATION,
			a.ACTIVITY_SALES_ONLINE,
			a.activity_is_free,
			a.activity_price,
			a.ACTIVITY_PAY_PRICE,
			a.activity_type,
			d.dict_name,
			a.activity_area,
			a.activity_address,
			a.activity_update_time,
			v.venue_name,
			a.PRICE_TYPE,
			a.SPIKE_TYPE,
			a.activity_recommend,
			a.cancel_end_time,
			(SELECT max(cae.event_date_time) from cms_activity_event cae where cae.activity_id = a.activity_id) as activity_end_time,
			IF(EXISTS(SELECT 1 FROM cms_activity_event cae WHERE cae.activity_id = a.activity_id and LEFT(cae.event_date_time,16) &gt;DATE_FORMAT(NOW(),'%Y-%m-%d %H:%i:%S')),0,1) as is_end,
			ABS(DATEDIFF(NOW(),STR_TO_DATE(a.activity_end_time,'%Y-%m-%d'))) as end_date_between,
			ABS(DATEDIFF(NOW(),STR_TO_DATE(a.activity_start_time,'%Y-%m-%d'))) as start_date_between,
			(SELECT SUM(cae.available_count) FROM cms_activity_event cae WHERE cae.activity_id = a.activity_id AND cae.EVENT_DATE_TIME>=DATE_FORMAT(NOW(),'%Y-%m-%d %H:%i')) as AVAILABLE_COUNT,
			CASE WHEN a.ACTIVITY_IS_RESERVATION = 1 THEN 2
			ELSE IF((SELECT SUM(cae.available_count) 
					FROM cms_activity_event cae 
					WHERE cae.activity_id = a.activity_id 
					AND cae.EVENT_DATE_TIME>=DATE_FORMAT(NOW(),'%Y-%m-%d %H:%i'))>0,1,3) end as is_available,
			IF(EXISTS(SELECT 1 FROM cms_activity_venue_relevance cavr WHERE cavr.activity_id = a.activity_id 
	        and cavr.venue_id in ('d8d29ea9e80f4e04b3d6aad59dc5043b','dbafab1a49d44cb094a818d7894b86a2','d04fac23e9ec40939a7561668c6ba3fb','dac61a84ad4e4551bccd9e65e64b7e54',
	        'a5038217ba574832a7bb7f5cc077786f','f9b90f959f654630959f07d6237aff20','71683cd86669404bb113b5cb449e7a07','08f2b3888f5343d882573d3397144367')
	        ),1,0) as is_city_activity
		FROM
			cms_activity a
			LEFT JOIN cms_activity_venue_relevance cavr ON a.activity_id = cavr.activity_id
			LEFT JOIN cms_venue v ON cavr.venue_id = v.venue_id
			LEFT JOIN sys_dict d ON a.activity_location = d.dict_id
			LEFT JOIN cms_tag ct ON FIND_IN_SET(ct.tag_id, a.activity_type)
			left join cms_statistics cs on a.activity_id = cs.s_id
			LEFT JOIN cms_activity_event cae ON cae.activity_id = a.activity_id
			WHERE 1=1
			AND a.activity_is_del = 1
			AND a.activity_state = 6
			<if test="activityIsFree != null">
            AND a.activity_is_free = #{activityIsFree}
        	</if>
        	<if test="activityIsReservation != null">
            AND a.activity_is_reservation = #{activityIsReservation} and DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i') &lt; CONCAT(SUBSTRING_INDEX(cae.EVENT_DATE_TIME,' ',1),' ',SUBSTRING_INDEX(cae.EVENT_DATE_TIME,'-',-1))
        	AND (a.cancel_end_time is null or a.cancel_end_time &gt;DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'))
        	</if>
        	<if test="tagId != null">
        	AND a.activity_type like '%${tagId}%'
        	</if> 
        	<if test="tagSubId != null">
        	AND EXISTS(select 1 from cms_tag_sub_relate ctsr WHERE ctsr.relate_id = a.activity_id and ctsr.tag_sub_id = #{tagSubId})
        	</if>
			<if test="sortType == 1">
            order by a.activity_recommend desc,
            		is_end asc,
            		end_date_between asc,
            		is_city_activity desc,
            		is_available asc
        	</if>
        	<if test="sortType == 2">
	            order by is_end asc,cs.year_browse_count desc
	        </if>
	        <if test="sortType == 3">
	            order by a.activity_recommend desc,
	            		is_end asc,
	            		end_date_between asc,
	            		is_city_activity desc,
	            		is_available asc
	        </if>
	        <if test="sortType == 4">
	            order by a.activity_recommend desc, 
	            		is_end asc,
	            		start_date_between asc,
	            		is_available asc
	        </if>
	        <if test="sortType == 5">
	            order by a.activity_create_time desc
	        </if>
			<if test="firstResult != null">
            limit ${firstResult},${rows}
	        </if>
    </select>

    <!--why3.5 app日历下时间段活动场数-->
    <select id="queryAppDatePartActivityCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT count(*)
        FROM cms_activity a
        WHERE a.ACTIVITY_IS_DEL = 1 AND a.ACTIVITY_STATE = 6
	        AND a.activity_start_time &lt;= #{endDate}
	        AND a.activity_end_time >= #{startDate}
    </select>

    <!--why3.5 app根据不同条件查询月、周下活动列表 -->
    <select id="queryAppActivityCalendarList" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
        b.ACTIVITY_ADDRESS,
        b.ACTIVITY_ID,
        b.ACTIVITY_NAME,
        b.venue_name,
        b.dict_name,
        b.ACTIVITY_START_TIME,
        b.ACTIVITY_END_TIME,
        b.activity_update_time,
        b.ACTIVITY_SITE,
        b.activity_is_free,
        b.ACTIVITY_IS_RESERVATION,
        b.activity_price,
        b.ACTIVITY_PAY_PRICE,
        b.ACTIVITY_SUBJECT,
        b.ACTIVITY_ICON_URL,
        b.PRICE_TYPE,
        b.SPIKE_TYPE,
        b.AVAILABLE_COUNT,
        <if test="userId != null">
            (SELECT count(cs.RELATE_ID)
            FROM cms_collect cs
            WHERE b.activity_id = cs.RELATE_ID and cs.user_id = #{userId} AND cs.TYPE = 2
            ) AS collectNum,
        </if>
        ct.tag_name
        FROM (
        SELECT
        a.ACTIVITY_ADDRESS,
        a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        cv.venue_name,
        sd.dict_name,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_END_TIME,
        a.activity_update_time,
        a.ACTIVITY_SITE,
        a.activity_is_free,
        a.ACTIVITY_IS_RESERVATION,
        a.activity_price,
        a.ACTIVITY_PAY_PRICE,
        a.ACTIVITY_SUBJECT,
        a.ACTIVITY_ICON_URL,
        a.activity_type,
        a.PRICE_TYPE,
        a.SPIKE_TYPE,
        IFNULL(
        SUM(
        IF(ce.EVENT_DATE_TIME >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'),ce.AVAILABLE_COUNT,0)
        )
        ,0) AS AVAILABLE_COUNT,
        <!--已订完调整到排序最后-->
        IF(
        (IFNULL(
        SUM(
        IF(ce.EVENT_DATE_TIME >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'),ce.AVAILABLE_COUNT,0)
        )
        ,0)
        )>0,0,1) sort1,
        <!--优先显示当天结束活动,其次显示当天开始活动-->
        (CASE
        WHEN a.activity_end_time=CURDATE() THEN 0
        WHEN a.activity_start_time=CURDATE() THEN 1
        ELSE 2 END
        ) sort2,
        <!--同一结束时间按评级降序-->
        (CASE
        WHEN b.dict_name='A' THEN 0
        WHEN b.dict_name='B' THEN 1
        WHEN b.dict_name='C' THEN 2
        WHEN b.dict_name='D' THEN 3
        ELSE 4 END
        ) sort3
        FROM cms_activity a
        LEFT JOIN cms_activity_event ce on a.ACTIVITY_ID=ce.ACTIVITY_ID
        LEFT JOIN cms_activity_venue_relevance cavr ON a.activity_id = cavr.activity_id
        LEFT JOIN cms_venue cv ON cavr.venue_id = cv.venue_id
        LEFT JOIN sys_dict sd ON a.activity_location = sd.dict_id
        LEFT JOIN sys_dict b ON a.ratings_info = b.dict_id
        WHERE a.ACTIVITY_IS_DEL = 1 AND a.ACTIVITY_STATE = 6
        <choose>
            <when test="type == 'month'">
                AND a.activity_start_time &lt;= #{endDate}
                AND a.activity_start_time >= #{startDate}
            </when>
            <otherwise>
                AND a.activity_start_time &lt;= #{endDate}
                AND a.activity_end_time >= #{startDate}
            </otherwise>
        </choose>
        <if test="activityId != null">
            and a.activity_id = #{activityId}
        </if>
        <if test="activityIsFree != null">
            and a.activity_is_free = #{activityIsFree}
        </if>
        <if test="activityIsReservation != null">
            and a.activity_is_reservation = #{activityIsReservation}
        </if>
        <if test="activityArea != null">
            and a.activity_area like #{activityArea}
            <if test="activityLocation != null">
                and a.activity_location = #{activityLocation}
            </if>
        </if>
        <if test="activityType != null">
            and FIND_IN_SET(#{activityType},a.ACTIVITY_TYPE)
        </if>
        group by a.activity_id
        <!--当天已结束的活动，滤掉不显示（以活动结束最后一场时间为准）-->
        HAVING CONVERT(substring(GROUP_CONCAT(DISTINCT ce.event_date_time
        ORDER BY ce.event_date_time DESC),1,16),CHAR)>= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
        ORDER BY sort1,sort2,a.activity_end_time,sort3
        ) b
        LEFT JOIN cms_tag ct ON FIND_IN_SET(ct.tag_id, b.activity_type)
        GROUP BY b.ACTIVITY_ID
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>

    <!--why3.5 app我的活动日历（历史预定活动）列表-->
    <select id="queryAppHistoryActivityList" parameterType="java.util.Map" resultMap="BaseResultMap">
        SELECT
        a.sys_no,
        a.sys_id,
        a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        a.activity_is_free,
        a.activity_price,
        a.ACTIVITY_PAY_PRICE,
        a.PRICE_TYPE,
        cv.venue_name,
        sd.dict_name,
        a.ACTIVITY_SITE,
        a.ACTIVITY_ADDRESS,
        a.ACTIVITY_ICON_URL,
        cae.event_date_time as eventDateTimes,
        1 as activity_is_reserved,
        0 as collectNum,
        1 as order_or_collect,
        a.activity_is_reservation,
        IFNULL((SELECT SUM(e.AVAILABLE_COUNT)
        FROM cms_activity_event e WHERE cao.activity_id = e.activity_id AND e.EVENT_DATE_TIME >= DATE_FORMAT(NOW(),
        '%Y-%m-%d %H:%i')),0) AS AVAILABLE_COUNT,
        ct.tag_name
        FROM cms_activity_order cao
        INNER JOIN cms_activity_event cae ON cao.event_id = cae.event_id
        INNER JOIN cms_activity a ON cao.activity_id = a.activity_id
        LEFT JOIN cms_activity_venue_relevance cavr ON a.activity_id = cavr.activity_id
        LEFT JOIN cms_venue cv ON cavr.venue_id = cv.venue_id
        LEFT JOIN sys_dict sd ON a.activity_location = sd.dict_id
        LEFT JOIN cms_tag ct ON FIND_IN_SET(ct.tag_id, a.activity_type)
        WHERE a.ACTIVITY_IS_DEL = 1 AND a.ACTIVITY_STATE = 6
        and cao.order_pay_status &lt;> 2
        and cao.user_id=#{userId}
        and CONCAT(substring(cae.event_date_time, 1, 10),' ', right(cae.event_date_time,5)) &lt; DATE_FORMAT(NOW(),
        '%Y-%m-%d %H:%i')
        GROUP BY cao.ACTIVITY_ORDER_ID
        ORDER BY a.activity_end_time
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>

    <!--why3.5 app我的活动日历（月份预定活动及收藏）列表-->
    <select id="queryAppMonthActivityList" parameterType="java.util.Map" resultMap="BaseResultMap">
        select * from(
	        SELECT
	        a.sys_no,
	        a.sys_id,
	        a.ACTIVITY_ID,
	        a.ACTIVITY_NAME,
	        a.activity_end_time,
	        cv.venue_name,
	        sd.dict_name,
	        a.ACTIVITY_SITE,
	        a.ACTIVITY_ICON_URL,
	        cae.event_date_time as eventDateTimes,
			a.activity_is_free,
        	a.activity_price,
        	a.ACTIVITY_PAY_PRICE,
        	a.PRICE_TYPE,
	        1 as activity_is_reserved,
	        0 as collectNum,
	        1 as order_or_collect,
	        a.activity_is_reservation,
	        IFNULL(
	        SUM(
	        IF(cae.EVENT_DATE_TIME >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'),cae.AVAILABLE_COUNT,0)
	        )
	        ,0) AS AVAILABLE_COUNT,
	        ct.tag_name
	        FROM cms_activity_order cao
	        inner join cms_activity_event cae on cao.event_id = cae.event_id
	        inner join cms_activity a on cao.activity_id = a.activity_id
	        LEFT JOIN cms_activity_venue_relevance cavr ON a.activity_id = cavr.activity_id
	        LEFT JOIN cms_venue cv ON cavr.venue_id = cv.venue_id
	        LEFT JOIN sys_dict sd ON a.activity_location = sd.dict_id
	        LEFT JOIN cms_tag ct ON FIND_IN_SET(ct.tag_id, a.activity_type)
	        WHERE a.ACTIVITY_IS_DEL = 1 AND a.ACTIVITY_STATE = 6
		        and cao.order_pay_status &lt;> 2
		        and cao.user_id=#{userId}
		        and cae.event_date >= #{startDate}
		        and cae.event_date &lt;= #{endDate}
        ) table1
        UNION
        select * from (
	        SELECT
	        a.sys_no,
	        a.sys_id,
	        a.ACTIVITY_ID,
	        a.ACTIVITY_NAME,
	        a.activity_end_time,
	        cv.venue_name,
	        sd.dict_name,
	        a.ACTIVITY_SITE,
	        a.ACTIVITY_ICON_URL,
	        CONCAT(DATE_FORMAT(a.ACTIVITY_START_TIME, '%m.%d'),'-',DATE_FORMAT(a.ACTIVITY_END_TIME, '%m.%d')) AS eventDateTimes,
	        a.activity_is_free,
        	a.activity_price,
        	a.ACTIVITY_PAY_PRICE,
        	a.PRICE_TYPE,
	        if((select count(*) from cms_activity_order cao where
	        cao.ACTIVITY_ID = a.ACTIVITY_ID and cao.order_pay_status &lt;> 2 and cao.user_id = #{userId})>0, 1, 0) AS activity_is_reserved,
	        (SELECT
	         count(cs.RELATE_ID)
	         FROM cms_collect cs
	         WHERE a.activity_id = cs.RELATE_ID and cs.user_id = #{userId} AND cs.TYPE = 2
	        ) AS collectNum,
	        2 AS order_or_collect,
	        a.activity_is_reservation,
	        IFNULL(
	        SUM(
	        IF(cae.EVENT_DATE_TIME >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'),cae.AVAILABLE_COUNT,0)
	        )
	        ,0) AS AVAILABLE_COUNT,
	        ct.tag_name
	        FROM cms_collect cc
	        INNER JOIN cms_activity a ON cc.relate_id = a.activity_id
	        inner join cms_activity_order cao on cao.activity_id = a.activity_id
	        inner join cms_activity_event cae on cao.event_id = cae.event_id
	        inner JOIN (SELECT cae.activity_id,max(cae.EVENT_DATE_TIME) as maxDateTime FROM cms_activity_event cae GROUP BY cae.activity_id ) maxCae on a.activity_id = maxCae.activity_id
	        LEFT JOIN cms_activity_venue_relevance cavr ON a.activity_id = cavr.activity_id
	        LEFT JOIN cms_venue cv ON cavr.venue_id = cv.venue_id
	        LEFT JOIN sys_dict sd ON a.activity_location = sd.dict_id
	        LEFT JOIN cms_tag ct ON FIND_IN_SET(ct.tag_id, a.activity_type)
	        WHERE a.ACTIVITY_IS_DEL = 1 AND a.ACTIVITY_STATE = 6
		        and cc.user_id = #{userId}
		        and a.activity_start_time &lt;= #{endDate}
		        and a.activity_end_time >= #{startDate}
	        	AND CONCAT(substring(maxCae.maxDateTime, 1, 10),' ',RIGHT (maxCae.maxDateTime, 5)) > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
        ) table2
    </select>

    <select id="queryActivityFromSpecialPageCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT count(*)
        FROM cms_activity a
        LEFT join sys_dict d on a.RATINGS_INFO=d.dict_id
        LEFT JOIN cms_activity_venue_relevance r ON r.activity_id = a.activity_id
        LEFT JOIN cms_venue v ON v.venue_id = r.venue_id
        LEFT JOIN sys_user u ON a.activity_create_user = u.user_id
        LEFT JOIN sys_user uu ON a.activity_update_user = uu.user_id
        <if test="tagSubName != null">
            INNER JOIN cms_tag_sub_relate tsr on tsr.RELATE_ID=a.activity_id
            INNER JOIN cms_tag_sub cts on cts.TAG_SUB_ID = tsr.TAG_SUB_ID and cts.TAG_NAME = #{tagSubName}
        </if>
        where 1=1
        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR}
        </if>
        <choose>
            <when test="selectType == 1">
                AND a.activity_state = 8
                AND a.ACTIVITY_ID NOT IN (SELECT cspa.ACTIVITY_ID FROM ccp_special_page_activity cspa)
            </when>
            <otherwise>
                AND a.ACTIVITY_ID IN (SELECT cspa.ACTIVITY_ID FROM ccp_special_page_activity cspa WHERE cspa.page_id =
                #{pageId})
            </otherwise>
        </choose>
    </select>

    <select id="queryActivityFromSpecialPage" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
        a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        a.ACTIVITY_IS_FREE,
        a.ACTIVITY_PRICE,
        a.ACTIVITY_PAY_PRICE,
        a.ACTIVITY_TYPE,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_END_TIME,
        a.ACTIVITY_STATE,
        a.ACTIVITY_CREATE_TIME,
        a.ACTIVITY_UPDATE_TIME,
        a.ACTIVITY_CREATE_USER,
        a.ACTIVITY_UPDATE_USER,
        a.ACTIVITY_AREA,
        a.ACTIVITY_DEPT,
        a.ACTIVITY_IS_DEL,
        a.ACTIVITY_IS_RESERVATION,
        a.CREATE_ACTIVITY_CODE,
        a.activity_Recommend,
        v.venue_name AS venue_name,
        v.venue_area AS venue_area,
        u.user_account AS user_account,
        uu.user_account AS user_account2,
        a.ACTIVITY_TIME_DES,
        a.ACTIVITY_SALES_ONLINE,
        a.ACTIVITY_PERSONAL,
        a.SYS_ID,
        a.SYS_NO,
        a.ACTIVITY_SITE,
        a.ACTIVITY_SUBJECT,
        a.TEMPL_ID,
        a.RATINGS_INFO,
        d.dict_name as dictName
        FROM cms_activity a
        LEFT join sys_dict d on a.RATINGS_INFO=d.dict_id
        LEFT JOIN cms_activity_venue_relevance r ON r.activity_id = a.activity_id
        LEFT JOIN cms_venue v ON v.venue_id = r.venue_id
        LEFT JOIN sys_user u ON a.activity_create_user = u.user_id
        LEFT JOIN sys_user uu ON a.activity_update_user = uu.user_id
        <if test="tagSubName != null">
            INNER JOIN cms_tag_sub_relate tsr on tsr.RELATE_ID=a.activity_id
            INNER JOIN cms_tag_sub cts on cts.TAG_SUB_ID = tsr.TAG_SUB_ID and cts.TAG_NAME = #{tagSubName}
        </if>
        where 1=1
        <if test="activityName != null">
            AND a.ACTIVITY_NAME like #{activityName,jdbcType=VARCHAR}
        </if>
        <choose>
            <when test="selectType == 1">
                AND a.activity_state = 8
                AND a.ACTIVITY_ID NOT IN (SELECT cspa.ACTIVITY_ID FROM ccp_special_page_activity cspa)
            </when>
            <otherwise>
                AND a.ACTIVITY_ID IN (SELECT cspa.ACTIVITY_ID FROM ccp_special_page_activity cspa WHERE cspa.page_id =
                #{pageId})
            </otherwise>
        </choose>
        GROUP BY a.ACTIVITY_ID
        order by a.ACTIVITY_UPDATE_TIME desc
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>

    <select id="queryActivityByCreateTimeDesc" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
        a.ACTIVITY_ID,
        a.ACTIVITY_ICON_URL,
        a.ACTIVITY_NAME,
        cv.venue_name,
        a.ACTIVITY_SITE,
        a.ACTIVITY_ADDRESS,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_END_TIME,
        a.ACTIVITY_CREATE_TIME,
        d.dict_name,
        <if test="userId!=null">
            (SELECT count(*)
            FROM cms_user_wantgo cau
            WHERE cau.RELATE_ID = a.ACTIVITY_ID
            AND cau.USER_ID =#{userId}
            ) AS activityIsWant,
        </if>
        (SELECT count(*)
        FROM cms_user_wantgo cau
        WHERE cau.RELATE_ID = a.ACTIVITY_ID
        ) AS wantCount
        FROM cms_activity a
        LEFT JOIN cms_activity_venue_relevance cavr on a.activity_id = cavr.activity_id
        LEFT JOIN cms_venue cv on cavr.venue_id = cv.venue_id
        LEFT JOIN sys_dict d on a.activity_location = d.dict_id
        LEFT JOIN sys_dict b ON a.ratings_info = b.dict_id
        WHERE 1 = 1 AND a.ACTIVITY_IS_DEL = 1 AND a.ACTIVITY_STATE = 6
        <!-- 评分为A -->
        AND b.dict_name='A'
        ORDER BY ACTIVITY_CREATE_TIME DESC
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>

    <!-- 3.6文化日历 -->
    <select id="queryCultureCalendarList" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT b.ACTIVITY_ID,b.type
        FROM (
        (SELECT
        a.ACTIVITY_ID,
        round(6378.138 * 2 * asin(sqrt(pow(sin((a.ACTIVITY_LAT * pi() / 180 - #{lat} * pi() / 180) / 2), 2) +
        cos(a.ACTIVITY_LAT * pi() / 180) * cos(#{lat} * pi() / 180) * pow(sin((a.ACTIVITY_LON * pi() / 180 - #{lon}
        * pi() / 180) / 2),
        2))) * 1000) AS distance,
        <!--已订完调整到排序最后-->
        IF(
        (IFNULL(
        SUM(
        IF(ce.EVENT_DATE_TIME >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'),ce.AVAILABLE_COUNT,0)
        )
        ,0)
        )>0,0,1) sort1,
        <!--优先显示当天结束活动,其次显示当天开始活动-->
        (CASE
        WHEN a.activity_end_time=CURDATE() THEN 0
        WHEN a.activity_start_time=CURDATE() THEN 1
        ELSE 2 END
        ) sort2,
        <!--同一结束时间按评级降序-->
        (CASE
        WHEN b.dict_name='A' THEN 0
        WHEN b.dict_name='B' THEN 1
        WHEN b.dict_name='C' THEN 2
        WHEN b.dict_name='D' THEN 3
        ELSE 4 END
        ) sort3,
        <!--有图1;无图0-->
        1 sort4,
        <!-- 体系内活动 1;采集活动2-->
        1 type
        FROM cms_activity a
        LEFT JOIN cms_activity_event ce on a.ACTIVITY_ID=ce.ACTIVITY_ID
        LEFT JOIN sys_dict b ON a.ratings_info = b.dict_id
        WHERE a.ACTIVITY_IS_DEL = 1 AND a.ACTIVITY_STATE = 6
        <if test="selectDate != null">
            AND a.activity_start_time &lt;= #{selectDate}
            AND a.activity_end_time >= #{selectDate}
        </if>
        <if test="activityType != null">
            and a.ACTIVITY_TYPE = #{activityType}
        </if>
        group by a.activity_id
        <!--当天已结束的活动，滤掉不显示（以活动结束最后一场时间为准）-->
        HAVING CONVERT(substring(GROUP_CONCAT(DISTINCT ce.event_date_time
        ORDER BY ce.event_date_time DESC),1,16),CHAR)>= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
        )
        UNION
        (SELECT
        g.GATHER_ID AS ACTIVITY_ID,
        round(6378.138 * 2 * asin(sqrt(pow(sin((g.GATHER_ADDRESS_LAT * pi() / 180 - #{lat} * pi() / 180) / 2), 2) +
        cos(g.GATHER_ADDRESS_LAT * pi() / 180) * cos(#{lat} * pi() / 180) * pow(sin((g.GATHER_ADDRESS_LON * pi() / 180 -
        #{lon}
        * pi() / 180) / 2),
        2))) * 1000) AS distance,
        0 sort1,
        (CASE
        WHEN g.GATHER_END_DATE=CURDATE() THEN 0
        WHEN g.GATHER_START_DATE=CURDATE() THEN 1
        ELSE 2 END
        ) sort2,
        (CASE
        WHEN b.dict_name='A' THEN 0
        WHEN b.dict_name='B' THEN 1
        WHEN b.dict_name='C' THEN 2
        WHEN b.dict_name='D' THEN 3
        ELSE 4 END
        ) sort3,
        IF(g.GATHER_IMG = '' OR g.GATHER_IMG is NULL,2,0) sort4,
        2 type
        FROM cms_gather g
        LEFT JOIN sys_dict b ON g.GATHER_GRADE = b.dict_id
        WHERE g.GATHER_STATUS = 1
        <if test="selectDate != null">
            AND g.GATHER_START_DATE &lt;= #{selectDate}
            AND g.GATHER_END_DATE >= #{selectDate}
        </if>
        <if test="activityType != null">
            and g.GATHER_TAG = #{activityType}
        </if>
        group by g.GATHER_ID
        )
        ) b
        ORDER BY
        <if test="lat != null">sort1,distance,sort2</if>
        <if test="lat == null">sort1,sort3,sort4,sort2</if>
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>

    <!-- 3.6文化日历活动数 -->
    <select id="queryCultureCalendarActivityCount" resultType="java.lang.Integer" parameterType="java.util.Map">
        SELECT count(*)
        FROM (
        (SELECT
        a.ACTIVITY_ID
        FROM cms_activity a
        WHERE a.ACTIVITY_IS_DEL = 1 AND a.ACTIVITY_STATE = 6
        <if test="everyDate != null">
            AND a.activity_start_time &lt;= #{everyDate}
            AND a.activity_end_time >= #{everyDate}
        </if>
        )
        UNION
        (SELECT
        g.GATHER_ID AS ACTIVITY_ID
        FROM cms_gather g
        WHERE g.GATHER_STATUS = 1
        <if test="everyDate != null">
            AND g.GATHER_START_DATE &lt;= #{everyDate}
            AND g.GATHER_END_DATE >= #{everyDate}
        </if>
        )
        ) b
    </select>

    <!-- 3.6我的文化日历 -->
    <select id="queryMyCultureCalendarList" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT *
        FROM (
        (SELECT
        a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        a.activity_end_time,
        cv.venue_name,
        sd.dict_name,
        a.ACTIVITY_SITE,
        a.ACTIVITY_ADDRESS,
        a.ACTIVITY_ICON_URL,
        cae.event_date_time as eventDateTimes,
        1 as activity_is_reserved,
        0 as collectNum,
        1 as order_or_collect,
        a.activity_is_reservation,
        a.activity_is_free,
        a.activity_price,
        a.ACTIVITY_PAY_PRICE,
        a.PRICE_TYPE,
        IFNULL(
        SUM(
        IF(cae.EVENT_DATE_TIME >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'),cae.AVAILABLE_COUNT,0)
        )
        ,0) AS AVAILABLE_COUNT,
        ct.tag_name,
        1 type
        FROM cms_activity_order cao
        inner join cms_activity_event cae on cao.event_id = cae.event_id
        inner join cms_activity a on cao.activity_id = a.activity_id
        LEFT JOIN cms_activity_venue_relevance cavr ON a.activity_id = cavr.activity_id
        LEFT JOIN cms_venue cv ON cavr.venue_id = cv.venue_id
        LEFT JOIN sys_dict sd ON a.activity_location = sd.dict_id
        LEFT JOIN cms_tag ct ON FIND_IN_SET(ct.tag_id, a.activity_type)
        WHERE a.ACTIVITY_IS_DEL = 1 AND a.ACTIVITY_STATE = 6
        and cao.order_pay_status &lt;> 2
        and cao.user_id=#{userId}
        AND a.ACTIVITY_START_TIME &lt;= #{endDate}
        AND a.ACTIVITY_END_TIME >= #{startDate}
        and CONCAT(SUBSTRING(cae.event_date_time,1,10),' ',right(cae.EVENT_DATE_TIME,5)) >= DATE_FORMAT(NOW(), '%Y-%m-%d
        %H:%i')
        GROUP BY cao.ACTIVITY_ORDER_ID
        )
        UNION
        (SELECT
        a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        a.activity_end_time,
        cv.venue_name,
        sd.dict_name,
        a.ACTIVITY_SITE,
        a.ACTIVITY_ADDRESS,
        a.ACTIVITY_ICON_URL,
        CONCAT(DATE_FORMAT(a.ACTIVITY_START_TIME, '%m.%d'),'-',DATE_FORMAT(a.ACTIVITY_END_TIME, '%m.%d')) AS
        eventDateTimes,
        if(a.activity_is_reservation>1, 3, 0) AS activity_is_reserved,
        (SELECT
        count(cs.RELATE_ID)
        FROM cms_collect cs
        WHERE a.activity_id = cs.RELATE_ID and cs.user_id = #{userId} AND cs.TYPE = 2
        ) AS collectNum,
        2 AS order_or_collect,
        a.activity_is_reservation,
        a.activity_is_free,
        a.activity_price,
        a.ACTIVITY_PAY_PRICE,
        a.PRICE_TYPE,
        IFNULL(
        SUM(
        IF(cae.EVENT_DATE_TIME >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'),cae.AVAILABLE_COUNT,0)
        )
        ,0) AS AVAILABLE_COUNT,
        ct.tag_name,
        1 type
        FROM cms_collect cc
        INNER JOIN cms_activity a ON cc.relate_id = a.activity_id
        inner join cms_activity_event cae on a.ACTIVITY_ID = cae.ACTIVITY_ID
        LEFT JOIN cms_activity_venue_relevance cavr ON a.activity_id = cavr.activity_id
        LEFT JOIN cms_venue cv ON cavr.venue_id = cv.venue_id
        LEFT JOIN sys_dict sd ON a.activity_location = sd.dict_id
        LEFT JOIN cms_tag ct ON FIND_IN_SET(ct.tag_id, a.activity_type)
        WHERE a.ACTIVITY_IS_DEL = 1 AND a.ACTIVITY_STATE = 6
        and cc.user_id = #{userId}
        and a.activity_start_time &lt;= #{endDate}
        and a.activity_end_time >= #{startDate}
        GROUP BY a.activity_id
        HAVING CONVERT(substring(GROUP_CONCAT(DISTINCT cae.event_date_time
        ORDER BY cae.event_date_time DESC),1,16),CHAR)>= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
        )
        UNION
        (SELECT
        g.GATHER_ID as ACTIVITY_ID,
        '' as ACTIVITY_NAME,
        g.GATHER_END_DATE as activity_end_time,
        '' as venue_name,
        '' as dict_name,
        '' as ACTIVITY_SITE,
        '' as ACTIVITY_ADDRESS,
        '' as ACTIVITY_ICON_URL,
        '' as eventDateTimes,
        '' as activity_is_reserved,
        '' as collectNum,
        '' as order_or_collect,
        '' as activity_is_reservation,
        '' as activity_is_free,
        '' as activity_price,
        '' as ACTIVITY_PAY_PRICE,
        '' as PRICE_TYPE,
        '' as AVAILABLE_COUNT,
        '' as tag_name,
        2 type
        FROM cms_gather g
        INNER JOIN cms_collect cc ON cc.USER_ID = #{userId} and cc.TYPE = 6 and g.GATHER_ID = cc.RELATE_ID
        WHERE g.GATHER_STATUS = 1
        AND g.GATHER_START_DATE &lt;= #{endDate}
        AND g.GATHER_END_DATE >= #{startDate}
        )
        ) b
        ORDER BY b.activity_end_time
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>

    <!-- 查询pc首页活动 -->
    <select id="queryPcnewActivity" resultMap="BaseResultMap"
            parameterType="java.util.Map">
        SELECT a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        a.ACTIVITY_ICON_URL,
        a.ACTIVITY_ADDRESS,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_END_TIME,
        c.AVAILABLE_COUNT,
        a.ACTIVITY_IS_RESERVATION,
        c.event_date_time AS END_TIME,
        a.cancel_end_time
        FROM cms_activity a
        left join (SELECT b.activity_id,
        IFNULL(SUM(b.AVAILABLE_COUNT),0) AS AVAILABLE_COUNT,
        min(CONCAT(substring(b.event_date_time, 1, 16),":00")) as event_date_time
        FROM cms_activity_event b
        WHERE
        b.EVENT_DATE_TIME > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
        GROUP BY b.activity_id) c on a.activity_id = c.activity_id
        WHERE 1=1

        <if test="activityType != null ">
            AND a.ACTIVITY_TYPE like #{activityType,jdbcType=VARCHAR}
        </if>
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        order by
        <if test="orderBy != null ">
            a.PUBLIC_TIME DESC
        </if>
        <if test="orderBy == null ">
            a.ACTIVITY_UPDATE_TIME desc
        </if>
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>

    <!-- 查询pc首页活动 -->
    <select id="queryPctuijianActivity" resultMap="BaseResultMap">
        SELECT a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        a.ACTIVITY_ICON_URL,
        a.ACTIVITY_ADDRESS,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_END_TIME,
        c.AVAILABLE_COUNT,
        a.ACTIVITY_IS_RESERVATION,
        a.ACTIVITY_END_TIME,
        c.event_date_time AS END_TIME
        FROM cms_activity a
        left join (SELECT b.activity_id,
        IFNULL(SUM(b.AVAILABLE_COUNT),0) AS AVAILABLE_COUNT,
        min(CONCAT(substring(b.event_date_time, 1, 16),":00")) as event_date_time
        FROM cms_activity_event b
        WHERE
        b.EVENT_DATE_TIME > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
        GROUP BY b.activity_id) c on a.activity_id = c.activity_id
        WHERE
        a.ACTIVITY_ID in
        <foreach item="item" index="index" collection="list"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="queryCultureMapActivityListById" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
        a.ACTIVITY_ID,a.ACTIVITY_NAME,a.ACTIVITY_START_TIME,a.ACTIVITY_END_TIME,a.activity_is_free,
        a.ACTIVITY_PRICE,a.ACTIVITY_PAY_PRICE,a.ACTIVITY_ICON_URL,a.sys_no,a.sys_id,a.ACTIVITY_SUBJECT,cs.year_browse_count,
        tag.tag_name,a.activity_update_time,a.ACTIVITY_ADDRESS,a.ACTIVITY_SITE,
        if((select count(*) from cms_recommend_related crr where crr.RECOMMEND_COLUMN_TYPE =4 and crr.RELATED_ID =
        a.activity_id)>0,'Y','N') as ACTIVITY_RECOMMEND,
        IFNULL(
        SUM(
        IF(ce.EVENT_DATE_TIME >= DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'),ce.AVAILABLE_COUNT,0)
        )
        ,0) AS AVAILABLE_COUNT,
        a.ACTIVITY_IS_RESERVATION,a.PRICE_TYPE,a.SPIKE_TYPE,
        v.venue_name,d.dict_name
        <if test="userId != null">
            ,(SELECT count(*) from cms_collect cc where a.activity_id=cc.RELATE_ID and cc.USER_ID = #{userId} and
            cc.TYPE= 2) as collectNum
        </if>
        from cms_activity a
        LEFT JOIN cms_activity_venue_relevance cavr on a.ACTIVITY_ID=cavr.ACTIVITY_ID
        LEFT JOIN cms_venue v on cavr.venue_id = v.venue_id
        LEFT JOIN cms_activity_event ce on a.ACTIVITY_ID=ce.ACTIVITY_ID
        left join cms_tag tag on find_in_set(tag.tag_id, a.activity_type)
        left join cms_statistics cs on a.activity_id = cs.s_id
        LEFT JOIN sys_dict d on a.activity_location = d.dict_id
        WHERE 1=1
        <if test="venueId != null">
            AND v.VENUE_ID = #{venueId,jdbcType=VARCHAR}
        </if>
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        GROUP BY a.ACTIVITY_ID
        ORDER BY a.ACTIVITY_UPDATE_TIME desc
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>


    <select id="queryCmsActivityByMember" resultMap="BaseResultMap" parameterType="java.util.Map"  flushCache="true" useCache="false">
      SELECT
    a.activity_ID,
	a.ACTIVITY_NAME,
	a.ACTIVITY_CREATE_TIME,
	a.ACTIVITY_ICON_URL,
	a.ACTIVITY_ADDRESS,
	a.ACTIVITY_START_TIME,
	a.ACTIVITY_END_TIME,
    a.activity_is_reservation,
	c.AVAILABLE_COUNT,
    min(c.event_date_time) AS activity_end_time
	<if test="createUser!=null">
        ,(
        SELECT
        count(*)
        FROM
        cms_collect cc
        WHERE
        a.activity_id = cc.RELATE_ID
        AND cc.USER_ID = '${createUser}'
        AND cc.TYPE = 2
        ) AS collectNum
    </if>
FROM
	cms_member m
JOIN cms_member_relation r ON m.id = r.member_id
AND r.relation_type = 1
JOIN cms_activity_venue_relevance v ON r.relation_id = v.VENUE_ID
JOIN cms_activity a ON v.ACTIVITY_ID = a.ACTIVITY_ID
LEFT JOIN (
	SELECT
		b.activity_id,
		IFNULL(SUM(b.AVAILABLE_COUNT), 0) AS AVAILABLE_COUNT,
		b.event_date_time
	FROM
		cms_activity_event b
	WHERE
		b.EVENT_DATE_TIME > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
	GROUP BY
		b.activity_id
) c ON a.activity_id = c.activity_id

WHERE
	r.member_id = '${id}'
and	a.activity_state = 6
AND a.activity_is_del = 1
GROUP BY  a.activity_id /*排序*/
ORDER BY
	a.ACTIVITY_CREATE_TIME DESC
        <if test="isShowPage == true ">
            limit ${firstResult},${rows}
        </if>
    </select>
    
	<select id="queryRelatedActivity" resultMap="BaseResultMap" parameterType="java.util.Map">
	select ca.*
	FROM cms_activity_venue_relevance cavr
	LEFT JOIN cms_activity ca ON ca.activity_id = cavr.activity_id
	WHERE 1=1
	<if test="activityIsDel != null">
	AND ca.activity_is_del = #{activityIsDel,jdbcType=INTEGER}
	</if>
	<if test="activityState != null">
	AND ca.activity_state = #{activityState,jdbcType=INTEGER}
	</if>
	<if test="venueId != null">
	AND cavr.venue_id = #{venueId,jdbcType=VARCHAR}
	</if>
	ORDER BY ca.activity_start_time DESC
	limit #{firstResult},#{rows}
	</select>
	
	<select id="queryRelatedActivityCount" resultType="java.lang.Integer" parameterType="java.util.Map">
	select count(ca.activity_id)
	FROM cms_activity_venue_relevance cavr
	LEFT JOIN cms_activity ca ON ca.activity_id = cavr.activity_id
	WHERE 1=1
	<if test="activityIsDel != null">
	AND ca.activity_is_del = #{activityIsDel,jdbcType=INTEGER}
	</if>
	<if test="activityState != null">
	AND ca.activity_state = #{activityState,jdbcType=INTEGER}
	</if>
	<if test="venueId != null">
	AND cavr.venue_id = #{venueId,jdbcType=VARCHAR}
	</if>
	</select>

    <select id="queryAssociationHistoryActivityCount" parameterType="java.util.Map" resultType="java.lang.Integer">

        SELECT
      	COUNT(DISTINCT a.ACTIVITY_ID)
        FROM
        cms_activity a
        LEFT JOIN cms_activity_venue_relevance r ON a.activity_id=r.activity_id
        LEFT JOIN cms_venue v on v.venue_id=r.venue_id
        LEFT JOIN cms_tag ct ON ct.tag_id = a.activity_type
        LEFT JOIN cms_activity_event ce ON a.ACTIVITY_ID = ce.ACTIVITY_ID
        LEFT JOIN (select activity_id, count(activity_id) as yearBrowseCount from cms_activity_user_statistics where
        OPERATE_TYPE=1
        AND DATE_SUB(CURDATE(), INTERVAL 1 YEAR) &lt;= CREATE_TIME
        group by activity_id) as caus on caus.ACTIVITY_ID = a.activity_id
        WHERE 1=1
        AND a.activity_is_del = 1 AND a.activity_state = 6
        AND cast(a.ACTIVITY_END_TIME as datetime) &lt;=
        #{activityEndTime,jdbcType=VARCHAR}

        AND ASSN_ID=#{assnId}

    </select>

    <select id="queryCalendarAdvert" resultMap="BaseResultMap"
            parameterType="java.util.Map">
        SELECT a.ACTIVITY_ID,
        a.ACTIVITY_NAME,
        a.ACTIVITY_ICON_URL,
        a.ACTIVITY_ADDRESS,
        a.ACTIVITY_START_TIME,
        a.ACTIVITY_END_TIME,
        c.AVAILABLE_COUNT,
        a.ACTIVITY_IS_RESERVATION,
        c.event_date_time AS END_TIME,
        a.cancel_end_time
        FROM cms_activity a
        left join (SELECT b.activity_id,
        IFNULL(SUM(b.AVAILABLE_COUNT),0) AS AVAILABLE_COUNT,
        min(CONCAT(substring(b.event_date_time, 1, 16),":00")) as event_date_time
        FROM cms_activity_event b
        WHERE
        b.EVENT_DATE_TIME > DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i')
        GROUP BY b.activity_id) c on a.activity_id = c.activity_id
        WHERE 1=1

        <if test="TIME != null ">
            AND (SELECT REPLACE(a.ACTIVITY_START_TIME,'-',''))  &lt;= #{TIME,jdbcType=VARCHAR}
            AND (SELECT REPLACE(a.ACTIVITY_END_TIME,'-',''))  &gt;= #{TIME,jdbcType=VARCHAR}

        </if>
        <if test="activityType != null ">
            AND a.ACTIVITY_TYPE like #{activityType,jdbcType=VARCHAR}
        </if>
        <if test="activityIsDel != null">
            AND a.ACTIVITY_IS_DEL = #{activityIsDel,jdbcType=INTEGER}
        </if>
        <if test="activityState != null">
            AND a.ACTIVITY_STATE = #{activityState,jdbcType=INTEGER}
        </if>
        order by
        <if test="orderBy != null ">
            a.PUBLIC_TIME DESC
        </if>
        <if test="orderBy == null ">
            a.ACTIVITY_UPDATE_TIME desc
        </if>
        <if test="firstResult != null">
            limit ${firstResult},${rows}
        </if>
    </select>
</mapper>