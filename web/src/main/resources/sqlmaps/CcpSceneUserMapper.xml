<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sun3d.why.dao.ccp.CcpSceneUserMapper" >
  <resultMap id="BaseResultMap" type="com.sun3d.why.model.ccp.CcpSceneUser" >
    <id column="USER_ID" property="userId" jdbcType="VARCHAR" />
    <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
    <result column="USER_MOBILE" property="userMobile" jdbcType="VARCHAR" />
    <result column="USER_MAX_VOTE" property="userMaxVote" jdbcType="INTEGER" />
    <result column="USER_MAX_IMG" property="userMaxImg" jdbcType="VARCHAR" />
    <result column="USER_INTEGRAL_ACTIVITY" property="userIntegralActivity" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    
    <result column="USER_HEAD_IMG_URL" property="userHeadImgUrl" jdbcType="VARCHAR" />
    <result column="USER_NICK_NAME" property="userNickName" jdbcType="VARCHAR" />
    <result column="SCENE_IMG_CONTENT" property="sceneImgContent" jdbcType="VARCHAR" />
    <result column="SCENE_IMG_URL" property="sceneImgUrl" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    USER_ID, USER_NAME, USER_MOBILE,USER_MAX_VOTE,USER_MAX_IMG,USER_INTEGRAL_ACTIVITY, CREATE_TIME
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from ccp_scene_user
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from ccp_scene_user
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </delete>
  
  <insert id="insert" parameterType="com.sun3d.why.model.ccp.CcpSceneUser" >
    insert into ccp_scene_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      USER_ID,
      <if test="userName != null" >
        USER_NAME,
      </if>
      <if test="userMobile != null" >
        USER_MOBILE,
      </if>
      <if test="userMaxVote != null" >
        USER_MAX_VOTE,
      </if>
      <if test="userMaxImg != null" >
        USER_MAX_IMG,
      </if>
      <if test="userIntegralActivity != null" >
        USER_INTEGRAL_ACTIVITY,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{userId,jdbcType=VARCHAR},
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userMobile != null" >
        #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="userMaxVote != null" >
        #{userMaxVote,jdbcType=INTEGER},
      </if>
      <if test="userMaxImg != null" >
        #{userMaxImg,jdbcType=VARCHAR},
      </if>
      <if test="userIntegralActivity != null" >
        #{userIntegralActivity,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  
  <update id="update" parameterType="com.sun3d.why.model.ccp.CcpSceneUser" >
    update ccp_scene_user
    <set >
      <if test="userName != null" >
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userMobile != null" >
        USER_MOBILE = #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="userMaxVote != null" >
        USER_MAX_VOTE = #{userMaxVote,jdbcType=INTEGER},
      </if>
      <if test="userMaxImg != null" >
        USER_MAX_IMG = #{userMaxImg,jdbcType=VARCHAR},
      </if>
      <if test="userIntegralActivity != null" >
        USER_INTEGRAL_ACTIVITY = #{userIntegralActivity,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </update>
  
  <select id="querySceneUserRanking" resultMap="BaseResultMap" parameterType="java.lang.Integer">
  	SELECT MAX(b.VOTE_COUNT) USER_MAX_VOTE, b.*
	from (select
			ccu.USER_ID, 
	  		ccu.USER_NAME, 
	  		ccu.USER_MOBILE,
	  		ctu.USER_NAME as USER_NICK_NAME,
			ctu.USER_HEAD_IMG_URL,
			cci.SCENE_IMG_ID USER_MAX_IMG,
			cci.SCENE_IMG_URL, 
	    	cci.SCENE_IMG_CONTENT,
	    	cci.CREATE_TIME,
			(SELECT count(*)
	        FROM ccp_scene_vote ccv
	        WHERE ccv.SCENE_IMG_ID = cci.SCENE_IMG_ID and date_format(ccv.CREATE_TIME,'%Y-%m') = date_format(now(),'%Y-%m') 
	        ) as VOTE_COUNT
		from ccp_scene_img cci
		LEFT JOIN ccp_scene_user ccu ON ccu.USER_ID = cci.USER_ID
		LEFT JOIN cms_terminal_user ctu ON ctu.USER_ID = ccu.USER_ID
		WHERE cci.SCENE_STATUS=1
		ORDER BY VOTE_COUNT DESC
	) b
	GROUP BY b.USER_ID
	HAVING MAX(b.VOTE_COUNT) >= 0
	ORDER BY MAX(b.VOTE_COUNT) DESC, b.CREATE_TIME
  	limit 0,50
  </select>
  
  <select id="selectRankingByVoteCount" resultType="java.lang.Integer" >
  	select count(*)+1
    from(SELECT MAX(b.VOTE_COUNT) VOTE_COUNT,b.CREATE_TIME 
	     FROM (select
				ccu.USER_ID, 
		  		cci.CREATE_TIME,
				(SELECT count(*)
		        FROM ccp_scene_vote ccv
		        WHERE ccv.SCENE_IMG_ID = cci.SCENE_IMG_ID and date_format(ccv.CREATE_TIME,'%Y-%m') = date_format(now(),'%Y-%m')
		        ) as VOTE_COUNT
			from ccp_scene_img cci
			INNER JOIN ccp_scene_user ccu ON ccu.USER_ID = cci.USER_ID
			LEFT JOIN cms_terminal_user ctu ON ctu.USER_ID = ccu.USER_ID
			WHERE cci.SCENE_STATUS=1
		) b
		GROUP BY b.USER_ID
	) c
	WHERE c.VOTE_COUNT > #{voteCount} or (c.VOTE_COUNT = #{voteCount} and c.CREATE_TIME &lt; #{createTime})
  </select>
</mapper>